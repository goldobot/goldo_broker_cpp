// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: goldo/camera.proto

#include "goldo/camera.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_goldo_2fcamera_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_goldo_2fcamera_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Detections_Detection_Corner;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_goldo_2fcamera_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Detections_Detection;
}  // namespace protobuf_goldo_2fcamera_2eproto
namespace goldo {
namespace camera {
class ImageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Image>
      _instance;
} _Image_default_instance_;
class Detections_Detection_CornerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Detections_Detection_Corner>
      _instance;
} _Detections_Detection_Corner_default_instance_;
class Detections_DetectionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Detections_Detection>
      _instance;
} _Detections_Detection_default_instance_;
class DetectionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Detections>
      _instance;
} _Detections_default_instance_;
}  // namespace camera
}  // namespace goldo
namespace protobuf_goldo_2fcamera_2eproto {
static void InitDefaultsImage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::camera::_Image_default_instance_;
    new (ptr) ::goldo::camera::Image();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::camera::Image::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Image =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsImage}, {}};

static void InitDefaultsDetections_Detection_Corner() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::camera::_Detections_Detection_Corner_default_instance_;
    new (ptr) ::goldo::camera::Detections_Detection_Corner();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::camera::Detections_Detection_Corner::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Detections_Detection_Corner =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDetections_Detection_Corner}, {}};

static void InitDefaultsDetections_Detection() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::camera::_Detections_Detection_default_instance_;
    new (ptr) ::goldo::camera::Detections_Detection();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::camera::Detections_Detection::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Detections_Detection =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDetections_Detection}, {
      &protobuf_goldo_2fcamera_2eproto::scc_info_Detections_Detection_Corner.base,}};

static void InitDefaultsDetections() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::camera::_Detections_default_instance_;
    new (ptr) ::goldo::camera::Detections();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::camera::Detections::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Detections =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDetections}, {
      &protobuf_goldo_2fcamera_2eproto::scc_info_Detections_Detection.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Image.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Detections_Detection_Corner.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Detections_Detection.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Detections.base);
}

::google::protobuf::Metadata file_level_metadata[4];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::camera::Image, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::camera::Image, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::camera::Image, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::camera::Image, encoding_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::camera::Image, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::camera::Detections_Detection_Corner, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::camera::Detections_Detection_Corner, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::camera::Detections_Detection_Corner, y_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::camera::Detections_Detection, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::camera::Detections_Detection, tag_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::camera::Detections_Detection, corners_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::camera::Detections_Detection, ux_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::camera::Detections_Detection, uy_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::camera::Detections, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::camera::Detections, detections_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::goldo::camera::Image)},
  { 9, -1, sizeof(::goldo::camera::Detections_Detection_Corner)},
  { 16, -1, sizeof(::goldo::camera::Detections_Detection)},
  { 25, -1, sizeof(::goldo::camera::Detections)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::camera::_Image_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::camera::_Detections_Detection_Corner_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::camera::_Detections_Detection_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::camera::_Detections_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "goldo/camera.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022goldo/camera.proto\022\014goldo.camera\"\207\001\n\005I"
      "mage\022\r\n\005width\030\001 \001(\r\022\016\n\006height\030\002 \001(\r\022.\n\010e"
      "ncoding\030\003 \001(\0162\034.goldo.camera.Image.Encod"
      "ing\022\014\n\004data\030\004 \001(\014\"!\n\010Encoding\022\013\n\007UNKNOWN"
      "\020\000\022\010\n\004JPEG\020\001\"\326\001\n\nDetections\0226\n\ndetection"
      "s\030\001 \003(\0132\".goldo.camera.Detections.Detect"
      "ion\032\217\001\n\tDetection\022\016\n\006tag_id\030\001 \001(\005\022:\n\007cor"
      "ners\030\002 \003(\0132).goldo.camera.Detections.Det"
      "ection.Corner\022\n\n\002ux\030\003 \001(\002\022\n\n\002uy\030\004 \001(\002\032\036\n"
      "\006Corner\022\t\n\001x\030\001 \001(\005\022\t\n\001y\030\002 \001(\005b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 397);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "goldo/camera.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_goldo_2fcamera_2eproto
namespace goldo {
namespace camera {
const ::google::protobuf::EnumDescriptor* Image_Encoding_descriptor() {
  protobuf_goldo_2fcamera_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_goldo_2fcamera_2eproto::file_level_enum_descriptors[0];
}
bool Image_Encoding_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Image_Encoding Image::UNKNOWN;
const Image_Encoding Image::JPEG;
const Image_Encoding Image::Encoding_MIN;
const Image_Encoding Image::Encoding_MAX;
const int Image::Encoding_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Image::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Image::kWidthFieldNumber;
const int Image::kHeightFieldNumber;
const int Image::kEncodingFieldNumber;
const int Image::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Image::Image()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fcamera_2eproto::scc_info_Image.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.camera.Image)
}
Image::Image(const Image& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  ::memcpy(&width_, &from.width_,
    static_cast<size_t>(reinterpret_cast<char*>(&encoding_) -
    reinterpret_cast<char*>(&width_)) + sizeof(encoding_));
  // @@protoc_insertion_point(copy_constructor:goldo.camera.Image)
}

void Image::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&encoding_) -
      reinterpret_cast<char*>(&width_)) + sizeof(encoding_));
}

Image::~Image() {
  // @@protoc_insertion_point(destructor:goldo.camera.Image)
  SharedDtor();
}

void Image::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Image::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Image::descriptor() {
  ::protobuf_goldo_2fcamera_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fcamera_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Image& Image::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fcamera_2eproto::scc_info_Image.base);
  return *internal_default_instance();
}


void Image::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.camera.Image)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&encoding_) -
      reinterpret_cast<char*>(&width_)) + sizeof(encoding_));
  _internal_metadata_.Clear();
}

bool Image::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.camera.Image)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 width = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 height = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .goldo.camera.Image.Encoding encoding = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_encoding(static_cast< ::goldo::camera::Image_Encoding >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.camera.Image)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.camera.Image)
  return false;
#undef DO_
}

void Image::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.camera.Image)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 width = 1;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->width(), output);
  }

  // uint32 height = 2;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->height(), output);
  }

  // .goldo.camera.Image.Encoding encoding = 3;
  if (this->encoding() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->encoding(), output);
  }

  // bytes data = 4;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.camera.Image)
}

::google::protobuf::uint8* Image::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.camera.Image)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 width = 1;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->width(), target);
  }

  // uint32 height = 2;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->height(), target);
  }

  // .goldo.camera.Image.Encoding encoding = 3;
  if (this->encoding() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->encoding(), target);
  }

  // bytes data = 4;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.camera.Image)
  return target;
}

size_t Image::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.camera.Image)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes data = 4;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // uint32 width = 1;
  if (this->width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->width());
  }

  // uint32 height = 2;
  if (this->height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->height());
  }

  // .goldo.camera.Image.Encoding encoding = 3;
  if (this->encoding() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->encoding());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Image::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.camera.Image)
  GOOGLE_DCHECK_NE(&from, this);
  const Image* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Image>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.camera.Image)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.camera.Image)
    MergeFrom(*source);
  }
}

void Image::MergeFrom(const Image& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.camera.Image)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
  if (from.encoding() != 0) {
    set_encoding(from.encoding());
  }
}

void Image::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.camera.Image)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Image::CopyFrom(const Image& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.camera.Image)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Image::IsInitialized() const {
  return true;
}

void Image::Swap(Image* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Image::InternalSwap(Image* other) {
  using std::swap;
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(width_, other->width_);
  swap(height_, other->height_);
  swap(encoding_, other->encoding_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Image::GetMetadata() const {
  protobuf_goldo_2fcamera_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fcamera_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Detections_Detection_Corner::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Detections_Detection_Corner::kXFieldNumber;
const int Detections_Detection_Corner::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Detections_Detection_Corner::Detections_Detection_Corner()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fcamera_2eproto::scc_info_Detections_Detection_Corner.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.camera.Detections.Detection.Corner)
}
Detections_Detection_Corner::Detections_Detection_Corner(const Detections_Detection_Corner& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:goldo.camera.Detections.Detection.Corner)
}

void Detections_Detection_Corner::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
}

Detections_Detection_Corner::~Detections_Detection_Corner() {
  // @@protoc_insertion_point(destructor:goldo.camera.Detections.Detection.Corner)
  SharedDtor();
}

void Detections_Detection_Corner::SharedDtor() {
}

void Detections_Detection_Corner::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Detections_Detection_Corner::descriptor() {
  ::protobuf_goldo_2fcamera_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fcamera_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Detections_Detection_Corner& Detections_Detection_Corner::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fcamera_2eproto::scc_info_Detections_Detection_Corner.base);
  return *internal_default_instance();
}


void Detections_Detection_Corner::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.camera.Detections.Detection.Corner)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _internal_metadata_.Clear();
}

bool Detections_Detection_Corner::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.camera.Detections.Detection.Corner)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.camera.Detections.Detection.Corner)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.camera.Detections.Detection.Corner)
  return false;
#undef DO_
}

void Detections_Detection_Corner::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.camera.Detections.Detection.Corner)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->x(), output);
  }

  // int32 y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->y(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.camera.Detections.Detection.Corner)
}

::google::protobuf::uint8* Detections_Detection_Corner::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.camera.Detections.Detection.Corner)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->x(), target);
  }

  // int32 y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->y(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.camera.Detections.Detection.Corner)
  return target;
}

size_t Detections_Detection_Corner::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.camera.Detections.Detection.Corner)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 x = 1;
  if (this->x() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());
  }

  // int32 y = 2;
  if (this->y() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Detections_Detection_Corner::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.camera.Detections.Detection.Corner)
  GOOGLE_DCHECK_NE(&from, this);
  const Detections_Detection_Corner* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Detections_Detection_Corner>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.camera.Detections.Detection.Corner)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.camera.Detections.Detection.Corner)
    MergeFrom(*source);
  }
}

void Detections_Detection_Corner::MergeFrom(const Detections_Detection_Corner& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.camera.Detections.Detection.Corner)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
}

void Detections_Detection_Corner::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.camera.Detections.Detection.Corner)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Detections_Detection_Corner::CopyFrom(const Detections_Detection_Corner& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.camera.Detections.Detection.Corner)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Detections_Detection_Corner::IsInitialized() const {
  return true;
}

void Detections_Detection_Corner::Swap(Detections_Detection_Corner* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Detections_Detection_Corner::InternalSwap(Detections_Detection_Corner* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Detections_Detection_Corner::GetMetadata() const {
  protobuf_goldo_2fcamera_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fcamera_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Detections_Detection::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Detections_Detection::kTagIdFieldNumber;
const int Detections_Detection::kCornersFieldNumber;
const int Detections_Detection::kUxFieldNumber;
const int Detections_Detection::kUyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Detections_Detection::Detections_Detection()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fcamera_2eproto::scc_info_Detections_Detection.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.camera.Detections.Detection)
}
Detections_Detection::Detections_Detection(const Detections_Detection& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      corners_(from.corners_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&tag_id_, &from.tag_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&uy_) -
    reinterpret_cast<char*>(&tag_id_)) + sizeof(uy_));
  // @@protoc_insertion_point(copy_constructor:goldo.camera.Detections.Detection)
}

void Detections_Detection::SharedCtor() {
  ::memset(&tag_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uy_) -
      reinterpret_cast<char*>(&tag_id_)) + sizeof(uy_));
}

Detections_Detection::~Detections_Detection() {
  // @@protoc_insertion_point(destructor:goldo.camera.Detections.Detection)
  SharedDtor();
}

void Detections_Detection::SharedDtor() {
}

void Detections_Detection::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Detections_Detection::descriptor() {
  ::protobuf_goldo_2fcamera_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fcamera_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Detections_Detection& Detections_Detection::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fcamera_2eproto::scc_info_Detections_Detection.base);
  return *internal_default_instance();
}


void Detections_Detection::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.camera.Detections.Detection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  corners_.Clear();
  ::memset(&tag_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uy_) -
      reinterpret_cast<char*>(&tag_id_)) + sizeof(uy_));
  _internal_metadata_.Clear();
}

bool Detections_Detection::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.camera.Detections.Detection)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 tag_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tag_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .goldo.camera.Detections.Detection.Corner corners = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_corners()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float ux = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ux_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float uy = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &uy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.camera.Detections.Detection)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.camera.Detections.Detection)
  return false;
#undef DO_
}

void Detections_Detection::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.camera.Detections.Detection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 tag_id = 1;
  if (this->tag_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->tag_id(), output);
  }

  // repeated .goldo.camera.Detections.Detection.Corner corners = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->corners_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->corners(static_cast<int>(i)),
      output);
  }

  // float ux = 3;
  if (this->ux() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->ux(), output);
  }

  // float uy = 4;
  if (this->uy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->uy(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.camera.Detections.Detection)
}

::google::protobuf::uint8* Detections_Detection::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.camera.Detections.Detection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 tag_id = 1;
  if (this->tag_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->tag_id(), target);
  }

  // repeated .goldo.camera.Detections.Detection.Corner corners = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->corners_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->corners(static_cast<int>(i)), deterministic, target);
  }

  // float ux = 3;
  if (this->ux() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->ux(), target);
  }

  // float uy = 4;
  if (this->uy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->uy(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.camera.Detections.Detection)
  return target;
}

size_t Detections_Detection::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.camera.Detections.Detection)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .goldo.camera.Detections.Detection.Corner corners = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->corners_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->corners(static_cast<int>(i)));
    }
  }

  // int32 tag_id = 1;
  if (this->tag_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tag_id());
  }

  // float ux = 3;
  if (this->ux() != 0) {
    total_size += 1 + 4;
  }

  // float uy = 4;
  if (this->uy() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Detections_Detection::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.camera.Detections.Detection)
  GOOGLE_DCHECK_NE(&from, this);
  const Detections_Detection* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Detections_Detection>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.camera.Detections.Detection)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.camera.Detections.Detection)
    MergeFrom(*source);
  }
}

void Detections_Detection::MergeFrom(const Detections_Detection& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.camera.Detections.Detection)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  corners_.MergeFrom(from.corners_);
  if (from.tag_id() != 0) {
    set_tag_id(from.tag_id());
  }
  if (from.ux() != 0) {
    set_ux(from.ux());
  }
  if (from.uy() != 0) {
    set_uy(from.uy());
  }
}

void Detections_Detection::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.camera.Detections.Detection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Detections_Detection::CopyFrom(const Detections_Detection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.camera.Detections.Detection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Detections_Detection::IsInitialized() const {
  return true;
}

void Detections_Detection::Swap(Detections_Detection* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Detections_Detection::InternalSwap(Detections_Detection* other) {
  using std::swap;
  CastToBase(&corners_)->InternalSwap(CastToBase(&other->corners_));
  swap(tag_id_, other->tag_id_);
  swap(ux_, other->ux_);
  swap(uy_, other->uy_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Detections_Detection::GetMetadata() const {
  protobuf_goldo_2fcamera_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fcamera_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Detections::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Detections::kDetectionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Detections::Detections()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fcamera_2eproto::scc_info_Detections.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.camera.Detections)
}
Detections::Detections(const Detections& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      detections_(from.detections_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:goldo.camera.Detections)
}

void Detections::SharedCtor() {
}

Detections::~Detections() {
  // @@protoc_insertion_point(destructor:goldo.camera.Detections)
  SharedDtor();
}

void Detections::SharedDtor() {
}

void Detections::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Detections::descriptor() {
  ::protobuf_goldo_2fcamera_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fcamera_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Detections& Detections::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fcamera_2eproto::scc_info_Detections.base);
  return *internal_default_instance();
}


void Detections::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.camera.Detections)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  detections_.Clear();
  _internal_metadata_.Clear();
}

bool Detections::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.camera.Detections)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .goldo.camera.Detections.Detection detections = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_detections()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.camera.Detections)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.camera.Detections)
  return false;
#undef DO_
}

void Detections::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.camera.Detections)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .goldo.camera.Detections.Detection detections = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->detections_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->detections(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.camera.Detections)
}

::google::protobuf::uint8* Detections::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.camera.Detections)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .goldo.camera.Detections.Detection detections = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->detections_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->detections(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.camera.Detections)
  return target;
}

size_t Detections::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.camera.Detections)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .goldo.camera.Detections.Detection detections = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->detections_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->detections(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Detections::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.camera.Detections)
  GOOGLE_DCHECK_NE(&from, this);
  const Detections* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Detections>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.camera.Detections)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.camera.Detections)
    MergeFrom(*source);
  }
}

void Detections::MergeFrom(const Detections& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.camera.Detections)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  detections_.MergeFrom(from.detections_);
}

void Detections::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.camera.Detections)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Detections::CopyFrom(const Detections& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.camera.Detections)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Detections::IsInitialized() const {
  return true;
}

void Detections::Swap(Detections* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Detections::InternalSwap(Detections* other) {
  using std::swap;
  CastToBase(&detections_)->InternalSwap(CastToBase(&other->detections_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Detections::GetMetadata() const {
  protobuf_goldo_2fcamera_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fcamera_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace camera
}  // namespace goldo
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::camera::Image* Arena::CreateMaybeMessage< ::goldo::camera::Image >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::camera::Image >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::camera::Detections_Detection_Corner* Arena::CreateMaybeMessage< ::goldo::camera::Detections_Detection_Corner >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::camera::Detections_Detection_Corner >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::camera::Detections_Detection* Arena::CreateMaybeMessage< ::goldo::camera::Detections_Detection >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::camera::Detections_Detection >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::camera::Detections* Arena::CreateMaybeMessage< ::goldo::camera::Detections >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::camera::Detections >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
