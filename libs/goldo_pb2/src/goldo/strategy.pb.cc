// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: goldo/strategy.proto

#include "goldo/strategy.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_goldo_2fcommon_2fgeometry_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_goldo_2fcommon_2fgeometry_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Box;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_goldo_2fcommon_2fgeometry_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Circle;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_goldo_2fcommon_2fgeometry_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Polygon;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_goldo_2fcommon_2fgeometry_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_StaticPose;
}  // namespace protobuf_goldo_2fcommon_2fgeometry_2eproto
namespace protobuf_goldo_2fstrategy_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_goldo_2fstrategy_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ActionConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_goldo_2fstrategy_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_StrategyConfig_ActionsEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_goldo_2fstrategy_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_Area;
}  // namespace protobuf_goldo_2fstrategy_2eproto
namespace goldo {
namespace strategy {
class AreaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Area>
      _instance;
  const ::goldo::common::geometry::Box* box_;
  const ::goldo::common::geometry::Circle* circle_;
  const ::goldo::common::geometry::Polygon* polygo_;
} _Area_default_instance_;
class ActionConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ActionConfig>
      _instance;
} _ActionConfig_default_instance_;
class StrategyConfig_ActionsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StrategyConfig_ActionsEntry_DoNotUse>
      _instance;
} _StrategyConfig_ActionsEntry_DoNotUse_default_instance_;
class StrategyConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StrategyConfig>
      _instance;
} _StrategyConfig_default_instance_;
class StrategyStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StrategyState>
      _instance;
} _StrategyState_default_instance_;
}  // namespace strategy
}  // namespace goldo
namespace protobuf_goldo_2fstrategy_2eproto {
static void InitDefaultsArea() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::strategy::_Area_default_instance_;
    new (ptr) ::goldo::strategy::Area();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::strategy::Area::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Area =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsArea}, {
      &protobuf_goldo_2fcommon_2fgeometry_2eproto::scc_info_Box.base,
      &protobuf_goldo_2fcommon_2fgeometry_2eproto::scc_info_Circle.base,
      &protobuf_goldo_2fcommon_2fgeometry_2eproto::scc_info_Polygon.base,}};

static void InitDefaultsActionConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::strategy::_ActionConfig_default_instance_;
    new (ptr) ::goldo::strategy::ActionConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::strategy::ActionConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ActionConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsActionConfig}, {
      &protobuf_goldo_2fcommon_2fgeometry_2eproto::scc_info_StaticPose.base,}};

static void InitDefaultsStrategyConfig_ActionsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::strategy::_StrategyConfig_ActionsEntry_DoNotUse_default_instance_;
    new (ptr) ::goldo::strategy::StrategyConfig_ActionsEntry_DoNotUse();
  }
  ::goldo::strategy::StrategyConfig_ActionsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_StrategyConfig_ActionsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStrategyConfig_ActionsEntry_DoNotUse}, {
      &protobuf_goldo_2fstrategy_2eproto::scc_info_ActionConfig.base,}};

static void InitDefaultsStrategyConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::strategy::_StrategyConfig_default_instance_;
    new (ptr) ::goldo::strategy::StrategyConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::strategy::StrategyConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_StrategyConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsStrategyConfig}, {
      &protobuf_goldo_2fstrategy_2eproto::scc_info_StrategyConfig_ActionsEntry_DoNotUse.base,
      &protobuf_goldo_2fstrategy_2eproto::scc_info_Area.base,}};

static void InitDefaultsStrategyState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::strategy::_StrategyState_default_instance_;
    new (ptr) ::goldo::strategy::StrategyState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::strategy::StrategyState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StrategyState =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStrategyState}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Area.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ActionConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StrategyConfig_ActionsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StrategyConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StrategyState.base);
}

::google::protobuf::Metadata file_level_metadata[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::strategy::Area, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::strategy::Area, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::strategy::Area, name_),
  offsetof(::goldo::strategy::AreaDefaultTypeInternal, box_),
  offsetof(::goldo::strategy::AreaDefaultTypeInternal, circle_),
  offsetof(::goldo::strategy::AreaDefaultTypeInternal, polygo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::strategy::Area, geometry_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::strategy::ActionConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::strategy::ActionConfig, start_pose_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::strategy::ActionConfig, sequence_action_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::strategy::ActionConfig, sequence_prepare_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::strategy::ActionConfig, sequence_prepare_abort_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::strategy::ActionConfig, sequence_on_success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::strategy::ActionConfig, sequence_on_failure_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::strategy::ActionConfig, default_priority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::strategy::StrategyConfig_ActionsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::strategy::StrategyConfig_ActionsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::strategy::StrategyConfig_ActionsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::strategy::StrategyConfig_ActionsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::strategy::StrategyConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::strategy::StrategyConfig, actions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::strategy::StrategyConfig, areas_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::strategy::StrategyState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::goldo::strategy::Area)},
  { 10, -1, sizeof(::goldo::strategy::ActionConfig)},
  { 22, 29, sizeof(::goldo::strategy::StrategyConfig_ActionsEntry_DoNotUse)},
  { 31, -1, sizeof(::goldo::strategy::StrategyConfig)},
  { 38, -1, sizeof(::goldo::strategy::StrategyState)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::strategy::_Area_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::strategy::_ActionConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::strategy::_StrategyConfig_ActionsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::strategy::_StrategyConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::strategy::_StrategyState_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "goldo/strategy.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024goldo/strategy.proto\022\016goldo.strategy\032\033"
      "goldo/common/geometry.proto\"\256\001\n\004Area\022\014\n\004"
      "name\030\001 \001(\t\022)\n\003box\030\002 \001(\0132\032.goldo.common.g"
      "eometry.BoxH\000\022/\n\006circle\030\003 \001(\0132\035.goldo.co"
      "mmon.geometry.CircleH\000\0220\n\006polygo\030\004 \001(\0132\036"
      ".goldo.common.geometry.PolygonH\000B\n\n\010geom"
      "etry\"\354\001\n\014ActionConfig\0225\n\nstart_pose\030\001 \001("
      "\0132!.goldo.common.geometry.StaticPose\022\027\n\017"
      "sequence_action\030\002 \001(\t\022\030\n\020sequence_prepar"
      "e\030\003 \001(\t\022\036\n\026sequence_prepare_abort\030\004 \001(\t\022"
      "\033\n\023sequence_on_success\030\005 \001(\t\022\033\n\023sequence"
      "_on_failure\030\006 \001(\t\022\030\n\020default_priority\030\007 "
      "\001(\005\"\301\001\n\016StrategyConfig\022<\n\007actions\030\001 \003(\0132"
      "+.goldo.strategy.StrategyConfig.ActionsE"
      "ntry\022#\n\005areas\030\002 \003(\0132\024.goldo.strategy.Are"
      "a\032L\n\014ActionsEntry\022\013\n\003key\030\001 \001(\t\022+\n\005value\030"
      "\002 \001(\0132\034.goldo.strategy.ActionConfig:\0028\001\""
      "\017\n\rStrategyStateb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 704);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "goldo/strategy.proto", &protobuf_RegisterTypes);
  ::protobuf_goldo_2fcommon_2fgeometry_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_goldo_2fstrategy_2eproto
namespace goldo {
namespace strategy {

// ===================================================================

void Area::InitAsDefaultInstance() {
  ::goldo::strategy::_Area_default_instance_.box_ = const_cast< ::goldo::common::geometry::Box*>(
      ::goldo::common::geometry::Box::internal_default_instance());
  ::goldo::strategy::_Area_default_instance_.circle_ = const_cast< ::goldo::common::geometry::Circle*>(
      ::goldo::common::geometry::Circle::internal_default_instance());
  ::goldo::strategy::_Area_default_instance_.polygo_ = const_cast< ::goldo::common::geometry::Polygon*>(
      ::goldo::common::geometry::Polygon::internal_default_instance());
}
void Area::set_allocated_box(::goldo::common::geometry::Box* box) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_geometry();
  if (box) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      box = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, box, submessage_arena);
    }
    set_has_box();
    geometry_.box_ = box;
  }
  // @@protoc_insertion_point(field_set_allocated:goldo.strategy.Area.box)
}
void Area::clear_box() {
  if (has_box()) {
    delete geometry_.box_;
    clear_has_geometry();
  }
}
void Area::set_allocated_circle(::goldo::common::geometry::Circle* circle) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_geometry();
  if (circle) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      circle = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, circle, submessage_arena);
    }
    set_has_circle();
    geometry_.circle_ = circle;
  }
  // @@protoc_insertion_point(field_set_allocated:goldo.strategy.Area.circle)
}
void Area::clear_circle() {
  if (has_circle()) {
    delete geometry_.circle_;
    clear_has_geometry();
  }
}
void Area::set_allocated_polygo(::goldo::common::geometry::Polygon* polygo) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_geometry();
  if (polygo) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      polygo = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, polygo, submessage_arena);
    }
    set_has_polygo();
    geometry_.polygo_ = polygo;
  }
  // @@protoc_insertion_point(field_set_allocated:goldo.strategy.Area.polygo)
}
void Area::clear_polygo() {
  if (has_polygo()) {
    delete geometry_.polygo_;
    clear_has_geometry();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Area::kNameFieldNumber;
const int Area::kBoxFieldNumber;
const int Area::kCircleFieldNumber;
const int Area::kPolygoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Area::Area()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fstrategy_2eproto::scc_info_Area.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.strategy.Area)
}
Area::Area(const Area& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  clear_has_geometry();
  switch (from.geometry_case()) {
    case kBox: {
      mutable_box()->::goldo::common::geometry::Box::MergeFrom(from.box());
      break;
    }
    case kCircle: {
      mutable_circle()->::goldo::common::geometry::Circle::MergeFrom(from.circle());
      break;
    }
    case kPolygo: {
      mutable_polygo()->::goldo::common::geometry::Polygon::MergeFrom(from.polygo());
      break;
    }
    case GEOMETRY_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:goldo.strategy.Area)
}

void Area::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_geometry();
}

Area::~Area() {
  // @@protoc_insertion_point(destructor:goldo.strategy.Area)
  SharedDtor();
}

void Area::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_geometry()) {
    clear_geometry();
  }
}

void Area::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Area::descriptor() {
  ::protobuf_goldo_2fstrategy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fstrategy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Area& Area::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fstrategy_2eproto::scc_info_Area.base);
  return *internal_default_instance();
}


void Area::clear_geometry() {
// @@protoc_insertion_point(one_of_clear_start:goldo.strategy.Area)
  switch (geometry_case()) {
    case kBox: {
      delete geometry_.box_;
      break;
    }
    case kCircle: {
      delete geometry_.circle_;
      break;
    }
    case kPolygo: {
      delete geometry_.polygo_;
      break;
    }
    case GEOMETRY_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = GEOMETRY_NOT_SET;
}


void Area::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.strategy.Area)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_geometry();
  _internal_metadata_.Clear();
}

bool Area::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.strategy.Area)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "goldo.strategy.Area.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .goldo.common.geometry.Box box = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_box()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .goldo.common.geometry.Circle circle = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_circle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .goldo.common.geometry.Polygon polygo = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_polygo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.strategy.Area)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.strategy.Area)
  return false;
#undef DO_
}

void Area::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.strategy.Area)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "goldo.strategy.Area.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .goldo.common.geometry.Box box = 2;
  if (has_box()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_box(), output);
  }

  // .goldo.common.geometry.Circle circle = 3;
  if (has_circle()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_circle(), output);
  }

  // .goldo.common.geometry.Polygon polygo = 4;
  if (has_polygo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_polygo(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.strategy.Area)
}

::google::protobuf::uint8* Area::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.strategy.Area)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "goldo.strategy.Area.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .goldo.common.geometry.Box box = 2;
  if (has_box()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_box(), deterministic, target);
  }

  // .goldo.common.geometry.Circle circle = 3;
  if (has_circle()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_circle(), deterministic, target);
  }

  // .goldo.common.geometry.Polygon polygo = 4;
  if (has_polygo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_polygo(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.strategy.Area)
  return target;
}

size_t Area::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.strategy.Area)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  switch (geometry_case()) {
    // .goldo.common.geometry.Box box = 2;
    case kBox: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *geometry_.box_);
      break;
    }
    // .goldo.common.geometry.Circle circle = 3;
    case kCircle: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *geometry_.circle_);
      break;
    }
    // .goldo.common.geometry.Polygon polygo = 4;
    case kPolygo: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *geometry_.polygo_);
      break;
    }
    case GEOMETRY_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Area::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.strategy.Area)
  GOOGLE_DCHECK_NE(&from, this);
  const Area* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Area>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.strategy.Area)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.strategy.Area)
    MergeFrom(*source);
  }
}

void Area::MergeFrom(const Area& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.strategy.Area)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  switch (from.geometry_case()) {
    case kBox: {
      mutable_box()->::goldo::common::geometry::Box::MergeFrom(from.box());
      break;
    }
    case kCircle: {
      mutable_circle()->::goldo::common::geometry::Circle::MergeFrom(from.circle());
      break;
    }
    case kPolygo: {
      mutable_polygo()->::goldo::common::geometry::Polygon::MergeFrom(from.polygo());
      break;
    }
    case GEOMETRY_NOT_SET: {
      break;
    }
  }
}

void Area::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.strategy.Area)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Area::CopyFrom(const Area& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.strategy.Area)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Area::IsInitialized() const {
  return true;
}

void Area::Swap(Area* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Area::InternalSwap(Area* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(geometry_, other->geometry_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Area::GetMetadata() const {
  protobuf_goldo_2fstrategy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fstrategy_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ActionConfig::InitAsDefaultInstance() {
  ::goldo::strategy::_ActionConfig_default_instance_._instance.get_mutable()->start_pose_ = const_cast< ::goldo::common::geometry::StaticPose*>(
      ::goldo::common::geometry::StaticPose::internal_default_instance());
}
void ActionConfig::clear_start_pose() {
  if (GetArenaNoVirtual() == NULL && start_pose_ != NULL) {
    delete start_pose_;
  }
  start_pose_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActionConfig::kStartPoseFieldNumber;
const int ActionConfig::kSequenceActionFieldNumber;
const int ActionConfig::kSequencePrepareFieldNumber;
const int ActionConfig::kSequencePrepareAbortFieldNumber;
const int ActionConfig::kSequenceOnSuccessFieldNumber;
const int ActionConfig::kSequenceOnFailureFieldNumber;
const int ActionConfig::kDefaultPriorityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActionConfig::ActionConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fstrategy_2eproto::scc_info_ActionConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.strategy.ActionConfig)
}
ActionConfig::ActionConfig(const ActionConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sequence_action_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sequence_action().size() > 0) {
    sequence_action_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sequence_action_);
  }
  sequence_prepare_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sequence_prepare().size() > 0) {
    sequence_prepare_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sequence_prepare_);
  }
  sequence_prepare_abort_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sequence_prepare_abort().size() > 0) {
    sequence_prepare_abort_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sequence_prepare_abort_);
  }
  sequence_on_success_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sequence_on_success().size() > 0) {
    sequence_on_success_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sequence_on_success_);
  }
  sequence_on_failure_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sequence_on_failure().size() > 0) {
    sequence_on_failure_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sequence_on_failure_);
  }
  if (from.has_start_pose()) {
    start_pose_ = new ::goldo::common::geometry::StaticPose(*from.start_pose_);
  } else {
    start_pose_ = NULL;
  }
  default_priority_ = from.default_priority_;
  // @@protoc_insertion_point(copy_constructor:goldo.strategy.ActionConfig)
}

void ActionConfig::SharedCtor() {
  sequence_action_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sequence_prepare_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sequence_prepare_abort_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sequence_on_success_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sequence_on_failure_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&start_pose_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&default_priority_) -
      reinterpret_cast<char*>(&start_pose_)) + sizeof(default_priority_));
}

ActionConfig::~ActionConfig() {
  // @@protoc_insertion_point(destructor:goldo.strategy.ActionConfig)
  SharedDtor();
}

void ActionConfig::SharedDtor() {
  sequence_action_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sequence_prepare_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sequence_prepare_abort_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sequence_on_success_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sequence_on_failure_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete start_pose_;
}

void ActionConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ActionConfig::descriptor() {
  ::protobuf_goldo_2fstrategy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fstrategy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActionConfig& ActionConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fstrategy_2eproto::scc_info_ActionConfig.base);
  return *internal_default_instance();
}


void ActionConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.strategy.ActionConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sequence_action_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sequence_prepare_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sequence_prepare_abort_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sequence_on_success_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sequence_on_failure_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && start_pose_ != NULL) {
    delete start_pose_;
  }
  start_pose_ = NULL;
  default_priority_ = 0;
  _internal_metadata_.Clear();
}

bool ActionConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.strategy.ActionConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .goldo.common.geometry.StaticPose start_pose = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_start_pose()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sequence_action = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sequence_action()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sequence_action().data(), static_cast<int>(this->sequence_action().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "goldo.strategy.ActionConfig.sequence_action"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sequence_prepare = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sequence_prepare()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sequence_prepare().data(), static_cast<int>(this->sequence_prepare().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "goldo.strategy.ActionConfig.sequence_prepare"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sequence_prepare_abort = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sequence_prepare_abort()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sequence_prepare_abort().data(), static_cast<int>(this->sequence_prepare_abort().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "goldo.strategy.ActionConfig.sequence_prepare_abort"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sequence_on_success = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sequence_on_success()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sequence_on_success().data(), static_cast<int>(this->sequence_on_success().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "goldo.strategy.ActionConfig.sequence_on_success"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sequence_on_failure = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sequence_on_failure()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sequence_on_failure().data(), static_cast<int>(this->sequence_on_failure().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "goldo.strategy.ActionConfig.sequence_on_failure"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 default_priority = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &default_priority_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.strategy.ActionConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.strategy.ActionConfig)
  return false;
#undef DO_
}

void ActionConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.strategy.ActionConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .goldo.common.geometry.StaticPose start_pose = 1;
  if (this->has_start_pose()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_start_pose(), output);
  }

  // string sequence_action = 2;
  if (this->sequence_action().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sequence_action().data(), static_cast<int>(this->sequence_action().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "goldo.strategy.ActionConfig.sequence_action");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sequence_action(), output);
  }

  // string sequence_prepare = 3;
  if (this->sequence_prepare().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sequence_prepare().data(), static_cast<int>(this->sequence_prepare().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "goldo.strategy.ActionConfig.sequence_prepare");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sequence_prepare(), output);
  }

  // string sequence_prepare_abort = 4;
  if (this->sequence_prepare_abort().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sequence_prepare_abort().data(), static_cast<int>(this->sequence_prepare_abort().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "goldo.strategy.ActionConfig.sequence_prepare_abort");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sequence_prepare_abort(), output);
  }

  // string sequence_on_success = 5;
  if (this->sequence_on_success().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sequence_on_success().data(), static_cast<int>(this->sequence_on_success().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "goldo.strategy.ActionConfig.sequence_on_success");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->sequence_on_success(), output);
  }

  // string sequence_on_failure = 6;
  if (this->sequence_on_failure().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sequence_on_failure().data(), static_cast<int>(this->sequence_on_failure().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "goldo.strategy.ActionConfig.sequence_on_failure");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->sequence_on_failure(), output);
  }

  // int32 default_priority = 7;
  if (this->default_priority() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->default_priority(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.strategy.ActionConfig)
}

::google::protobuf::uint8* ActionConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.strategy.ActionConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .goldo.common.geometry.StaticPose start_pose = 1;
  if (this->has_start_pose()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_start_pose(), deterministic, target);
  }

  // string sequence_action = 2;
  if (this->sequence_action().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sequence_action().data(), static_cast<int>(this->sequence_action().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "goldo.strategy.ActionConfig.sequence_action");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sequence_action(), target);
  }

  // string sequence_prepare = 3;
  if (this->sequence_prepare().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sequence_prepare().data(), static_cast<int>(this->sequence_prepare().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "goldo.strategy.ActionConfig.sequence_prepare");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sequence_prepare(), target);
  }

  // string sequence_prepare_abort = 4;
  if (this->sequence_prepare_abort().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sequence_prepare_abort().data(), static_cast<int>(this->sequence_prepare_abort().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "goldo.strategy.ActionConfig.sequence_prepare_abort");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->sequence_prepare_abort(), target);
  }

  // string sequence_on_success = 5;
  if (this->sequence_on_success().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sequence_on_success().data(), static_cast<int>(this->sequence_on_success().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "goldo.strategy.ActionConfig.sequence_on_success");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->sequence_on_success(), target);
  }

  // string sequence_on_failure = 6;
  if (this->sequence_on_failure().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sequence_on_failure().data(), static_cast<int>(this->sequence_on_failure().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "goldo.strategy.ActionConfig.sequence_on_failure");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->sequence_on_failure(), target);
  }

  // int32 default_priority = 7;
  if (this->default_priority() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->default_priority(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.strategy.ActionConfig)
  return target;
}

size_t ActionConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.strategy.ActionConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string sequence_action = 2;
  if (this->sequence_action().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sequence_action());
  }

  // string sequence_prepare = 3;
  if (this->sequence_prepare().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sequence_prepare());
  }

  // string sequence_prepare_abort = 4;
  if (this->sequence_prepare_abort().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sequence_prepare_abort());
  }

  // string sequence_on_success = 5;
  if (this->sequence_on_success().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sequence_on_success());
  }

  // string sequence_on_failure = 6;
  if (this->sequence_on_failure().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sequence_on_failure());
  }

  // .goldo.common.geometry.StaticPose start_pose = 1;
  if (this->has_start_pose()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *start_pose_);
  }

  // int32 default_priority = 7;
  if (this->default_priority() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->default_priority());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ActionConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.strategy.ActionConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ActionConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActionConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.strategy.ActionConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.strategy.ActionConfig)
    MergeFrom(*source);
  }
}

void ActionConfig::MergeFrom(const ActionConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.strategy.ActionConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sequence_action().size() > 0) {

    sequence_action_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sequence_action_);
  }
  if (from.sequence_prepare().size() > 0) {

    sequence_prepare_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sequence_prepare_);
  }
  if (from.sequence_prepare_abort().size() > 0) {

    sequence_prepare_abort_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sequence_prepare_abort_);
  }
  if (from.sequence_on_success().size() > 0) {

    sequence_on_success_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sequence_on_success_);
  }
  if (from.sequence_on_failure().size() > 0) {

    sequence_on_failure_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sequence_on_failure_);
  }
  if (from.has_start_pose()) {
    mutable_start_pose()->::goldo::common::geometry::StaticPose::MergeFrom(from.start_pose());
  }
  if (from.default_priority() != 0) {
    set_default_priority(from.default_priority());
  }
}

void ActionConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.strategy.ActionConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionConfig::CopyFrom(const ActionConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.strategy.ActionConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionConfig::IsInitialized() const {
  return true;
}

void ActionConfig::Swap(ActionConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActionConfig::InternalSwap(ActionConfig* other) {
  using std::swap;
  sequence_action_.Swap(&other->sequence_action_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sequence_prepare_.Swap(&other->sequence_prepare_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sequence_prepare_abort_.Swap(&other->sequence_prepare_abort_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sequence_on_success_.Swap(&other->sequence_on_success_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sequence_on_failure_.Swap(&other->sequence_on_failure_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(start_pose_, other->start_pose_);
  swap(default_priority_, other->default_priority_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ActionConfig::GetMetadata() const {
  protobuf_goldo_2fstrategy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fstrategy_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

StrategyConfig_ActionsEntry_DoNotUse::StrategyConfig_ActionsEntry_DoNotUse() {}
StrategyConfig_ActionsEntry_DoNotUse::StrategyConfig_ActionsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void StrategyConfig_ActionsEntry_DoNotUse::MergeFrom(const StrategyConfig_ActionsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata StrategyConfig_ActionsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_goldo_2fstrategy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fstrategy_2eproto::file_level_metadata[2];
}
void StrategyConfig_ActionsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void StrategyConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StrategyConfig::kActionsFieldNumber;
const int StrategyConfig::kAreasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StrategyConfig::StrategyConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fstrategy_2eproto::scc_info_StrategyConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.strategy.StrategyConfig)
}
StrategyConfig::StrategyConfig(const StrategyConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      areas_(from.areas_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  actions_.MergeFrom(from.actions_);
  // @@protoc_insertion_point(copy_constructor:goldo.strategy.StrategyConfig)
}

void StrategyConfig::SharedCtor() {
}

StrategyConfig::~StrategyConfig() {
  // @@protoc_insertion_point(destructor:goldo.strategy.StrategyConfig)
  SharedDtor();
}

void StrategyConfig::SharedDtor() {
}

void StrategyConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StrategyConfig::descriptor() {
  ::protobuf_goldo_2fstrategy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fstrategy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StrategyConfig& StrategyConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fstrategy_2eproto::scc_info_StrategyConfig.base);
  return *internal_default_instance();
}


void StrategyConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.strategy.StrategyConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  actions_.Clear();
  areas_.Clear();
  _internal_metadata_.Clear();
}

bool StrategyConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.strategy.StrategyConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, .goldo.strategy.ActionConfig> actions = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          StrategyConfig_ActionsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              StrategyConfig_ActionsEntry_DoNotUse,
              ::std::string, ::goldo::strategy::ActionConfig,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::goldo::strategy::ActionConfig > > parser(&actions_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "goldo.strategy.StrategyConfig.ActionsEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .goldo.strategy.Area areas = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_areas()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.strategy.StrategyConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.strategy.StrategyConfig)
  return false;
#undef DO_
}

void StrategyConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.strategy.StrategyConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .goldo.strategy.ActionConfig> actions = 1;
  if (!this->actions().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::goldo::strategy::ActionConfig >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "goldo.strategy.StrategyConfig.ActionsEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->actions().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->actions().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::goldo::strategy::ActionConfig >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::goldo::strategy::ActionConfig >::const_iterator
          it = this->actions().begin();
          it != this->actions().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<StrategyConfig_ActionsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(actions_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<StrategyConfig_ActionsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::goldo::strategy::ActionConfig >::const_iterator
          it = this->actions().begin();
          it != this->actions().end(); ++it) {
        entry.reset(actions_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // repeated .goldo.strategy.Area areas = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->areas_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->areas(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.strategy.StrategyConfig)
}

::google::protobuf::uint8* StrategyConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.strategy.StrategyConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .goldo.strategy.ActionConfig> actions = 1;
  if (!this->actions().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::goldo::strategy::ActionConfig >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "goldo.strategy.StrategyConfig.ActionsEntry.key");
      }
    };

    if (deterministic &&
        this->actions().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->actions().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::goldo::strategy::ActionConfig >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::goldo::strategy::ActionConfig >::const_iterator
          it = this->actions().begin();
          it != this->actions().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<StrategyConfig_ActionsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(actions_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<StrategyConfig_ActionsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::goldo::strategy::ActionConfig >::const_iterator
          it = this->actions().begin();
          it != this->actions().end(); ++it) {
        entry.reset(actions_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // repeated .goldo.strategy.Area areas = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->areas_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->areas(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.strategy.StrategyConfig)
  return target;
}

size_t StrategyConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.strategy.StrategyConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .goldo.strategy.ActionConfig> actions = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->actions_size());
  {
    ::std::unique_ptr<StrategyConfig_ActionsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::goldo::strategy::ActionConfig >::const_iterator
        it = this->actions().begin();
        it != this->actions().end(); ++it) {
      entry.reset(actions_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated .goldo.strategy.Area areas = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->areas_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->areas(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StrategyConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.strategy.StrategyConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const StrategyConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StrategyConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.strategy.StrategyConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.strategy.StrategyConfig)
    MergeFrom(*source);
  }
}

void StrategyConfig::MergeFrom(const StrategyConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.strategy.StrategyConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  actions_.MergeFrom(from.actions_);
  areas_.MergeFrom(from.areas_);
}

void StrategyConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.strategy.StrategyConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StrategyConfig::CopyFrom(const StrategyConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.strategy.StrategyConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StrategyConfig::IsInitialized() const {
  return true;
}

void StrategyConfig::Swap(StrategyConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StrategyConfig::InternalSwap(StrategyConfig* other) {
  using std::swap;
  actions_.Swap(&other->actions_);
  CastToBase(&areas_)->InternalSwap(CastToBase(&other->areas_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StrategyConfig::GetMetadata() const {
  protobuf_goldo_2fstrategy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fstrategy_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StrategyState::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StrategyState::StrategyState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fstrategy_2eproto::scc_info_StrategyState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.strategy.StrategyState)
}
StrategyState::StrategyState(const StrategyState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:goldo.strategy.StrategyState)
}

void StrategyState::SharedCtor() {
}

StrategyState::~StrategyState() {
  // @@protoc_insertion_point(destructor:goldo.strategy.StrategyState)
  SharedDtor();
}

void StrategyState::SharedDtor() {
}

void StrategyState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StrategyState::descriptor() {
  ::protobuf_goldo_2fstrategy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fstrategy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StrategyState& StrategyState::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fstrategy_2eproto::scc_info_StrategyState.base);
  return *internal_default_instance();
}


void StrategyState::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.strategy.StrategyState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool StrategyState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.strategy.StrategyState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.strategy.StrategyState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.strategy.StrategyState)
  return false;
#undef DO_
}

void StrategyState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.strategy.StrategyState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.strategy.StrategyState)
}

::google::protobuf::uint8* StrategyState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.strategy.StrategyState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.strategy.StrategyState)
  return target;
}

size_t StrategyState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.strategy.StrategyState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StrategyState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.strategy.StrategyState)
  GOOGLE_DCHECK_NE(&from, this);
  const StrategyState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StrategyState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.strategy.StrategyState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.strategy.StrategyState)
    MergeFrom(*source);
  }
}

void StrategyState::MergeFrom(const StrategyState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.strategy.StrategyState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void StrategyState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.strategy.StrategyState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StrategyState::CopyFrom(const StrategyState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.strategy.StrategyState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StrategyState::IsInitialized() const {
  return true;
}

void StrategyState::Swap(StrategyState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StrategyState::InternalSwap(StrategyState* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StrategyState::GetMetadata() const {
  protobuf_goldo_2fstrategy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fstrategy_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace strategy
}  // namespace goldo
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::strategy::Area* Arena::CreateMaybeMessage< ::goldo::strategy::Area >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::strategy::Area >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::strategy::ActionConfig* Arena::CreateMaybeMessage< ::goldo::strategy::ActionConfig >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::strategy::ActionConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::strategy::StrategyConfig_ActionsEntry_DoNotUse* Arena::CreateMaybeMessage< ::goldo::strategy::StrategyConfig_ActionsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::strategy::StrategyConfig_ActionsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::strategy::StrategyConfig* Arena::CreateMaybeMessage< ::goldo::strategy::StrategyConfig >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::strategy::StrategyConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::strategy::StrategyState* Arena::CreateMaybeMessage< ::goldo::strategy::StrategyState >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::strategy::StrategyState >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
