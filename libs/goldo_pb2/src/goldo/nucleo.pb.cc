// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: goldo/nucleo.proto

#include "goldo/nucleo.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_goldo_2fnucleo_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_goldo_2fnucleo_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FreeRTOSTaskStats;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_goldo_2fnucleo_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ScopeChannelConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_goldo_2fnucleo_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ScopeChannelValues;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_goldo_2fnucleo_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SensorConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_goldo_2fnucleo_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_NucleoTasksStatistics;
}  // namespace protobuf_goldo_2fnucleo_2eproto
namespace protobuf_goldo_2fnucleo_2fhal_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_goldo_2fnucleo_2fhal_2eproto ::google::protobuf::internal::SCCInfo<7> scc_info_HalConfig;
}  // namespace protobuf_goldo_2fnucleo_2fhal_2eproto
namespace protobuf_goldo_2fnucleo_2fodometry_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_goldo_2fnucleo_2fodometry_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OdometryConfig;
}  // namespace protobuf_goldo_2fnucleo_2fodometry_2eproto
namespace protobuf_goldo_2fnucleo_2fodrive_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_goldo_2fnucleo_2fodrive_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ClientStatistics;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_goldo_2fnucleo_2fodrive_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ODriveStatus;
}  // namespace protobuf_goldo_2fnucleo_2fodrive_2eproto
namespace protobuf_goldo_2fnucleo_2fpropulsion_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_goldo_2fnucleo_2fpropulsion_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PropulsionTaskConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_goldo_2fnucleo_2fpropulsion_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_PropulsionControllerConfig;
}  // namespace protobuf_goldo_2fnucleo_2fpropulsion_2eproto
namespace protobuf_goldo_2fnucleo_2frobot_5fsimulator_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_goldo_2fnucleo_2frobot_5fsimulator_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RobotSimulatorConfig;
}  // namespace protobuf_goldo_2fnucleo_2frobot_5fsimulator_2eproto
namespace protobuf_goldo_2fnucleo_2fservos_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_goldo_2fnucleo_2fservos_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LiftConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_goldo_2fnucleo_2fservos_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ServoConfig;
}  // namespace protobuf_goldo_2fnucleo_2fservos_2eproto
namespace protobuf_goldo_2fnucleo_2fstatistics_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_goldo_2fnucleo_2fstatistics_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PropulsionTaskStatistics;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_goldo_2fnucleo_2fstatistics_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_ODriveCommTaskStatistics;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_goldo_2fnucleo_2fstatistics_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_UARTCommTaskStatistics;
}  // namespace protobuf_goldo_2fnucleo_2fstatistics_2eproto
namespace goldo {
namespace nucleo {
class SensorConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SensorConfig>
      _instance;
} _SensorConfig_default_instance_;
class NucleoConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NucleoConfig>
      _instance;
} _NucleoConfig_default_instance_;
class NucleoTasksStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NucleoTasksState>
      _instance;
} _NucleoTasksState_default_instance_;
class NucleoTasksStatisticsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NucleoTasksStatistics>
      _instance;
} _NucleoTasksStatistics_default_instance_;
class FreeRTOSTaskStatsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FreeRTOSTaskStats>
      _instance;
} _FreeRTOSTaskStats_default_instance_;
class FreeRTOSTasksStatsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FreeRTOSTasksStats>
      _instance;
} _FreeRTOSTasksStats_default_instance_;
class NucleoStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NucleoState>
      _instance;
} _NucleoState_default_instance_;
class ScopeChannelConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScopeChannelConfig>
      _instance;
} _ScopeChannelConfig_default_instance_;
class ScopeConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScopeConfig>
      _instance;
} _ScopeConfig_default_instance_;
class ScopeDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScopeData>
      _instance;
} _ScopeData_default_instance_;
class ScopeChannelValuesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScopeChannelValues>
      _instance;
} _ScopeChannelValues_default_instance_;
class ScopeValuesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScopeValues>
      _instance;
} _ScopeValues_default_instance_;
}  // namespace nucleo
}  // namespace goldo
namespace protobuf_goldo_2fnucleo_2eproto {
static void InitDefaultsSensorConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::nucleo::_SensorConfig_default_instance_;
    new (ptr) ::goldo::nucleo::SensorConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::nucleo::SensorConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SensorConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSensorConfig}, {}};

static void InitDefaultsNucleoConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::nucleo::_NucleoConfig_default_instance_;
    new (ptr) ::goldo::nucleo::NucleoConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::nucleo::NucleoConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<8> scc_info_NucleoConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 8, InitDefaultsNucleoConfig}, {
      &protobuf_goldo_2fnucleo_2fhal_2eproto::scc_info_HalConfig.base,
      &protobuf_goldo_2fnucleo_2frobot_5fsimulator_2eproto::scc_info_RobotSimulatorConfig.base,
      &protobuf_goldo_2fnucleo_2fodometry_2eproto::scc_info_OdometryConfig.base,
      &protobuf_goldo_2fnucleo_2fpropulsion_2eproto::scc_info_PropulsionControllerConfig.base,
      &protobuf_goldo_2fnucleo_2fpropulsion_2eproto::scc_info_PropulsionTaskConfig.base,
      &protobuf_goldo_2fnucleo_2fservos_2eproto::scc_info_ServoConfig.base,
      &protobuf_goldo_2fnucleo_2eproto::scc_info_SensorConfig.base,
      &protobuf_goldo_2fnucleo_2fservos_2eproto::scc_info_LiftConfig.base,}};

static void InitDefaultsNucleoTasksState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::nucleo::_NucleoTasksState_default_instance_;
    new (ptr) ::goldo::nucleo::NucleoTasksState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::nucleo::NucleoTasksState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NucleoTasksState =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNucleoTasksState}, {}};

static void InitDefaultsNucleoTasksStatistics() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::nucleo::_NucleoTasksStatistics_default_instance_;
    new (ptr) ::goldo::nucleo::NucleoTasksStatistics();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::nucleo::NucleoTasksStatistics::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_NucleoTasksStatistics =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsNucleoTasksStatistics}, {
      &protobuf_goldo_2fnucleo_2fstatistics_2eproto::scc_info_UARTCommTaskStatistics.base,
      &protobuf_goldo_2fnucleo_2fstatistics_2eproto::scc_info_ODriveCommTaskStatistics.base,
      &protobuf_goldo_2fnucleo_2fstatistics_2eproto::scc_info_PropulsionTaskStatistics.base,}};

static void InitDefaultsFreeRTOSTaskStats() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::nucleo::_FreeRTOSTaskStats_default_instance_;
    new (ptr) ::goldo::nucleo::FreeRTOSTaskStats();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::nucleo::FreeRTOSTaskStats::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FreeRTOSTaskStats =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFreeRTOSTaskStats}, {}};

static void InitDefaultsFreeRTOSTasksStats() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::nucleo::_FreeRTOSTasksStats_default_instance_;
    new (ptr) ::goldo::nucleo::FreeRTOSTasksStats();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::nucleo::FreeRTOSTasksStats::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_FreeRTOSTasksStats =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsFreeRTOSTasksStats}, {
      &protobuf_goldo_2fnucleo_2eproto::scc_info_FreeRTOSTaskStats.base,}};

static void InitDefaultsNucleoState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::nucleo::_NucleoState_default_instance_;
    new (ptr) ::goldo::nucleo::NucleoState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::nucleo::NucleoState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_NucleoState =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsNucleoState}, {
      &protobuf_goldo_2fnucleo_2eproto::scc_info_NucleoTasksStatistics.base,
      &protobuf_goldo_2fnucleo_2fodrive_2eproto::scc_info_ODriveStatus.base,
      &protobuf_goldo_2fnucleo_2fodrive_2eproto::scc_info_ClientStatistics.base,}};

static void InitDefaultsScopeChannelConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::nucleo::_ScopeChannelConfig_default_instance_;
    new (ptr) ::goldo::nucleo::ScopeChannelConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::nucleo::ScopeChannelConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ScopeChannelConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsScopeChannelConfig}, {}};

static void InitDefaultsScopeConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::nucleo::_ScopeConfig_default_instance_;
    new (ptr) ::goldo::nucleo::ScopeConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::nucleo::ScopeConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ScopeConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsScopeConfig}, {
      &protobuf_goldo_2fnucleo_2eproto::scc_info_ScopeChannelConfig.base,}};

static void InitDefaultsScopeData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::nucleo::_ScopeData_default_instance_;
    new (ptr) ::goldo::nucleo::ScopeData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::nucleo::ScopeData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ScopeData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsScopeData}, {}};

static void InitDefaultsScopeChannelValues() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::nucleo::_ScopeChannelValues_default_instance_;
    new (ptr) ::goldo::nucleo::ScopeChannelValues();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::nucleo::ScopeChannelValues::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ScopeChannelValues =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsScopeChannelValues}, {}};

static void InitDefaultsScopeValues() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::nucleo::_ScopeValues_default_instance_;
    new (ptr) ::goldo::nucleo::ScopeValues();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::nucleo::ScopeValues::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ScopeValues =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsScopeValues}, {
      &protobuf_goldo_2fnucleo_2eproto::scc_info_ScopeChannelValues.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_SensorConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NucleoConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NucleoTasksState.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NucleoTasksStatistics.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FreeRTOSTaskStats.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FreeRTOSTasksStats.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NucleoState.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ScopeChannelConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ScopeConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ScopeData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ScopeChannelValues.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ScopeValues.base);
}

::google::protobuf::Metadata file_level_metadata[12];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::SensorConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::SensorConfig, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::SensorConfig, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::SensorConfig, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::NucleoConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::NucleoConfig, hal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::NucleoConfig, robot_simulator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::NucleoConfig, odometry_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::NucleoConfig, propulsion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::NucleoConfig, propulsion_task_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::NucleoConfig, servos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::NucleoConfig, sensors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::NucleoConfig, enabled_tasks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::NucleoConfig, lifts_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::NucleoTasksState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::NucleoTasksState, comm_uart_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::NucleoTasksStatistics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::NucleoTasksStatistics, uart_comm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::NucleoTasksStatistics, odrive_comm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::NucleoTasksStatistics, propulsion_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::FreeRTOSTaskStats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::FreeRTOSTaskStats, task_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::FreeRTOSTaskStats, runtime_counter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::FreeRTOSTaskStats, task_number_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::FreeRTOSTasksStats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::FreeRTOSTasksStats, tasks_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::NucleoState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::NucleoState, connected_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::NucleoState, configured_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::NucleoState, heartbeat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::NucleoState, tasks_statistics_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::NucleoState, odrive_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::NucleoState, odrive_client_statistics_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::ScopeChannelConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::ScopeChannelConfig, variable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::ScopeChannelConfig, encoding_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::ScopeChannelConfig, min_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::ScopeChannelConfig, max_value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::ScopeConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::ScopeConfig, period_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::ScopeConfig, channels_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::ScopeData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::ScopeData, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::ScopeData, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::ScopeChannelValues, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::ScopeChannelValues, float_values_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::ScopeValues, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::ScopeValues, timestamps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::ScopeValues, channels_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::goldo::nucleo::SensorConfig)},
  { 8, -1, sizeof(::goldo::nucleo::NucleoConfig)},
  { 22, -1, sizeof(::goldo::nucleo::NucleoTasksState)},
  { 28, -1, sizeof(::goldo::nucleo::NucleoTasksStatistics)},
  { 36, -1, sizeof(::goldo::nucleo::FreeRTOSTaskStats)},
  { 44, -1, sizeof(::goldo::nucleo::FreeRTOSTasksStats)},
  { 50, -1, sizeof(::goldo::nucleo::NucleoState)},
  { 61, -1, sizeof(::goldo::nucleo::ScopeChannelConfig)},
  { 70, -1, sizeof(::goldo::nucleo::ScopeConfig)},
  { 77, -1, sizeof(::goldo::nucleo::ScopeData)},
  { 84, -1, sizeof(::goldo::nucleo::ScopeChannelValues)},
  { 90, -1, sizeof(::goldo::nucleo::ScopeValues)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::nucleo::_SensorConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::nucleo::_NucleoConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::nucleo::_NucleoTasksState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::nucleo::_NucleoTasksStatistics_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::nucleo::_FreeRTOSTaskStats_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::nucleo::_FreeRTOSTasksStats_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::nucleo::_NucleoState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::nucleo::_ScopeChannelConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::nucleo::_ScopeConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::nucleo::_ScopeData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::nucleo::_ScopeChannelValues_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::nucleo::_ScopeValues_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "goldo/nucleo.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 12);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022goldo/nucleo.proto\022\014goldo.nucleo\032\026gold"
      "o/nucleo/hal.proto\032\033goldo/nucleo/odometr"
      "y.proto\032\035goldo/nucleo/propulsion.proto\032\""
      "goldo/nucleo/robot_simulator.proto\032\031gold"
      "o/nucleo/servos.proto\032\031goldo/nucleo/odri"
      "ve.proto\032\035goldo/nucleo/statistics.proto\032"
      "\027goldo/pb2_options.proto\"b\n\014SensorConfig"
      "\022,\n\004type\030\001 \001(\0162\030.goldo.nucleo.SensorType"
      "B\004\200\265\030\003\022\020\n\002id\030\002 \001(\005B\004\200\265\030\003\022\022\n\004name\030@ \001(\tB\004"
      "\200\265\030\014\"\365\003\n\014NucleoConfig\022(\n\003hal\030\001 \001(\0132\033.gol"
      "do.nucleo.hal.HalConfig\022K\n\017robot_simulat"
      "or\030\002 \001(\01322.goldo.nucleo.robot_simulator."
      "RobotSimulatorConfig\0227\n\010odometry\030\003 \001(\0132%"
      ".goldo.nucleo.odometry.OdometryConfig\022G\n"
      "\npropulsion\030\004 \001(\01323.goldo.nucleo.propuls"
      "ion.PropulsionControllerConfig\022F\n\017propul"
      "sion_task\030\005 \001(\0132-.goldo.nucleo.propulsio"
      "n.PropulsionTaskConfig\0220\n\006servos\030\006 \003(\0132 "
      ".goldo.nucleo.servos.ServoConfig\022+\n\007sens"
      "ors\030\007 \003(\0132\032.goldo.nucleo.SensorConfig\022\025\n"
      "\renabled_tasks\030\010 \003(\t\022.\n\005lifts\030\t \003(\0132\037.go"
      "ldo.nucleo.servos.LiftConfig\"%\n\020NucleoTa"
      "sksState\022\021\n\tcomm_uart\030\001 \001(\010\"\352\001\n\025NucleoTa"
      "sksStatistics\022B\n\tuart_comm\030\001 \001(\0132/.goldo"
      ".nucleo.statistics.UARTCommTaskStatistic"
      "s\022F\n\013odrive_comm\030\002 \001(\01321.goldo.nucleo.st"
      "atistics.ODriveCommTaskStatistics\022E\n\npro"
      "pulsion\030\003 \001(\01321.goldo.nucleo.statistics."
      "PropulsionTaskStatistics\"T\n\021FreeRTOSTask"
      "Stats\022\021\n\ttask_name\030\001 \001(\t\022\027\n\017runtime_coun"
      "ter\030\002 \001(\r\022\023\n\013task_number\030\003 \001(\r\"D\n\022FreeRT"
      "OSTasksStats\022.\n\005tasks\030\002 \003(\0132\037.goldo.nucl"
      "eo.FreeRTOSTaskStats\"\202\002\n\013NucleoState\022\021\n\t"
      "connected\030\001 \001(\010\022\022\n\nconfigured\030\002 \001(\010\022\021\n\th"
      "eartbeat\030\003 \001(\r\022=\n\020tasks_statistics\030\004 \001(\013"
      "2#.goldo.nucleo.NucleoTasksStatistics\0221\n"
      "\006odrive\030\005 \001(\0132!.goldo.nucleo.odrive.ODri"
      "veStatus\022G\n\030odrive_client_statistics\030\006 \001"
      "(\0132%.goldo.nucleo.odrive.ClientStatistic"
      "s\"\314\001\n\022ScopeChannelConfig\022\026\n\010variable\030\001 \001"
      "(\rB\004\200\265\030\005\022\026\n\010encoding\030\002 \001(\rB\004\200\265\030\005\022\021\n\tmin_"
      "value\030\003 \001(\002\022\021\n\tmax_value\030\004 \001(\002\"`\n\010Encodi"
      "ng\022\010\n\004RAW8\020\000\022\t\n\005RAW16\020\001\022\t\n\005RAW32\020\002\022\013\n\007SC"
      "ALED8\020\004\022\014\n\010SCALED16\020\005\022\014\n\010SCALED32\020\006\022\013\n\007F"
      "LOAT32\020\010\"a\n\013ScopeConfig\022\024\n\006period\030\001 \001(\rB"
      "\004\200\265\030\005\022<\n\010channels\030\002 \003(\0132 .goldo.nucleo.S"
      "copeChannelConfigB\010\230\265\030\005\210\265\030\010\"2\n\tScopeData"
      "\022\027\n\ttimestamp\030\001 \001(\rB\004\200\265\030\005\022\014\n\004data\030\002 \001(\014\""
      "*\n\022ScopeChannelValues\022\024\n\014float_values\030\001 "
      "\003(\002\"U\n\013ScopeValues\022\022\n\ntimestamps\030\001 \003(\002\0222"
      "\n\010channels\030\002 \003(\0132 .goldo.nucleo.ScopeCha"
      "nnelValues*/\n\nSensorType\022\013\n\007UNKNOWN\020\000\022\n\n"
      "\006NUCLEO\020\001\022\010\n\004FPGA\020\002b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2107);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "goldo/nucleo.proto", &protobuf_RegisterTypes);
  ::protobuf_goldo_2fnucleo_2fhal_2eproto::AddDescriptors();
  ::protobuf_goldo_2fnucleo_2fodometry_2eproto::AddDescriptors();
  ::protobuf_goldo_2fnucleo_2fpropulsion_2eproto::AddDescriptors();
  ::protobuf_goldo_2fnucleo_2frobot_5fsimulator_2eproto::AddDescriptors();
  ::protobuf_goldo_2fnucleo_2fservos_2eproto::AddDescriptors();
  ::protobuf_goldo_2fnucleo_2fodrive_2eproto::AddDescriptors();
  ::protobuf_goldo_2fnucleo_2fstatistics_2eproto::AddDescriptors();
  ::protobuf_goldo_2fpb2_5foptions_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_goldo_2fnucleo_2eproto
namespace goldo {
namespace nucleo {
const ::google::protobuf::EnumDescriptor* ScopeChannelConfig_Encoding_descriptor() {
  protobuf_goldo_2fnucleo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_goldo_2fnucleo_2eproto::file_level_enum_descriptors[0];
}
bool ScopeChannelConfig_Encoding_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 4:
    case 5:
    case 6:
    case 8:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ScopeChannelConfig_Encoding ScopeChannelConfig::RAW8;
const ScopeChannelConfig_Encoding ScopeChannelConfig::RAW16;
const ScopeChannelConfig_Encoding ScopeChannelConfig::RAW32;
const ScopeChannelConfig_Encoding ScopeChannelConfig::SCALED8;
const ScopeChannelConfig_Encoding ScopeChannelConfig::SCALED16;
const ScopeChannelConfig_Encoding ScopeChannelConfig::SCALED32;
const ScopeChannelConfig_Encoding ScopeChannelConfig::FLOAT32;
const ScopeChannelConfig_Encoding ScopeChannelConfig::Encoding_MIN;
const ScopeChannelConfig_Encoding ScopeChannelConfig::Encoding_MAX;
const int ScopeChannelConfig::Encoding_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SensorType_descriptor() {
  protobuf_goldo_2fnucleo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_goldo_2fnucleo_2eproto::file_level_enum_descriptors[1];
}
bool SensorType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void SensorConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SensorConfig::kTypeFieldNumber;
const int SensorConfig::kIdFieldNumber;
const int SensorConfig::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SensorConfig::SensorConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fnucleo_2eproto::scc_info_SensorConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.nucleo.SensorConfig)
}
SensorConfig::SensorConfig(const SensorConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&type_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:goldo.nucleo.SensorConfig)
}

void SensorConfig::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&type_)) + sizeof(id_));
}

SensorConfig::~SensorConfig() {
  // @@protoc_insertion_point(destructor:goldo.nucleo.SensorConfig)
  SharedDtor();
}

void SensorConfig::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SensorConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SensorConfig::descriptor() {
  ::protobuf_goldo_2fnucleo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SensorConfig& SensorConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fnucleo_2eproto::scc_info_SensorConfig.base);
  return *internal_default_instance();
}


void SensorConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.nucleo.SensorConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&type_)) + sizeof(id_));
  _internal_metadata_.Clear();
}

bool SensorConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.nucleo.SensorConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .goldo.nucleo.SensorType type = 1 [(.goldo.pb2_options.cpp_type) = UINT8];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::goldo::nucleo::SensorType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 id = 2 [(.goldo.pb2_options.cpp_type) = UINT8];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 64 [(.goldo.pb2_options.cpp_type) = VOID];
      case 64: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 514 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "goldo.nucleo.SensorConfig.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.nucleo.SensorConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.nucleo.SensorConfig)
  return false;
#undef DO_
}

void SensorConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.nucleo.SensorConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .goldo.nucleo.SensorType type = 1 [(.goldo.pb2_options.cpp_type) = UINT8];
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // int32 id = 2 [(.goldo.pb2_options.cpp_type) = UINT8];
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  // string name = 64 [(.goldo.pb2_options.cpp_type) = VOID];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "goldo.nucleo.SensorConfig.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      64, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.nucleo.SensorConfig)
}

::google::protobuf::uint8* SensorConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.nucleo.SensorConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .goldo.nucleo.SensorType type = 1 [(.goldo.pb2_options.cpp_type) = UINT8];
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // int32 id = 2 [(.goldo.pb2_options.cpp_type) = UINT8];
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  // string name = 64 [(.goldo.pb2_options.cpp_type) = VOID];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "goldo.nucleo.SensorConfig.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        64, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.nucleo.SensorConfig)
  return target;
}

size_t SensorConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.nucleo.SensorConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 64 [(.goldo.pb2_options.cpp_type) = VOID];
  if (this->name().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .goldo.nucleo.SensorType type = 1 [(.goldo.pb2_options.cpp_type) = UINT8];
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // int32 id = 2 [(.goldo.pb2_options.cpp_type) = UINT8];
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SensorConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.nucleo.SensorConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const SensorConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SensorConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.nucleo.SensorConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.nucleo.SensorConfig)
    MergeFrom(*source);
  }
}

void SensorConfig::MergeFrom(const SensorConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.nucleo.SensorConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void SensorConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.nucleo.SensorConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SensorConfig::CopyFrom(const SensorConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.nucleo.SensorConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SensorConfig::IsInitialized() const {
  return true;
}

void SensorConfig::Swap(SensorConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SensorConfig::InternalSwap(SensorConfig* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SensorConfig::GetMetadata() const {
  protobuf_goldo_2fnucleo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NucleoConfig::InitAsDefaultInstance() {
  ::goldo::nucleo::_NucleoConfig_default_instance_._instance.get_mutable()->hal_ = const_cast< ::goldo::nucleo::hal::HalConfig*>(
      ::goldo::nucleo::hal::HalConfig::internal_default_instance());
  ::goldo::nucleo::_NucleoConfig_default_instance_._instance.get_mutable()->robot_simulator_ = const_cast< ::goldo::nucleo::robot_simulator::RobotSimulatorConfig*>(
      ::goldo::nucleo::robot_simulator::RobotSimulatorConfig::internal_default_instance());
  ::goldo::nucleo::_NucleoConfig_default_instance_._instance.get_mutable()->odometry_ = const_cast< ::goldo::nucleo::odometry::OdometryConfig*>(
      ::goldo::nucleo::odometry::OdometryConfig::internal_default_instance());
  ::goldo::nucleo::_NucleoConfig_default_instance_._instance.get_mutable()->propulsion_ = const_cast< ::goldo::nucleo::propulsion::PropulsionControllerConfig*>(
      ::goldo::nucleo::propulsion::PropulsionControllerConfig::internal_default_instance());
  ::goldo::nucleo::_NucleoConfig_default_instance_._instance.get_mutable()->propulsion_task_ = const_cast< ::goldo::nucleo::propulsion::PropulsionTaskConfig*>(
      ::goldo::nucleo::propulsion::PropulsionTaskConfig::internal_default_instance());
}
void NucleoConfig::clear_hal() {
  if (GetArenaNoVirtual() == NULL && hal_ != NULL) {
    delete hal_;
  }
  hal_ = NULL;
}
void NucleoConfig::clear_robot_simulator() {
  if (GetArenaNoVirtual() == NULL && robot_simulator_ != NULL) {
    delete robot_simulator_;
  }
  robot_simulator_ = NULL;
}
void NucleoConfig::clear_odometry() {
  if (GetArenaNoVirtual() == NULL && odometry_ != NULL) {
    delete odometry_;
  }
  odometry_ = NULL;
}
void NucleoConfig::clear_propulsion() {
  if (GetArenaNoVirtual() == NULL && propulsion_ != NULL) {
    delete propulsion_;
  }
  propulsion_ = NULL;
}
void NucleoConfig::clear_propulsion_task() {
  if (GetArenaNoVirtual() == NULL && propulsion_task_ != NULL) {
    delete propulsion_task_;
  }
  propulsion_task_ = NULL;
}
void NucleoConfig::clear_servos() {
  servos_.Clear();
}
void NucleoConfig::clear_lifts() {
  lifts_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NucleoConfig::kHalFieldNumber;
const int NucleoConfig::kRobotSimulatorFieldNumber;
const int NucleoConfig::kOdometryFieldNumber;
const int NucleoConfig::kPropulsionFieldNumber;
const int NucleoConfig::kPropulsionTaskFieldNumber;
const int NucleoConfig::kServosFieldNumber;
const int NucleoConfig::kSensorsFieldNumber;
const int NucleoConfig::kEnabledTasksFieldNumber;
const int NucleoConfig::kLiftsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NucleoConfig::NucleoConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fnucleo_2eproto::scc_info_NucleoConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.nucleo.NucleoConfig)
}
NucleoConfig::NucleoConfig(const NucleoConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      servos_(from.servos_),
      sensors_(from.sensors_),
      enabled_tasks_(from.enabled_tasks_),
      lifts_(from.lifts_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_hal()) {
    hal_ = new ::goldo::nucleo::hal::HalConfig(*from.hal_);
  } else {
    hal_ = NULL;
  }
  if (from.has_robot_simulator()) {
    robot_simulator_ = new ::goldo::nucleo::robot_simulator::RobotSimulatorConfig(*from.robot_simulator_);
  } else {
    robot_simulator_ = NULL;
  }
  if (from.has_odometry()) {
    odometry_ = new ::goldo::nucleo::odometry::OdometryConfig(*from.odometry_);
  } else {
    odometry_ = NULL;
  }
  if (from.has_propulsion()) {
    propulsion_ = new ::goldo::nucleo::propulsion::PropulsionControllerConfig(*from.propulsion_);
  } else {
    propulsion_ = NULL;
  }
  if (from.has_propulsion_task()) {
    propulsion_task_ = new ::goldo::nucleo::propulsion::PropulsionTaskConfig(*from.propulsion_task_);
  } else {
    propulsion_task_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:goldo.nucleo.NucleoConfig)
}

void NucleoConfig::SharedCtor() {
  ::memset(&hal_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&propulsion_task_) -
      reinterpret_cast<char*>(&hal_)) + sizeof(propulsion_task_));
}

NucleoConfig::~NucleoConfig() {
  // @@protoc_insertion_point(destructor:goldo.nucleo.NucleoConfig)
  SharedDtor();
}

void NucleoConfig::SharedDtor() {
  if (this != internal_default_instance()) delete hal_;
  if (this != internal_default_instance()) delete robot_simulator_;
  if (this != internal_default_instance()) delete odometry_;
  if (this != internal_default_instance()) delete propulsion_;
  if (this != internal_default_instance()) delete propulsion_task_;
}

void NucleoConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NucleoConfig::descriptor() {
  ::protobuf_goldo_2fnucleo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NucleoConfig& NucleoConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fnucleo_2eproto::scc_info_NucleoConfig.base);
  return *internal_default_instance();
}


void NucleoConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.nucleo.NucleoConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  servos_.Clear();
  sensors_.Clear();
  enabled_tasks_.Clear();
  lifts_.Clear();
  if (GetArenaNoVirtual() == NULL && hal_ != NULL) {
    delete hal_;
  }
  hal_ = NULL;
  if (GetArenaNoVirtual() == NULL && robot_simulator_ != NULL) {
    delete robot_simulator_;
  }
  robot_simulator_ = NULL;
  if (GetArenaNoVirtual() == NULL && odometry_ != NULL) {
    delete odometry_;
  }
  odometry_ = NULL;
  if (GetArenaNoVirtual() == NULL && propulsion_ != NULL) {
    delete propulsion_;
  }
  propulsion_ = NULL;
  if (GetArenaNoVirtual() == NULL && propulsion_task_ != NULL) {
    delete propulsion_task_;
  }
  propulsion_task_ = NULL;
  _internal_metadata_.Clear();
}

bool NucleoConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.nucleo.NucleoConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .goldo.nucleo.hal.HalConfig hal = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hal()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .goldo.nucleo.robot_simulator.RobotSimulatorConfig robot_simulator = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_robot_simulator()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .goldo.nucleo.odometry.OdometryConfig odometry = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_odometry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .goldo.nucleo.propulsion.PropulsionControllerConfig propulsion = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_propulsion()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .goldo.nucleo.propulsion.PropulsionTaskConfig propulsion_task = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_propulsion_task()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .goldo.nucleo.servos.ServoConfig servos = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_servos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .goldo.nucleo.SensorConfig sensors = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sensors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string enabled_tasks = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_enabled_tasks()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->enabled_tasks(this->enabled_tasks_size() - 1).data(),
            static_cast<int>(this->enabled_tasks(this->enabled_tasks_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "goldo.nucleo.NucleoConfig.enabled_tasks"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .goldo.nucleo.servos.LiftConfig lifts = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_lifts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.nucleo.NucleoConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.nucleo.NucleoConfig)
  return false;
#undef DO_
}

void NucleoConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.nucleo.NucleoConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .goldo.nucleo.hal.HalConfig hal = 1;
  if (this->has_hal()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_hal(), output);
  }

  // .goldo.nucleo.robot_simulator.RobotSimulatorConfig robot_simulator = 2;
  if (this->has_robot_simulator()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_robot_simulator(), output);
  }

  // .goldo.nucleo.odometry.OdometryConfig odometry = 3;
  if (this->has_odometry()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_odometry(), output);
  }

  // .goldo.nucleo.propulsion.PropulsionControllerConfig propulsion = 4;
  if (this->has_propulsion()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_propulsion(), output);
  }

  // .goldo.nucleo.propulsion.PropulsionTaskConfig propulsion_task = 5;
  if (this->has_propulsion_task()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_propulsion_task(), output);
  }

  // repeated .goldo.nucleo.servos.ServoConfig servos = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->servos_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->servos(static_cast<int>(i)),
      output);
  }

  // repeated .goldo.nucleo.SensorConfig sensors = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sensors_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->sensors(static_cast<int>(i)),
      output);
  }

  // repeated string enabled_tasks = 8;
  for (int i = 0, n = this->enabled_tasks_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->enabled_tasks(i).data(), static_cast<int>(this->enabled_tasks(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "goldo.nucleo.NucleoConfig.enabled_tasks");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->enabled_tasks(i), output);
  }

  // repeated .goldo.nucleo.servos.LiftConfig lifts = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lifts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->lifts(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.nucleo.NucleoConfig)
}

::google::protobuf::uint8* NucleoConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.nucleo.NucleoConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .goldo.nucleo.hal.HalConfig hal = 1;
  if (this->has_hal()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_hal(), deterministic, target);
  }

  // .goldo.nucleo.robot_simulator.RobotSimulatorConfig robot_simulator = 2;
  if (this->has_robot_simulator()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_robot_simulator(), deterministic, target);
  }

  // .goldo.nucleo.odometry.OdometryConfig odometry = 3;
  if (this->has_odometry()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_odometry(), deterministic, target);
  }

  // .goldo.nucleo.propulsion.PropulsionControllerConfig propulsion = 4;
  if (this->has_propulsion()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_propulsion(), deterministic, target);
  }

  // .goldo.nucleo.propulsion.PropulsionTaskConfig propulsion_task = 5;
  if (this->has_propulsion_task()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_propulsion_task(), deterministic, target);
  }

  // repeated .goldo.nucleo.servos.ServoConfig servos = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->servos_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->servos(static_cast<int>(i)), deterministic, target);
  }

  // repeated .goldo.nucleo.SensorConfig sensors = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sensors_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->sensors(static_cast<int>(i)), deterministic, target);
  }

  // repeated string enabled_tasks = 8;
  for (int i = 0, n = this->enabled_tasks_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->enabled_tasks(i).data(), static_cast<int>(this->enabled_tasks(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "goldo.nucleo.NucleoConfig.enabled_tasks");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(8, this->enabled_tasks(i), target);
  }

  // repeated .goldo.nucleo.servos.LiftConfig lifts = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lifts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->lifts(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.nucleo.NucleoConfig)
  return target;
}

size_t NucleoConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.nucleo.NucleoConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .goldo.nucleo.servos.ServoConfig servos = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->servos_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->servos(static_cast<int>(i)));
    }
  }

  // repeated .goldo.nucleo.SensorConfig sensors = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->sensors_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sensors(static_cast<int>(i)));
    }
  }

  // repeated string enabled_tasks = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->enabled_tasks_size());
  for (int i = 0, n = this->enabled_tasks_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->enabled_tasks(i));
  }

  // repeated .goldo.nucleo.servos.LiftConfig lifts = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->lifts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->lifts(static_cast<int>(i)));
    }
  }

  // .goldo.nucleo.hal.HalConfig hal = 1;
  if (this->has_hal()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *hal_);
  }

  // .goldo.nucleo.robot_simulator.RobotSimulatorConfig robot_simulator = 2;
  if (this->has_robot_simulator()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *robot_simulator_);
  }

  // .goldo.nucleo.odometry.OdometryConfig odometry = 3;
  if (this->has_odometry()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *odometry_);
  }

  // .goldo.nucleo.propulsion.PropulsionControllerConfig propulsion = 4;
  if (this->has_propulsion()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *propulsion_);
  }

  // .goldo.nucleo.propulsion.PropulsionTaskConfig propulsion_task = 5;
  if (this->has_propulsion_task()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *propulsion_task_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NucleoConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.nucleo.NucleoConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const NucleoConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NucleoConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.nucleo.NucleoConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.nucleo.NucleoConfig)
    MergeFrom(*source);
  }
}

void NucleoConfig::MergeFrom(const NucleoConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.nucleo.NucleoConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  servos_.MergeFrom(from.servos_);
  sensors_.MergeFrom(from.sensors_);
  enabled_tasks_.MergeFrom(from.enabled_tasks_);
  lifts_.MergeFrom(from.lifts_);
  if (from.has_hal()) {
    mutable_hal()->::goldo::nucleo::hal::HalConfig::MergeFrom(from.hal());
  }
  if (from.has_robot_simulator()) {
    mutable_robot_simulator()->::goldo::nucleo::robot_simulator::RobotSimulatorConfig::MergeFrom(from.robot_simulator());
  }
  if (from.has_odometry()) {
    mutable_odometry()->::goldo::nucleo::odometry::OdometryConfig::MergeFrom(from.odometry());
  }
  if (from.has_propulsion()) {
    mutable_propulsion()->::goldo::nucleo::propulsion::PropulsionControllerConfig::MergeFrom(from.propulsion());
  }
  if (from.has_propulsion_task()) {
    mutable_propulsion_task()->::goldo::nucleo::propulsion::PropulsionTaskConfig::MergeFrom(from.propulsion_task());
  }
}

void NucleoConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.nucleo.NucleoConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NucleoConfig::CopyFrom(const NucleoConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.nucleo.NucleoConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NucleoConfig::IsInitialized() const {
  return true;
}

void NucleoConfig::Swap(NucleoConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NucleoConfig::InternalSwap(NucleoConfig* other) {
  using std::swap;
  CastToBase(&servos_)->InternalSwap(CastToBase(&other->servos_));
  CastToBase(&sensors_)->InternalSwap(CastToBase(&other->sensors_));
  enabled_tasks_.InternalSwap(CastToBase(&other->enabled_tasks_));
  CastToBase(&lifts_)->InternalSwap(CastToBase(&other->lifts_));
  swap(hal_, other->hal_);
  swap(robot_simulator_, other->robot_simulator_);
  swap(odometry_, other->odometry_);
  swap(propulsion_, other->propulsion_);
  swap(propulsion_task_, other->propulsion_task_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NucleoConfig::GetMetadata() const {
  protobuf_goldo_2fnucleo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NucleoTasksState::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NucleoTasksState::kCommUartFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NucleoTasksState::NucleoTasksState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fnucleo_2eproto::scc_info_NucleoTasksState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.nucleo.NucleoTasksState)
}
NucleoTasksState::NucleoTasksState(const NucleoTasksState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  comm_uart_ = from.comm_uart_;
  // @@protoc_insertion_point(copy_constructor:goldo.nucleo.NucleoTasksState)
}

void NucleoTasksState::SharedCtor() {
  comm_uart_ = false;
}

NucleoTasksState::~NucleoTasksState() {
  // @@protoc_insertion_point(destructor:goldo.nucleo.NucleoTasksState)
  SharedDtor();
}

void NucleoTasksState::SharedDtor() {
}

void NucleoTasksState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NucleoTasksState::descriptor() {
  ::protobuf_goldo_2fnucleo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NucleoTasksState& NucleoTasksState::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fnucleo_2eproto::scc_info_NucleoTasksState.base);
  return *internal_default_instance();
}


void NucleoTasksState::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.nucleo.NucleoTasksState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  comm_uart_ = false;
  _internal_metadata_.Clear();
}

bool NucleoTasksState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.nucleo.NucleoTasksState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool comm_uart = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &comm_uart_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.nucleo.NucleoTasksState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.nucleo.NucleoTasksState)
  return false;
#undef DO_
}

void NucleoTasksState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.nucleo.NucleoTasksState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool comm_uart = 1;
  if (this->comm_uart() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->comm_uart(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.nucleo.NucleoTasksState)
}

::google::protobuf::uint8* NucleoTasksState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.nucleo.NucleoTasksState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool comm_uart = 1;
  if (this->comm_uart() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->comm_uart(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.nucleo.NucleoTasksState)
  return target;
}

size_t NucleoTasksState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.nucleo.NucleoTasksState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool comm_uart = 1;
  if (this->comm_uart() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NucleoTasksState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.nucleo.NucleoTasksState)
  GOOGLE_DCHECK_NE(&from, this);
  const NucleoTasksState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NucleoTasksState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.nucleo.NucleoTasksState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.nucleo.NucleoTasksState)
    MergeFrom(*source);
  }
}

void NucleoTasksState::MergeFrom(const NucleoTasksState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.nucleo.NucleoTasksState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.comm_uart() != 0) {
    set_comm_uart(from.comm_uart());
  }
}

void NucleoTasksState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.nucleo.NucleoTasksState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NucleoTasksState::CopyFrom(const NucleoTasksState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.nucleo.NucleoTasksState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NucleoTasksState::IsInitialized() const {
  return true;
}

void NucleoTasksState::Swap(NucleoTasksState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NucleoTasksState::InternalSwap(NucleoTasksState* other) {
  using std::swap;
  swap(comm_uart_, other->comm_uart_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NucleoTasksState::GetMetadata() const {
  protobuf_goldo_2fnucleo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NucleoTasksStatistics::InitAsDefaultInstance() {
  ::goldo::nucleo::_NucleoTasksStatistics_default_instance_._instance.get_mutable()->uart_comm_ = const_cast< ::goldo::nucleo::statistics::UARTCommTaskStatistics*>(
      ::goldo::nucleo::statistics::UARTCommTaskStatistics::internal_default_instance());
  ::goldo::nucleo::_NucleoTasksStatistics_default_instance_._instance.get_mutable()->odrive_comm_ = const_cast< ::goldo::nucleo::statistics::ODriveCommTaskStatistics*>(
      ::goldo::nucleo::statistics::ODriveCommTaskStatistics::internal_default_instance());
  ::goldo::nucleo::_NucleoTasksStatistics_default_instance_._instance.get_mutable()->propulsion_ = const_cast< ::goldo::nucleo::statistics::PropulsionTaskStatistics*>(
      ::goldo::nucleo::statistics::PropulsionTaskStatistics::internal_default_instance());
}
void NucleoTasksStatistics::clear_uart_comm() {
  if (GetArenaNoVirtual() == NULL && uart_comm_ != NULL) {
    delete uart_comm_;
  }
  uart_comm_ = NULL;
}
void NucleoTasksStatistics::clear_odrive_comm() {
  if (GetArenaNoVirtual() == NULL && odrive_comm_ != NULL) {
    delete odrive_comm_;
  }
  odrive_comm_ = NULL;
}
void NucleoTasksStatistics::clear_propulsion() {
  if (GetArenaNoVirtual() == NULL && propulsion_ != NULL) {
    delete propulsion_;
  }
  propulsion_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NucleoTasksStatistics::kUartCommFieldNumber;
const int NucleoTasksStatistics::kOdriveCommFieldNumber;
const int NucleoTasksStatistics::kPropulsionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NucleoTasksStatistics::NucleoTasksStatistics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fnucleo_2eproto::scc_info_NucleoTasksStatistics.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.nucleo.NucleoTasksStatistics)
}
NucleoTasksStatistics::NucleoTasksStatistics(const NucleoTasksStatistics& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_uart_comm()) {
    uart_comm_ = new ::goldo::nucleo::statistics::UARTCommTaskStatistics(*from.uart_comm_);
  } else {
    uart_comm_ = NULL;
  }
  if (from.has_odrive_comm()) {
    odrive_comm_ = new ::goldo::nucleo::statistics::ODriveCommTaskStatistics(*from.odrive_comm_);
  } else {
    odrive_comm_ = NULL;
  }
  if (from.has_propulsion()) {
    propulsion_ = new ::goldo::nucleo::statistics::PropulsionTaskStatistics(*from.propulsion_);
  } else {
    propulsion_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:goldo.nucleo.NucleoTasksStatistics)
}

void NucleoTasksStatistics::SharedCtor() {
  ::memset(&uart_comm_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&propulsion_) -
      reinterpret_cast<char*>(&uart_comm_)) + sizeof(propulsion_));
}

NucleoTasksStatistics::~NucleoTasksStatistics() {
  // @@protoc_insertion_point(destructor:goldo.nucleo.NucleoTasksStatistics)
  SharedDtor();
}

void NucleoTasksStatistics::SharedDtor() {
  if (this != internal_default_instance()) delete uart_comm_;
  if (this != internal_default_instance()) delete odrive_comm_;
  if (this != internal_default_instance()) delete propulsion_;
}

void NucleoTasksStatistics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NucleoTasksStatistics::descriptor() {
  ::protobuf_goldo_2fnucleo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NucleoTasksStatistics& NucleoTasksStatistics::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fnucleo_2eproto::scc_info_NucleoTasksStatistics.base);
  return *internal_default_instance();
}


void NucleoTasksStatistics::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.nucleo.NucleoTasksStatistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && uart_comm_ != NULL) {
    delete uart_comm_;
  }
  uart_comm_ = NULL;
  if (GetArenaNoVirtual() == NULL && odrive_comm_ != NULL) {
    delete odrive_comm_;
  }
  odrive_comm_ = NULL;
  if (GetArenaNoVirtual() == NULL && propulsion_ != NULL) {
    delete propulsion_;
  }
  propulsion_ = NULL;
  _internal_metadata_.Clear();
}

bool NucleoTasksStatistics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.nucleo.NucleoTasksStatistics)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .goldo.nucleo.statistics.UARTCommTaskStatistics uart_comm = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_uart_comm()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .goldo.nucleo.statistics.ODriveCommTaskStatistics odrive_comm = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_odrive_comm()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .goldo.nucleo.statistics.PropulsionTaskStatistics propulsion = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_propulsion()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.nucleo.NucleoTasksStatistics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.nucleo.NucleoTasksStatistics)
  return false;
#undef DO_
}

void NucleoTasksStatistics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.nucleo.NucleoTasksStatistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .goldo.nucleo.statistics.UARTCommTaskStatistics uart_comm = 1;
  if (this->has_uart_comm()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_uart_comm(), output);
  }

  // .goldo.nucleo.statistics.ODriveCommTaskStatistics odrive_comm = 2;
  if (this->has_odrive_comm()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_odrive_comm(), output);
  }

  // .goldo.nucleo.statistics.PropulsionTaskStatistics propulsion = 3;
  if (this->has_propulsion()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_propulsion(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.nucleo.NucleoTasksStatistics)
}

::google::protobuf::uint8* NucleoTasksStatistics::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.nucleo.NucleoTasksStatistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .goldo.nucleo.statistics.UARTCommTaskStatistics uart_comm = 1;
  if (this->has_uart_comm()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_uart_comm(), deterministic, target);
  }

  // .goldo.nucleo.statistics.ODriveCommTaskStatistics odrive_comm = 2;
  if (this->has_odrive_comm()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_odrive_comm(), deterministic, target);
  }

  // .goldo.nucleo.statistics.PropulsionTaskStatistics propulsion = 3;
  if (this->has_propulsion()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_propulsion(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.nucleo.NucleoTasksStatistics)
  return target;
}

size_t NucleoTasksStatistics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.nucleo.NucleoTasksStatistics)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .goldo.nucleo.statistics.UARTCommTaskStatistics uart_comm = 1;
  if (this->has_uart_comm()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *uart_comm_);
  }

  // .goldo.nucleo.statistics.ODriveCommTaskStatistics odrive_comm = 2;
  if (this->has_odrive_comm()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *odrive_comm_);
  }

  // .goldo.nucleo.statistics.PropulsionTaskStatistics propulsion = 3;
  if (this->has_propulsion()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *propulsion_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NucleoTasksStatistics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.nucleo.NucleoTasksStatistics)
  GOOGLE_DCHECK_NE(&from, this);
  const NucleoTasksStatistics* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NucleoTasksStatistics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.nucleo.NucleoTasksStatistics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.nucleo.NucleoTasksStatistics)
    MergeFrom(*source);
  }
}

void NucleoTasksStatistics::MergeFrom(const NucleoTasksStatistics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.nucleo.NucleoTasksStatistics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_uart_comm()) {
    mutable_uart_comm()->::goldo::nucleo::statistics::UARTCommTaskStatistics::MergeFrom(from.uart_comm());
  }
  if (from.has_odrive_comm()) {
    mutable_odrive_comm()->::goldo::nucleo::statistics::ODriveCommTaskStatistics::MergeFrom(from.odrive_comm());
  }
  if (from.has_propulsion()) {
    mutable_propulsion()->::goldo::nucleo::statistics::PropulsionTaskStatistics::MergeFrom(from.propulsion());
  }
}

void NucleoTasksStatistics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.nucleo.NucleoTasksStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NucleoTasksStatistics::CopyFrom(const NucleoTasksStatistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.nucleo.NucleoTasksStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NucleoTasksStatistics::IsInitialized() const {
  return true;
}

void NucleoTasksStatistics::Swap(NucleoTasksStatistics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NucleoTasksStatistics::InternalSwap(NucleoTasksStatistics* other) {
  using std::swap;
  swap(uart_comm_, other->uart_comm_);
  swap(odrive_comm_, other->odrive_comm_);
  swap(propulsion_, other->propulsion_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NucleoTasksStatistics::GetMetadata() const {
  protobuf_goldo_2fnucleo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FreeRTOSTaskStats::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FreeRTOSTaskStats::kTaskNameFieldNumber;
const int FreeRTOSTaskStats::kRuntimeCounterFieldNumber;
const int FreeRTOSTaskStats::kTaskNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FreeRTOSTaskStats::FreeRTOSTaskStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fnucleo_2eproto::scc_info_FreeRTOSTaskStats.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.nucleo.FreeRTOSTaskStats)
}
FreeRTOSTaskStats::FreeRTOSTaskStats(const FreeRTOSTaskStats& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  task_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.task_name().size() > 0) {
    task_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_name_);
  }
  ::memcpy(&runtime_counter_, &from.runtime_counter_,
    static_cast<size_t>(reinterpret_cast<char*>(&task_number_) -
    reinterpret_cast<char*>(&runtime_counter_)) + sizeof(task_number_));
  // @@protoc_insertion_point(copy_constructor:goldo.nucleo.FreeRTOSTaskStats)
}

void FreeRTOSTaskStats::SharedCtor() {
  task_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&runtime_counter_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&task_number_) -
      reinterpret_cast<char*>(&runtime_counter_)) + sizeof(task_number_));
}

FreeRTOSTaskStats::~FreeRTOSTaskStats() {
  // @@protoc_insertion_point(destructor:goldo.nucleo.FreeRTOSTaskStats)
  SharedDtor();
}

void FreeRTOSTaskStats::SharedDtor() {
  task_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FreeRTOSTaskStats::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FreeRTOSTaskStats::descriptor() {
  ::protobuf_goldo_2fnucleo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FreeRTOSTaskStats& FreeRTOSTaskStats::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fnucleo_2eproto::scc_info_FreeRTOSTaskStats.base);
  return *internal_default_instance();
}


void FreeRTOSTaskStats::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.nucleo.FreeRTOSTaskStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  task_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&runtime_counter_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&task_number_) -
      reinterpret_cast<char*>(&runtime_counter_)) + sizeof(task_number_));
  _internal_metadata_.Clear();
}

bool FreeRTOSTaskStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.nucleo.FreeRTOSTaskStats)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string task_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_task_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->task_name().data(), static_cast<int>(this->task_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "goldo.nucleo.FreeRTOSTaskStats.task_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 runtime_counter = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &runtime_counter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 task_number = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &task_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.nucleo.FreeRTOSTaskStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.nucleo.FreeRTOSTaskStats)
  return false;
#undef DO_
}

void FreeRTOSTaskStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.nucleo.FreeRTOSTaskStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string task_name = 1;
  if (this->task_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->task_name().data(), static_cast<int>(this->task_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "goldo.nucleo.FreeRTOSTaskStats.task_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->task_name(), output);
  }

  // uint32 runtime_counter = 2;
  if (this->runtime_counter() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->runtime_counter(), output);
  }

  // uint32 task_number = 3;
  if (this->task_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->task_number(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.nucleo.FreeRTOSTaskStats)
}

::google::protobuf::uint8* FreeRTOSTaskStats::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.nucleo.FreeRTOSTaskStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string task_name = 1;
  if (this->task_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->task_name().data(), static_cast<int>(this->task_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "goldo.nucleo.FreeRTOSTaskStats.task_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->task_name(), target);
  }

  // uint32 runtime_counter = 2;
  if (this->runtime_counter() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->runtime_counter(), target);
  }

  // uint32 task_number = 3;
  if (this->task_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->task_number(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.nucleo.FreeRTOSTaskStats)
  return target;
}

size_t FreeRTOSTaskStats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.nucleo.FreeRTOSTaskStats)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string task_name = 1;
  if (this->task_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->task_name());
  }

  // uint32 runtime_counter = 2;
  if (this->runtime_counter() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->runtime_counter());
  }

  // uint32 task_number = 3;
  if (this->task_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->task_number());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FreeRTOSTaskStats::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.nucleo.FreeRTOSTaskStats)
  GOOGLE_DCHECK_NE(&from, this);
  const FreeRTOSTaskStats* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FreeRTOSTaskStats>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.nucleo.FreeRTOSTaskStats)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.nucleo.FreeRTOSTaskStats)
    MergeFrom(*source);
  }
}

void FreeRTOSTaskStats::MergeFrom(const FreeRTOSTaskStats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.nucleo.FreeRTOSTaskStats)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.task_name().size() > 0) {

    task_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_name_);
  }
  if (from.runtime_counter() != 0) {
    set_runtime_counter(from.runtime_counter());
  }
  if (from.task_number() != 0) {
    set_task_number(from.task_number());
  }
}

void FreeRTOSTaskStats::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.nucleo.FreeRTOSTaskStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FreeRTOSTaskStats::CopyFrom(const FreeRTOSTaskStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.nucleo.FreeRTOSTaskStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FreeRTOSTaskStats::IsInitialized() const {
  return true;
}

void FreeRTOSTaskStats::Swap(FreeRTOSTaskStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FreeRTOSTaskStats::InternalSwap(FreeRTOSTaskStats* other) {
  using std::swap;
  task_name_.Swap(&other->task_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(runtime_counter_, other->runtime_counter_);
  swap(task_number_, other->task_number_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FreeRTOSTaskStats::GetMetadata() const {
  protobuf_goldo_2fnucleo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FreeRTOSTasksStats::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FreeRTOSTasksStats::kTasksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FreeRTOSTasksStats::FreeRTOSTasksStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fnucleo_2eproto::scc_info_FreeRTOSTasksStats.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.nucleo.FreeRTOSTasksStats)
}
FreeRTOSTasksStats::FreeRTOSTasksStats(const FreeRTOSTasksStats& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tasks_(from.tasks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:goldo.nucleo.FreeRTOSTasksStats)
}

void FreeRTOSTasksStats::SharedCtor() {
}

FreeRTOSTasksStats::~FreeRTOSTasksStats() {
  // @@protoc_insertion_point(destructor:goldo.nucleo.FreeRTOSTasksStats)
  SharedDtor();
}

void FreeRTOSTasksStats::SharedDtor() {
}

void FreeRTOSTasksStats::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FreeRTOSTasksStats::descriptor() {
  ::protobuf_goldo_2fnucleo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FreeRTOSTasksStats& FreeRTOSTasksStats::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fnucleo_2eproto::scc_info_FreeRTOSTasksStats.base);
  return *internal_default_instance();
}


void FreeRTOSTasksStats::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.nucleo.FreeRTOSTasksStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tasks_.Clear();
  _internal_metadata_.Clear();
}

bool FreeRTOSTasksStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.nucleo.FreeRTOSTasksStats)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .goldo.nucleo.FreeRTOSTaskStats tasks = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tasks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.nucleo.FreeRTOSTasksStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.nucleo.FreeRTOSTasksStats)
  return false;
#undef DO_
}

void FreeRTOSTasksStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.nucleo.FreeRTOSTasksStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .goldo.nucleo.FreeRTOSTaskStats tasks = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tasks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->tasks(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.nucleo.FreeRTOSTasksStats)
}

::google::protobuf::uint8* FreeRTOSTasksStats::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.nucleo.FreeRTOSTasksStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .goldo.nucleo.FreeRTOSTaskStats tasks = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tasks_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->tasks(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.nucleo.FreeRTOSTasksStats)
  return target;
}

size_t FreeRTOSTasksStats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.nucleo.FreeRTOSTasksStats)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .goldo.nucleo.FreeRTOSTaskStats tasks = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->tasks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tasks(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FreeRTOSTasksStats::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.nucleo.FreeRTOSTasksStats)
  GOOGLE_DCHECK_NE(&from, this);
  const FreeRTOSTasksStats* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FreeRTOSTasksStats>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.nucleo.FreeRTOSTasksStats)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.nucleo.FreeRTOSTasksStats)
    MergeFrom(*source);
  }
}

void FreeRTOSTasksStats::MergeFrom(const FreeRTOSTasksStats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.nucleo.FreeRTOSTasksStats)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tasks_.MergeFrom(from.tasks_);
}

void FreeRTOSTasksStats::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.nucleo.FreeRTOSTasksStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FreeRTOSTasksStats::CopyFrom(const FreeRTOSTasksStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.nucleo.FreeRTOSTasksStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FreeRTOSTasksStats::IsInitialized() const {
  return true;
}

void FreeRTOSTasksStats::Swap(FreeRTOSTasksStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FreeRTOSTasksStats::InternalSwap(FreeRTOSTasksStats* other) {
  using std::swap;
  CastToBase(&tasks_)->InternalSwap(CastToBase(&other->tasks_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FreeRTOSTasksStats::GetMetadata() const {
  protobuf_goldo_2fnucleo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NucleoState::InitAsDefaultInstance() {
  ::goldo::nucleo::_NucleoState_default_instance_._instance.get_mutable()->tasks_statistics_ = const_cast< ::goldo::nucleo::NucleoTasksStatistics*>(
      ::goldo::nucleo::NucleoTasksStatistics::internal_default_instance());
  ::goldo::nucleo::_NucleoState_default_instance_._instance.get_mutable()->odrive_ = const_cast< ::goldo::nucleo::odrive::ODriveStatus*>(
      ::goldo::nucleo::odrive::ODriveStatus::internal_default_instance());
  ::goldo::nucleo::_NucleoState_default_instance_._instance.get_mutable()->odrive_client_statistics_ = const_cast< ::goldo::nucleo::odrive::ClientStatistics*>(
      ::goldo::nucleo::odrive::ClientStatistics::internal_default_instance());
}
void NucleoState::clear_odrive() {
  if (GetArenaNoVirtual() == NULL && odrive_ != NULL) {
    delete odrive_;
  }
  odrive_ = NULL;
}
void NucleoState::clear_odrive_client_statistics() {
  if (GetArenaNoVirtual() == NULL && odrive_client_statistics_ != NULL) {
    delete odrive_client_statistics_;
  }
  odrive_client_statistics_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NucleoState::kConnectedFieldNumber;
const int NucleoState::kConfiguredFieldNumber;
const int NucleoState::kHeartbeatFieldNumber;
const int NucleoState::kTasksStatisticsFieldNumber;
const int NucleoState::kOdriveFieldNumber;
const int NucleoState::kOdriveClientStatisticsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NucleoState::NucleoState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fnucleo_2eproto::scc_info_NucleoState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.nucleo.NucleoState)
}
NucleoState::NucleoState(const NucleoState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_tasks_statistics()) {
    tasks_statistics_ = new ::goldo::nucleo::NucleoTasksStatistics(*from.tasks_statistics_);
  } else {
    tasks_statistics_ = NULL;
  }
  if (from.has_odrive()) {
    odrive_ = new ::goldo::nucleo::odrive::ODriveStatus(*from.odrive_);
  } else {
    odrive_ = NULL;
  }
  if (from.has_odrive_client_statistics()) {
    odrive_client_statistics_ = new ::goldo::nucleo::odrive::ClientStatistics(*from.odrive_client_statistics_);
  } else {
    odrive_client_statistics_ = NULL;
  }
  ::memcpy(&connected_, &from.connected_,
    static_cast<size_t>(reinterpret_cast<char*>(&heartbeat_) -
    reinterpret_cast<char*>(&connected_)) + sizeof(heartbeat_));
  // @@protoc_insertion_point(copy_constructor:goldo.nucleo.NucleoState)
}

void NucleoState::SharedCtor() {
  ::memset(&tasks_statistics_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&heartbeat_) -
      reinterpret_cast<char*>(&tasks_statistics_)) + sizeof(heartbeat_));
}

NucleoState::~NucleoState() {
  // @@protoc_insertion_point(destructor:goldo.nucleo.NucleoState)
  SharedDtor();
}

void NucleoState::SharedDtor() {
  if (this != internal_default_instance()) delete tasks_statistics_;
  if (this != internal_default_instance()) delete odrive_;
  if (this != internal_default_instance()) delete odrive_client_statistics_;
}

void NucleoState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NucleoState::descriptor() {
  ::protobuf_goldo_2fnucleo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NucleoState& NucleoState::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fnucleo_2eproto::scc_info_NucleoState.base);
  return *internal_default_instance();
}


void NucleoState::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.nucleo.NucleoState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && tasks_statistics_ != NULL) {
    delete tasks_statistics_;
  }
  tasks_statistics_ = NULL;
  if (GetArenaNoVirtual() == NULL && odrive_ != NULL) {
    delete odrive_;
  }
  odrive_ = NULL;
  if (GetArenaNoVirtual() == NULL && odrive_client_statistics_ != NULL) {
    delete odrive_client_statistics_;
  }
  odrive_client_statistics_ = NULL;
  ::memset(&connected_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&heartbeat_) -
      reinterpret_cast<char*>(&connected_)) + sizeof(heartbeat_));
  _internal_metadata_.Clear();
}

bool NucleoState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.nucleo.NucleoState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool connected = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &connected_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool configured = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &configured_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 heartbeat = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &heartbeat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .goldo.nucleo.NucleoTasksStatistics tasks_statistics = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tasks_statistics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .goldo.nucleo.odrive.ODriveStatus odrive = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_odrive()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .goldo.nucleo.odrive.ClientStatistics odrive_client_statistics = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_odrive_client_statistics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.nucleo.NucleoState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.nucleo.NucleoState)
  return false;
#undef DO_
}

void NucleoState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.nucleo.NucleoState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool connected = 1;
  if (this->connected() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->connected(), output);
  }

  // bool configured = 2;
  if (this->configured() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->configured(), output);
  }

  // uint32 heartbeat = 3;
  if (this->heartbeat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->heartbeat(), output);
  }

  // .goldo.nucleo.NucleoTasksStatistics tasks_statistics = 4;
  if (this->has_tasks_statistics()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_tasks_statistics(), output);
  }

  // .goldo.nucleo.odrive.ODriveStatus odrive = 5;
  if (this->has_odrive()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_odrive(), output);
  }

  // .goldo.nucleo.odrive.ClientStatistics odrive_client_statistics = 6;
  if (this->has_odrive_client_statistics()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_odrive_client_statistics(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.nucleo.NucleoState)
}

::google::protobuf::uint8* NucleoState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.nucleo.NucleoState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool connected = 1;
  if (this->connected() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->connected(), target);
  }

  // bool configured = 2;
  if (this->configured() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->configured(), target);
  }

  // uint32 heartbeat = 3;
  if (this->heartbeat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->heartbeat(), target);
  }

  // .goldo.nucleo.NucleoTasksStatistics tasks_statistics = 4;
  if (this->has_tasks_statistics()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_tasks_statistics(), deterministic, target);
  }

  // .goldo.nucleo.odrive.ODriveStatus odrive = 5;
  if (this->has_odrive()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_odrive(), deterministic, target);
  }

  // .goldo.nucleo.odrive.ClientStatistics odrive_client_statistics = 6;
  if (this->has_odrive_client_statistics()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_odrive_client_statistics(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.nucleo.NucleoState)
  return target;
}

size_t NucleoState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.nucleo.NucleoState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .goldo.nucleo.NucleoTasksStatistics tasks_statistics = 4;
  if (this->has_tasks_statistics()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *tasks_statistics_);
  }

  // .goldo.nucleo.odrive.ODriveStatus odrive = 5;
  if (this->has_odrive()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *odrive_);
  }

  // .goldo.nucleo.odrive.ClientStatistics odrive_client_statistics = 6;
  if (this->has_odrive_client_statistics()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *odrive_client_statistics_);
  }

  // bool connected = 1;
  if (this->connected() != 0) {
    total_size += 1 + 1;
  }

  // bool configured = 2;
  if (this->configured() != 0) {
    total_size += 1 + 1;
  }

  // uint32 heartbeat = 3;
  if (this->heartbeat() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->heartbeat());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NucleoState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.nucleo.NucleoState)
  GOOGLE_DCHECK_NE(&from, this);
  const NucleoState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NucleoState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.nucleo.NucleoState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.nucleo.NucleoState)
    MergeFrom(*source);
  }
}

void NucleoState::MergeFrom(const NucleoState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.nucleo.NucleoState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_tasks_statistics()) {
    mutable_tasks_statistics()->::goldo::nucleo::NucleoTasksStatistics::MergeFrom(from.tasks_statistics());
  }
  if (from.has_odrive()) {
    mutable_odrive()->::goldo::nucleo::odrive::ODriveStatus::MergeFrom(from.odrive());
  }
  if (from.has_odrive_client_statistics()) {
    mutable_odrive_client_statistics()->::goldo::nucleo::odrive::ClientStatistics::MergeFrom(from.odrive_client_statistics());
  }
  if (from.connected() != 0) {
    set_connected(from.connected());
  }
  if (from.configured() != 0) {
    set_configured(from.configured());
  }
  if (from.heartbeat() != 0) {
    set_heartbeat(from.heartbeat());
  }
}

void NucleoState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.nucleo.NucleoState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NucleoState::CopyFrom(const NucleoState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.nucleo.NucleoState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NucleoState::IsInitialized() const {
  return true;
}

void NucleoState::Swap(NucleoState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NucleoState::InternalSwap(NucleoState* other) {
  using std::swap;
  swap(tasks_statistics_, other->tasks_statistics_);
  swap(odrive_, other->odrive_);
  swap(odrive_client_statistics_, other->odrive_client_statistics_);
  swap(connected_, other->connected_);
  swap(configured_, other->configured_);
  swap(heartbeat_, other->heartbeat_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NucleoState::GetMetadata() const {
  protobuf_goldo_2fnucleo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ScopeChannelConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScopeChannelConfig::kVariableFieldNumber;
const int ScopeChannelConfig::kEncodingFieldNumber;
const int ScopeChannelConfig::kMinValueFieldNumber;
const int ScopeChannelConfig::kMaxValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScopeChannelConfig::ScopeChannelConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fnucleo_2eproto::scc_info_ScopeChannelConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.nucleo.ScopeChannelConfig)
}
ScopeChannelConfig::ScopeChannelConfig(const ScopeChannelConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&variable_, &from.variable_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_value_) -
    reinterpret_cast<char*>(&variable_)) + sizeof(max_value_));
  // @@protoc_insertion_point(copy_constructor:goldo.nucleo.ScopeChannelConfig)
}

void ScopeChannelConfig::SharedCtor() {
  ::memset(&variable_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_value_) -
      reinterpret_cast<char*>(&variable_)) + sizeof(max_value_));
}

ScopeChannelConfig::~ScopeChannelConfig() {
  // @@protoc_insertion_point(destructor:goldo.nucleo.ScopeChannelConfig)
  SharedDtor();
}

void ScopeChannelConfig::SharedDtor() {
}

void ScopeChannelConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ScopeChannelConfig::descriptor() {
  ::protobuf_goldo_2fnucleo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScopeChannelConfig& ScopeChannelConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fnucleo_2eproto::scc_info_ScopeChannelConfig.base);
  return *internal_default_instance();
}


void ScopeChannelConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.nucleo.ScopeChannelConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&variable_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_value_) -
      reinterpret_cast<char*>(&variable_)) + sizeof(max_value_));
  _internal_metadata_.Clear();
}

bool ScopeChannelConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.nucleo.ScopeChannelConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 variable = 1 [(.goldo.pb2_options.cpp_type) = UINT16];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &variable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 encoding = 2 [(.goldo.pb2_options.cpp_type) = UINT16];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &encoding_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float min_value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &min_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float max_value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &max_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.nucleo.ScopeChannelConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.nucleo.ScopeChannelConfig)
  return false;
#undef DO_
}

void ScopeChannelConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.nucleo.ScopeChannelConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 variable = 1 [(.goldo.pb2_options.cpp_type) = UINT16];
  if (this->variable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->variable(), output);
  }

  // uint32 encoding = 2 [(.goldo.pb2_options.cpp_type) = UINT16];
  if (this->encoding() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->encoding(), output);
  }

  // float min_value = 3;
  if (this->min_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->min_value(), output);
  }

  // float max_value = 4;
  if (this->max_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->max_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.nucleo.ScopeChannelConfig)
}

::google::protobuf::uint8* ScopeChannelConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.nucleo.ScopeChannelConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 variable = 1 [(.goldo.pb2_options.cpp_type) = UINT16];
  if (this->variable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->variable(), target);
  }

  // uint32 encoding = 2 [(.goldo.pb2_options.cpp_type) = UINT16];
  if (this->encoding() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->encoding(), target);
  }

  // float min_value = 3;
  if (this->min_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->min_value(), target);
  }

  // float max_value = 4;
  if (this->max_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->max_value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.nucleo.ScopeChannelConfig)
  return target;
}

size_t ScopeChannelConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.nucleo.ScopeChannelConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 variable = 1 [(.goldo.pb2_options.cpp_type) = UINT16];
  if (this->variable() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->variable());
  }

  // uint32 encoding = 2 [(.goldo.pb2_options.cpp_type) = UINT16];
  if (this->encoding() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->encoding());
  }

  // float min_value = 3;
  if (this->min_value() != 0) {
    total_size += 1 + 4;
  }

  // float max_value = 4;
  if (this->max_value() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScopeChannelConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.nucleo.ScopeChannelConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ScopeChannelConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScopeChannelConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.nucleo.ScopeChannelConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.nucleo.ScopeChannelConfig)
    MergeFrom(*source);
  }
}

void ScopeChannelConfig::MergeFrom(const ScopeChannelConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.nucleo.ScopeChannelConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.variable() != 0) {
    set_variable(from.variable());
  }
  if (from.encoding() != 0) {
    set_encoding(from.encoding());
  }
  if (from.min_value() != 0) {
    set_min_value(from.min_value());
  }
  if (from.max_value() != 0) {
    set_max_value(from.max_value());
  }
}

void ScopeChannelConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.nucleo.ScopeChannelConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScopeChannelConfig::CopyFrom(const ScopeChannelConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.nucleo.ScopeChannelConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScopeChannelConfig::IsInitialized() const {
  return true;
}

void ScopeChannelConfig::Swap(ScopeChannelConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScopeChannelConfig::InternalSwap(ScopeChannelConfig* other) {
  using std::swap;
  swap(variable_, other->variable_);
  swap(encoding_, other->encoding_);
  swap(min_value_, other->min_value_);
  swap(max_value_, other->max_value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ScopeChannelConfig::GetMetadata() const {
  protobuf_goldo_2fnucleo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ScopeConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScopeConfig::kPeriodFieldNumber;
const int ScopeConfig::kChannelsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScopeConfig::ScopeConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fnucleo_2eproto::scc_info_ScopeConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.nucleo.ScopeConfig)
}
ScopeConfig::ScopeConfig(const ScopeConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      channels_(from.channels_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  period_ = from.period_;
  // @@protoc_insertion_point(copy_constructor:goldo.nucleo.ScopeConfig)
}

void ScopeConfig::SharedCtor() {
  period_ = 0u;
}

ScopeConfig::~ScopeConfig() {
  // @@protoc_insertion_point(destructor:goldo.nucleo.ScopeConfig)
  SharedDtor();
}

void ScopeConfig::SharedDtor() {
}

void ScopeConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ScopeConfig::descriptor() {
  ::protobuf_goldo_2fnucleo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScopeConfig& ScopeConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fnucleo_2eproto::scc_info_ScopeConfig.base);
  return *internal_default_instance();
}


void ScopeConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.nucleo.ScopeConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  channels_.Clear();
  period_ = 0u;
  _internal_metadata_.Clear();
}

bool ScopeConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.nucleo.ScopeConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 period = 1 [(.goldo.pb2_options.cpp_type) = UINT16];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &period_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .goldo.nucleo.ScopeChannelConfig channels = 2 [(.goldo.pb2_options.max_count) = 8, (.goldo.pb2_options.count_type) = UINT16];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_channels()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.nucleo.ScopeConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.nucleo.ScopeConfig)
  return false;
#undef DO_
}

void ScopeConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.nucleo.ScopeConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 period = 1 [(.goldo.pb2_options.cpp_type) = UINT16];
  if (this->period() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->period(), output);
  }

  // repeated .goldo.nucleo.ScopeChannelConfig channels = 2 [(.goldo.pb2_options.max_count) = 8, (.goldo.pb2_options.count_type) = UINT16];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->channels_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->channels(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.nucleo.ScopeConfig)
}

::google::protobuf::uint8* ScopeConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.nucleo.ScopeConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 period = 1 [(.goldo.pb2_options.cpp_type) = UINT16];
  if (this->period() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->period(), target);
  }

  // repeated .goldo.nucleo.ScopeChannelConfig channels = 2 [(.goldo.pb2_options.max_count) = 8, (.goldo.pb2_options.count_type) = UINT16];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->channels_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->channels(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.nucleo.ScopeConfig)
  return target;
}

size_t ScopeConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.nucleo.ScopeConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .goldo.nucleo.ScopeChannelConfig channels = 2 [(.goldo.pb2_options.max_count) = 8, (.goldo.pb2_options.count_type) = UINT16];
  {
    unsigned int count = static_cast<unsigned int>(this->channels_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->channels(static_cast<int>(i)));
    }
  }

  // uint32 period = 1 [(.goldo.pb2_options.cpp_type) = UINT16];
  if (this->period() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->period());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScopeConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.nucleo.ScopeConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ScopeConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScopeConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.nucleo.ScopeConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.nucleo.ScopeConfig)
    MergeFrom(*source);
  }
}

void ScopeConfig::MergeFrom(const ScopeConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.nucleo.ScopeConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  channels_.MergeFrom(from.channels_);
  if (from.period() != 0) {
    set_period(from.period());
  }
}

void ScopeConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.nucleo.ScopeConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScopeConfig::CopyFrom(const ScopeConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.nucleo.ScopeConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScopeConfig::IsInitialized() const {
  return true;
}

void ScopeConfig::Swap(ScopeConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScopeConfig::InternalSwap(ScopeConfig* other) {
  using std::swap;
  CastToBase(&channels_)->InternalSwap(CastToBase(&other->channels_));
  swap(period_, other->period_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ScopeConfig::GetMetadata() const {
  protobuf_goldo_2fnucleo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ScopeData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScopeData::kTimestampFieldNumber;
const int ScopeData::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScopeData::ScopeData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fnucleo_2eproto::scc_info_ScopeData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.nucleo.ScopeData)
}
ScopeData::ScopeData(const ScopeData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:goldo.nucleo.ScopeData)
}

void ScopeData::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_ = 0u;
}

ScopeData::~ScopeData() {
  // @@protoc_insertion_point(destructor:goldo.nucleo.ScopeData)
  SharedDtor();
}

void ScopeData::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ScopeData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ScopeData::descriptor() {
  ::protobuf_goldo_2fnucleo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScopeData& ScopeData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fnucleo_2eproto::scc_info_ScopeData.base);
  return *internal_default_instance();
}


void ScopeData::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.nucleo.ScopeData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_ = 0u;
  _internal_metadata_.Clear();
}

bool ScopeData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.nucleo.ScopeData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 timestamp = 1 [(.goldo.pb2_options.cpp_type) = UINT16];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.nucleo.ScopeData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.nucleo.ScopeData)
  return false;
#undef DO_
}

void ScopeData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.nucleo.ScopeData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 timestamp = 1 [(.goldo.pb2_options.cpp_type) = UINT16];
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->timestamp(), output);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.nucleo.ScopeData)
}

::google::protobuf::uint8* ScopeData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.nucleo.ScopeData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 timestamp = 1 [(.goldo.pb2_options.cpp_type) = UINT16];
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->timestamp(), target);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.nucleo.ScopeData)
  return target;
}

size_t ScopeData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.nucleo.ScopeData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // uint32 timestamp = 1 [(.goldo.pb2_options.cpp_type) = UINT16];
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScopeData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.nucleo.ScopeData)
  GOOGLE_DCHECK_NE(&from, this);
  const ScopeData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScopeData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.nucleo.ScopeData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.nucleo.ScopeData)
    MergeFrom(*source);
  }
}

void ScopeData::MergeFrom(const ScopeData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.nucleo.ScopeData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void ScopeData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.nucleo.ScopeData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScopeData::CopyFrom(const ScopeData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.nucleo.ScopeData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScopeData::IsInitialized() const {
  return true;
}

void ScopeData::Swap(ScopeData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScopeData::InternalSwap(ScopeData* other) {
  using std::swap;
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(timestamp_, other->timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ScopeData::GetMetadata() const {
  protobuf_goldo_2fnucleo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ScopeChannelValues::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScopeChannelValues::kFloatValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScopeChannelValues::ScopeChannelValues()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fnucleo_2eproto::scc_info_ScopeChannelValues.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.nucleo.ScopeChannelValues)
}
ScopeChannelValues::ScopeChannelValues(const ScopeChannelValues& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      float_values_(from.float_values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:goldo.nucleo.ScopeChannelValues)
}

void ScopeChannelValues::SharedCtor() {
}

ScopeChannelValues::~ScopeChannelValues() {
  // @@protoc_insertion_point(destructor:goldo.nucleo.ScopeChannelValues)
  SharedDtor();
}

void ScopeChannelValues::SharedDtor() {
}

void ScopeChannelValues::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ScopeChannelValues::descriptor() {
  ::protobuf_goldo_2fnucleo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScopeChannelValues& ScopeChannelValues::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fnucleo_2eproto::scc_info_ScopeChannelValues.base);
  return *internal_default_instance();
}


void ScopeChannelValues::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.nucleo.ScopeChannelValues)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  float_values_.Clear();
  _internal_metadata_.Clear();
}

bool ScopeChannelValues::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.nucleo.ScopeChannelValues)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float float_values = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_float_values())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 10u, input, this->mutable_float_values())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.nucleo.ScopeChannelValues)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.nucleo.ScopeChannelValues)
  return false;
#undef DO_
}

void ScopeChannelValues::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.nucleo.ScopeChannelValues)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float float_values = 1;
  if (this->float_values_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _float_values_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->float_values().data(), this->float_values_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.nucleo.ScopeChannelValues)
}

::google::protobuf::uint8* ScopeChannelValues::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.nucleo.ScopeChannelValues)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float float_values = 1;
  if (this->float_values_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _float_values_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->float_values_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.nucleo.ScopeChannelValues)
  return target;
}

size_t ScopeChannelValues::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.nucleo.ScopeChannelValues)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated float float_values = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->float_values_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _float_values_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScopeChannelValues::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.nucleo.ScopeChannelValues)
  GOOGLE_DCHECK_NE(&from, this);
  const ScopeChannelValues* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScopeChannelValues>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.nucleo.ScopeChannelValues)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.nucleo.ScopeChannelValues)
    MergeFrom(*source);
  }
}

void ScopeChannelValues::MergeFrom(const ScopeChannelValues& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.nucleo.ScopeChannelValues)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  float_values_.MergeFrom(from.float_values_);
}

void ScopeChannelValues::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.nucleo.ScopeChannelValues)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScopeChannelValues::CopyFrom(const ScopeChannelValues& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.nucleo.ScopeChannelValues)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScopeChannelValues::IsInitialized() const {
  return true;
}

void ScopeChannelValues::Swap(ScopeChannelValues* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScopeChannelValues::InternalSwap(ScopeChannelValues* other) {
  using std::swap;
  float_values_.InternalSwap(&other->float_values_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ScopeChannelValues::GetMetadata() const {
  protobuf_goldo_2fnucleo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ScopeValues::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScopeValues::kTimestampsFieldNumber;
const int ScopeValues::kChannelsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScopeValues::ScopeValues()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fnucleo_2eproto::scc_info_ScopeValues.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.nucleo.ScopeValues)
}
ScopeValues::ScopeValues(const ScopeValues& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      timestamps_(from.timestamps_),
      channels_(from.channels_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:goldo.nucleo.ScopeValues)
}

void ScopeValues::SharedCtor() {
}

ScopeValues::~ScopeValues() {
  // @@protoc_insertion_point(destructor:goldo.nucleo.ScopeValues)
  SharedDtor();
}

void ScopeValues::SharedDtor() {
}

void ScopeValues::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ScopeValues::descriptor() {
  ::protobuf_goldo_2fnucleo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScopeValues& ScopeValues::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fnucleo_2eproto::scc_info_ScopeValues.base);
  return *internal_default_instance();
}


void ScopeValues::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.nucleo.ScopeValues)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  timestamps_.Clear();
  channels_.Clear();
  _internal_metadata_.Clear();
}

bool ScopeValues::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.nucleo.ScopeValues)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float timestamps = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_timestamps())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 10u, input, this->mutable_timestamps())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .goldo.nucleo.ScopeChannelValues channels = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_channels()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.nucleo.ScopeValues)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.nucleo.ScopeValues)
  return false;
#undef DO_
}

void ScopeValues::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.nucleo.ScopeValues)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float timestamps = 1;
  if (this->timestamps_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _timestamps_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->timestamps().data(), this->timestamps_size(), output);
  }

  // repeated .goldo.nucleo.ScopeChannelValues channels = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->channels_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->channels(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.nucleo.ScopeValues)
}

::google::protobuf::uint8* ScopeValues::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.nucleo.ScopeValues)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float timestamps = 1;
  if (this->timestamps_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _timestamps_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->timestamps_, target);
  }

  // repeated .goldo.nucleo.ScopeChannelValues channels = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->channels_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->channels(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.nucleo.ScopeValues)
  return target;
}

size_t ScopeValues::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.nucleo.ScopeValues)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated float timestamps = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->timestamps_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _timestamps_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .goldo.nucleo.ScopeChannelValues channels = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->channels_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->channels(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScopeValues::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.nucleo.ScopeValues)
  GOOGLE_DCHECK_NE(&from, this);
  const ScopeValues* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScopeValues>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.nucleo.ScopeValues)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.nucleo.ScopeValues)
    MergeFrom(*source);
  }
}

void ScopeValues::MergeFrom(const ScopeValues& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.nucleo.ScopeValues)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  timestamps_.MergeFrom(from.timestamps_);
  channels_.MergeFrom(from.channels_);
}

void ScopeValues::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.nucleo.ScopeValues)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScopeValues::CopyFrom(const ScopeValues& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.nucleo.ScopeValues)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScopeValues::IsInitialized() const {
  return true;
}

void ScopeValues::Swap(ScopeValues* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScopeValues::InternalSwap(ScopeValues* other) {
  using std::swap;
  timestamps_.InternalSwap(&other->timestamps_);
  CastToBase(&channels_)->InternalSwap(CastToBase(&other->channels_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ScopeValues::GetMetadata() const {
  protobuf_goldo_2fnucleo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace nucleo
}  // namespace goldo
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::nucleo::SensorConfig* Arena::CreateMaybeMessage< ::goldo::nucleo::SensorConfig >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::nucleo::SensorConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::nucleo::NucleoConfig* Arena::CreateMaybeMessage< ::goldo::nucleo::NucleoConfig >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::nucleo::NucleoConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::nucleo::NucleoTasksState* Arena::CreateMaybeMessage< ::goldo::nucleo::NucleoTasksState >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::nucleo::NucleoTasksState >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::nucleo::NucleoTasksStatistics* Arena::CreateMaybeMessage< ::goldo::nucleo::NucleoTasksStatistics >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::nucleo::NucleoTasksStatistics >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::nucleo::FreeRTOSTaskStats* Arena::CreateMaybeMessage< ::goldo::nucleo::FreeRTOSTaskStats >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::nucleo::FreeRTOSTaskStats >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::nucleo::FreeRTOSTasksStats* Arena::CreateMaybeMessage< ::goldo::nucleo::FreeRTOSTasksStats >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::nucleo::FreeRTOSTasksStats >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::nucleo::NucleoState* Arena::CreateMaybeMessage< ::goldo::nucleo::NucleoState >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::nucleo::NucleoState >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::nucleo::ScopeChannelConfig* Arena::CreateMaybeMessage< ::goldo::nucleo::ScopeChannelConfig >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::nucleo::ScopeChannelConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::nucleo::ScopeConfig* Arena::CreateMaybeMessage< ::goldo::nucleo::ScopeConfig >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::nucleo::ScopeConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::nucleo::ScopeData* Arena::CreateMaybeMessage< ::goldo::nucleo::ScopeData >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::nucleo::ScopeData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::nucleo::ScopeChannelValues* Arena::CreateMaybeMessage< ::goldo::nucleo::ScopeChannelValues >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::nucleo::ScopeChannelValues >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::nucleo::ScopeValues* Arena::CreateMaybeMessage< ::goldo::nucleo::ScopeValues >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::nucleo::ScopeValues >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
