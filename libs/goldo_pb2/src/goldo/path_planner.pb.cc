// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: goldo/path_planner.proto

#include "goldo/path_planner.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_goldo_2fcommon_2fgeometry_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_goldo_2fcommon_2fgeometry_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Point;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_goldo_2fcommon_2fgeometry_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_StaticPose;
}  // namespace protobuf_goldo_2fcommon_2fgeometry_2eproto
namespace protobuf_goldo_2fpath_5fplanner_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_goldo_2fpath_5fplanner_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PathPlannerPath;
}  // namespace protobuf_goldo_2fpath_5fplanner_2eproto
namespace protobuf_google_2fprotobuf_2fany_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fany_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Any;
}  // namespace protobuf_google_2fprotobuf_2fany_2eproto
namespace goldo {
namespace path_planner {
class PathPlannerPathDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PathPlannerPath>
      _instance;
} _PathPlannerPath_default_instance_;
class PathPlannerRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PathPlannerRequest>
      _instance;
} _PathPlannerRequest_default_instance_;
class PathPlannerResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PathPlannerResponse>
      _instance;
} _PathPlannerResponse_default_instance_;
}  // namespace path_planner
}  // namespace goldo
namespace protobuf_goldo_2fpath_5fplanner_2eproto {
static void InitDefaultsPathPlannerPath() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::path_planner::_PathPlannerPath_default_instance_;
    new (ptr) ::goldo::path_planner::PathPlannerPath();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::path_planner::PathPlannerPath::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PathPlannerPath =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPathPlannerPath}, {
      &protobuf_goldo_2fcommon_2fgeometry_2eproto::scc_info_Point.base,}};

static void InitDefaultsPathPlannerRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::path_planner::_PathPlannerRequest_default_instance_;
    new (ptr) ::goldo::path_planner::PathPlannerRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::path_planner::PathPlannerRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PathPlannerRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPathPlannerRequest}, {
      &protobuf_goldo_2fcommon_2fgeometry_2eproto::scc_info_StaticPose.base,}};

static void InitDefaultsPathPlannerResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::path_planner::_PathPlannerResponse_default_instance_;
    new (ptr) ::goldo::path_planner::PathPlannerResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::path_planner::PathPlannerResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_PathPlannerResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsPathPlannerResponse}, {
      &protobuf_goldo_2fpath_5fplanner_2eproto::scc_info_PathPlannerPath.base,
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_PathPlannerPath.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PathPlannerRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PathPlannerResponse.base);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::path_planner::PathPlannerPath, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::path_planner::PathPlannerPath, points_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::path_planner::PathPlannerPath, cost_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::path_planner::PathPlannerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::path_planner::PathPlannerRequest, start_pose_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::path_planner::PathPlannerRequest, target_poses_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::path_planner::PathPlannerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::path_planner::PathPlannerResponse, paths_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::path_planner::PathPlannerResponse, debug_info_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::goldo::path_planner::PathPlannerPath)},
  { 7, -1, sizeof(::goldo::path_planner::PathPlannerRequest)},
  { 14, -1, sizeof(::goldo::path_planner::PathPlannerResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::path_planner::_PathPlannerPath_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::path_planner::_PathPlannerRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::path_planner::_PathPlannerResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "goldo/path_planner.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\030goldo/path_planner.proto\022\022goldo.path_p"
      "lanner\032\033goldo/common/geometry.proto\032\031goo"
      "gle/protobuf/any.proto\"M\n\017PathPlannerPat"
      "h\022,\n\006points\030\001 \003(\0132\034.goldo.common.geometr"
      "y.Point\022\014\n\004cost\030\002 \001(\002\"\204\001\n\022PathPlannerReq"
      "uest\0225\n\nstart_pose\030\001 \001(\0132!.goldo.common."
      "geometry.StaticPose\0227\n\014target_poses\030\002 \003("
      "\0132!.goldo.common.geometry.StaticPose\"s\n\023"
      "PathPlannerResponse\0222\n\005paths\030\001 \003(\0132#.gol"
      "do.path_planner.PathPlannerPath\022(\n\ndebug"
      "_info\030\002 \001(\0132\024.google.protobuf.Anyb\006proto"
      "3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 441);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "goldo/path_planner.proto", &protobuf_RegisterTypes);
  ::protobuf_goldo_2fcommon_2fgeometry_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fany_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_goldo_2fpath_5fplanner_2eproto
namespace goldo {
namespace path_planner {

// ===================================================================

void PathPlannerPath::InitAsDefaultInstance() {
}
void PathPlannerPath::clear_points() {
  points_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PathPlannerPath::kPointsFieldNumber;
const int PathPlannerPath::kCostFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PathPlannerPath::PathPlannerPath()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fpath_5fplanner_2eproto::scc_info_PathPlannerPath.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.path_planner.PathPlannerPath)
}
PathPlannerPath::PathPlannerPath(const PathPlannerPath& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      points_(from.points_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cost_ = from.cost_;
  // @@protoc_insertion_point(copy_constructor:goldo.path_planner.PathPlannerPath)
}

void PathPlannerPath::SharedCtor() {
  cost_ = 0;
}

PathPlannerPath::~PathPlannerPath() {
  // @@protoc_insertion_point(destructor:goldo.path_planner.PathPlannerPath)
  SharedDtor();
}

void PathPlannerPath::SharedDtor() {
}

void PathPlannerPath::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PathPlannerPath::descriptor() {
  ::protobuf_goldo_2fpath_5fplanner_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fpath_5fplanner_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PathPlannerPath& PathPlannerPath::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fpath_5fplanner_2eproto::scc_info_PathPlannerPath.base);
  return *internal_default_instance();
}


void PathPlannerPath::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.path_planner.PathPlannerPath)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  points_.Clear();
  cost_ = 0;
  _internal_metadata_.Clear();
}

bool PathPlannerPath::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.path_planner.PathPlannerPath)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .goldo.common.geometry.Point points = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_points()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float cost = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &cost_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.path_planner.PathPlannerPath)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.path_planner.PathPlannerPath)
  return false;
#undef DO_
}

void PathPlannerPath::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.path_planner.PathPlannerPath)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .goldo.common.geometry.Point points = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->points_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->points(static_cast<int>(i)),
      output);
  }

  // float cost = 2;
  if (this->cost() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->cost(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.path_planner.PathPlannerPath)
}

::google::protobuf::uint8* PathPlannerPath::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.path_planner.PathPlannerPath)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .goldo.common.geometry.Point points = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->points_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->points(static_cast<int>(i)), deterministic, target);
  }

  // float cost = 2;
  if (this->cost() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->cost(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.path_planner.PathPlannerPath)
  return target;
}

size_t PathPlannerPath::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.path_planner.PathPlannerPath)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .goldo.common.geometry.Point points = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->points_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->points(static_cast<int>(i)));
    }
  }

  // float cost = 2;
  if (this->cost() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PathPlannerPath::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.path_planner.PathPlannerPath)
  GOOGLE_DCHECK_NE(&from, this);
  const PathPlannerPath* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PathPlannerPath>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.path_planner.PathPlannerPath)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.path_planner.PathPlannerPath)
    MergeFrom(*source);
  }
}

void PathPlannerPath::MergeFrom(const PathPlannerPath& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.path_planner.PathPlannerPath)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  points_.MergeFrom(from.points_);
  if (from.cost() != 0) {
    set_cost(from.cost());
  }
}

void PathPlannerPath::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.path_planner.PathPlannerPath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PathPlannerPath::CopyFrom(const PathPlannerPath& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.path_planner.PathPlannerPath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PathPlannerPath::IsInitialized() const {
  return true;
}

void PathPlannerPath::Swap(PathPlannerPath* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PathPlannerPath::InternalSwap(PathPlannerPath* other) {
  using std::swap;
  CastToBase(&points_)->InternalSwap(CastToBase(&other->points_));
  swap(cost_, other->cost_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PathPlannerPath::GetMetadata() const {
  protobuf_goldo_2fpath_5fplanner_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fpath_5fplanner_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PathPlannerRequest::InitAsDefaultInstance() {
  ::goldo::path_planner::_PathPlannerRequest_default_instance_._instance.get_mutable()->start_pose_ = const_cast< ::goldo::common::geometry::StaticPose*>(
      ::goldo::common::geometry::StaticPose::internal_default_instance());
}
void PathPlannerRequest::clear_start_pose() {
  if (GetArenaNoVirtual() == NULL && start_pose_ != NULL) {
    delete start_pose_;
  }
  start_pose_ = NULL;
}
void PathPlannerRequest::clear_target_poses() {
  target_poses_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PathPlannerRequest::kStartPoseFieldNumber;
const int PathPlannerRequest::kTargetPosesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PathPlannerRequest::PathPlannerRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fpath_5fplanner_2eproto::scc_info_PathPlannerRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.path_planner.PathPlannerRequest)
}
PathPlannerRequest::PathPlannerRequest(const PathPlannerRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      target_poses_(from.target_poses_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_start_pose()) {
    start_pose_ = new ::goldo::common::geometry::StaticPose(*from.start_pose_);
  } else {
    start_pose_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:goldo.path_planner.PathPlannerRequest)
}

void PathPlannerRequest::SharedCtor() {
  start_pose_ = NULL;
}

PathPlannerRequest::~PathPlannerRequest() {
  // @@protoc_insertion_point(destructor:goldo.path_planner.PathPlannerRequest)
  SharedDtor();
}

void PathPlannerRequest::SharedDtor() {
  if (this != internal_default_instance()) delete start_pose_;
}

void PathPlannerRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PathPlannerRequest::descriptor() {
  ::protobuf_goldo_2fpath_5fplanner_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fpath_5fplanner_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PathPlannerRequest& PathPlannerRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fpath_5fplanner_2eproto::scc_info_PathPlannerRequest.base);
  return *internal_default_instance();
}


void PathPlannerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.path_planner.PathPlannerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_poses_.Clear();
  if (GetArenaNoVirtual() == NULL && start_pose_ != NULL) {
    delete start_pose_;
  }
  start_pose_ = NULL;
  _internal_metadata_.Clear();
}

bool PathPlannerRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.path_planner.PathPlannerRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .goldo.common.geometry.StaticPose start_pose = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_start_pose()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .goldo.common.geometry.StaticPose target_poses = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_target_poses()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.path_planner.PathPlannerRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.path_planner.PathPlannerRequest)
  return false;
#undef DO_
}

void PathPlannerRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.path_planner.PathPlannerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .goldo.common.geometry.StaticPose start_pose = 1;
  if (this->has_start_pose()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_start_pose(), output);
  }

  // repeated .goldo.common.geometry.StaticPose target_poses = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->target_poses_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->target_poses(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.path_planner.PathPlannerRequest)
}

::google::protobuf::uint8* PathPlannerRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.path_planner.PathPlannerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .goldo.common.geometry.StaticPose start_pose = 1;
  if (this->has_start_pose()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_start_pose(), deterministic, target);
  }

  // repeated .goldo.common.geometry.StaticPose target_poses = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->target_poses_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->target_poses(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.path_planner.PathPlannerRequest)
  return target;
}

size_t PathPlannerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.path_planner.PathPlannerRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .goldo.common.geometry.StaticPose target_poses = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->target_poses_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->target_poses(static_cast<int>(i)));
    }
  }

  // .goldo.common.geometry.StaticPose start_pose = 1;
  if (this->has_start_pose()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *start_pose_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PathPlannerRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.path_planner.PathPlannerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PathPlannerRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PathPlannerRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.path_planner.PathPlannerRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.path_planner.PathPlannerRequest)
    MergeFrom(*source);
  }
}

void PathPlannerRequest::MergeFrom(const PathPlannerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.path_planner.PathPlannerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  target_poses_.MergeFrom(from.target_poses_);
  if (from.has_start_pose()) {
    mutable_start_pose()->::goldo::common::geometry::StaticPose::MergeFrom(from.start_pose());
  }
}

void PathPlannerRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.path_planner.PathPlannerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PathPlannerRequest::CopyFrom(const PathPlannerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.path_planner.PathPlannerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PathPlannerRequest::IsInitialized() const {
  return true;
}

void PathPlannerRequest::Swap(PathPlannerRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PathPlannerRequest::InternalSwap(PathPlannerRequest* other) {
  using std::swap;
  CastToBase(&target_poses_)->InternalSwap(CastToBase(&other->target_poses_));
  swap(start_pose_, other->start_pose_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PathPlannerRequest::GetMetadata() const {
  protobuf_goldo_2fpath_5fplanner_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fpath_5fplanner_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PathPlannerResponse::InitAsDefaultInstance() {
  ::goldo::path_planner::_PathPlannerResponse_default_instance_._instance.get_mutable()->debug_info_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
void PathPlannerResponse::clear_debug_info() {
  if (GetArenaNoVirtual() == NULL && debug_info_ != NULL) {
    delete debug_info_;
  }
  debug_info_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PathPlannerResponse::kPathsFieldNumber;
const int PathPlannerResponse::kDebugInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PathPlannerResponse::PathPlannerResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fpath_5fplanner_2eproto::scc_info_PathPlannerResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.path_planner.PathPlannerResponse)
}
PathPlannerResponse::PathPlannerResponse(const PathPlannerResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      paths_(from.paths_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_debug_info()) {
    debug_info_ = new ::google::protobuf::Any(*from.debug_info_);
  } else {
    debug_info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:goldo.path_planner.PathPlannerResponse)
}

void PathPlannerResponse::SharedCtor() {
  debug_info_ = NULL;
}

PathPlannerResponse::~PathPlannerResponse() {
  // @@protoc_insertion_point(destructor:goldo.path_planner.PathPlannerResponse)
  SharedDtor();
}

void PathPlannerResponse::SharedDtor() {
  if (this != internal_default_instance()) delete debug_info_;
}

void PathPlannerResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PathPlannerResponse::descriptor() {
  ::protobuf_goldo_2fpath_5fplanner_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fpath_5fplanner_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PathPlannerResponse& PathPlannerResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fpath_5fplanner_2eproto::scc_info_PathPlannerResponse.base);
  return *internal_default_instance();
}


void PathPlannerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.path_planner.PathPlannerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  paths_.Clear();
  if (GetArenaNoVirtual() == NULL && debug_info_ != NULL) {
    delete debug_info_;
  }
  debug_info_ = NULL;
  _internal_metadata_.Clear();
}

bool PathPlannerResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.path_planner.PathPlannerResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .goldo.path_planner.PathPlannerPath paths = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_paths()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any debug_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_debug_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.path_planner.PathPlannerResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.path_planner.PathPlannerResponse)
  return false;
#undef DO_
}

void PathPlannerResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.path_planner.PathPlannerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .goldo.path_planner.PathPlannerPath paths = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->paths_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->paths(static_cast<int>(i)),
      output);
  }

  // .google.protobuf.Any debug_info = 2;
  if (this->has_debug_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_debug_info(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.path_planner.PathPlannerResponse)
}

::google::protobuf::uint8* PathPlannerResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.path_planner.PathPlannerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .goldo.path_planner.PathPlannerPath paths = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->paths_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->paths(static_cast<int>(i)), deterministic, target);
  }

  // .google.protobuf.Any debug_info = 2;
  if (this->has_debug_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_debug_info(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.path_planner.PathPlannerResponse)
  return target;
}

size_t PathPlannerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.path_planner.PathPlannerResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .goldo.path_planner.PathPlannerPath paths = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->paths_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->paths(static_cast<int>(i)));
    }
  }

  // .google.protobuf.Any debug_info = 2;
  if (this->has_debug_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *debug_info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PathPlannerResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.path_planner.PathPlannerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PathPlannerResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PathPlannerResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.path_planner.PathPlannerResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.path_planner.PathPlannerResponse)
    MergeFrom(*source);
  }
}

void PathPlannerResponse::MergeFrom(const PathPlannerResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.path_planner.PathPlannerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  paths_.MergeFrom(from.paths_);
  if (from.has_debug_info()) {
    mutable_debug_info()->::google::protobuf::Any::MergeFrom(from.debug_info());
  }
}

void PathPlannerResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.path_planner.PathPlannerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PathPlannerResponse::CopyFrom(const PathPlannerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.path_planner.PathPlannerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PathPlannerResponse::IsInitialized() const {
  return true;
}

void PathPlannerResponse::Swap(PathPlannerResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PathPlannerResponse::InternalSwap(PathPlannerResponse* other) {
  using std::swap;
  CastToBase(&paths_)->InternalSwap(CastToBase(&other->paths_));
  swap(debug_info_, other->debug_info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PathPlannerResponse::GetMetadata() const {
  protobuf_goldo_2fpath_5fplanner_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fpath_5fplanner_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace path_planner
}  // namespace goldo
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::path_planner::PathPlannerPath* Arena::CreateMaybeMessage< ::goldo::path_planner::PathPlannerPath >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::path_planner::PathPlannerPath >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::path_planner::PathPlannerRequest* Arena::CreateMaybeMessage< ::goldo::path_planner::PathPlannerRequest >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::path_planner::PathPlannerRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::path_planner::PathPlannerResponse* Arena::CreateMaybeMessage< ::goldo::path_planner::PathPlannerResponse >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::path_planner::PathPlannerResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
