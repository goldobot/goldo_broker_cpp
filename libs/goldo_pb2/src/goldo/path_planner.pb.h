// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: goldo/path_planner.proto

#ifndef PROTOBUF_INCLUDED_goldo_2fpath_5fplanner_2eproto
#define PROTOBUF_INCLUDED_goldo_2fpath_5fplanner_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "goldo/common/geometry.pb.h"
#include <google/protobuf/any.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_goldo_2fpath_5fplanner_2eproto 

namespace protobuf_goldo_2fpath_5fplanner_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_goldo_2fpath_5fplanner_2eproto
namespace goldo {
namespace path_planner {
class PathPlannerPath;
class PathPlannerPathDefaultTypeInternal;
extern PathPlannerPathDefaultTypeInternal _PathPlannerPath_default_instance_;
class PathPlannerRequest;
class PathPlannerRequestDefaultTypeInternal;
extern PathPlannerRequestDefaultTypeInternal _PathPlannerRequest_default_instance_;
class PathPlannerResponse;
class PathPlannerResponseDefaultTypeInternal;
extern PathPlannerResponseDefaultTypeInternal _PathPlannerResponse_default_instance_;
}  // namespace path_planner
}  // namespace goldo
namespace google {
namespace protobuf {
template<> ::goldo::path_planner::PathPlannerPath* Arena::CreateMaybeMessage<::goldo::path_planner::PathPlannerPath>(Arena*);
template<> ::goldo::path_planner::PathPlannerRequest* Arena::CreateMaybeMessage<::goldo::path_planner::PathPlannerRequest>(Arena*);
template<> ::goldo::path_planner::PathPlannerResponse* Arena::CreateMaybeMessage<::goldo::path_planner::PathPlannerResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace goldo {
namespace path_planner {

// ===================================================================

class PathPlannerPath : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:goldo.path_planner.PathPlannerPath) */ {
 public:
  PathPlannerPath();
  virtual ~PathPlannerPath();

  PathPlannerPath(const PathPlannerPath& from);

  inline PathPlannerPath& operator=(const PathPlannerPath& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PathPlannerPath(PathPlannerPath&& from) noexcept
    : PathPlannerPath() {
    *this = ::std::move(from);
  }

  inline PathPlannerPath& operator=(PathPlannerPath&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PathPlannerPath& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PathPlannerPath* internal_default_instance() {
    return reinterpret_cast<const PathPlannerPath*>(
               &_PathPlannerPath_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(PathPlannerPath* other);
  friend void swap(PathPlannerPath& a, PathPlannerPath& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PathPlannerPath* New() const final {
    return CreateMaybeMessage<PathPlannerPath>(NULL);
  }

  PathPlannerPath* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PathPlannerPath>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PathPlannerPath& from);
  void MergeFrom(const PathPlannerPath& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PathPlannerPath* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .goldo.common.geometry.Point points = 1;
  int points_size() const;
  void clear_points();
  static const int kPointsFieldNumber = 1;
  ::goldo::common::geometry::Point* mutable_points(int index);
  ::google::protobuf::RepeatedPtrField< ::goldo::common::geometry::Point >*
      mutable_points();
  const ::goldo::common::geometry::Point& points(int index) const;
  ::goldo::common::geometry::Point* add_points();
  const ::google::protobuf::RepeatedPtrField< ::goldo::common::geometry::Point >&
      points() const;

  // float cost = 2;
  void clear_cost();
  static const int kCostFieldNumber = 2;
  float cost() const;
  void set_cost(float value);

  // @@protoc_insertion_point(class_scope:goldo.path_planner.PathPlannerPath)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::goldo::common::geometry::Point > points_;
  float cost_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_goldo_2fpath_5fplanner_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PathPlannerRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:goldo.path_planner.PathPlannerRequest) */ {
 public:
  PathPlannerRequest();
  virtual ~PathPlannerRequest();

  PathPlannerRequest(const PathPlannerRequest& from);

  inline PathPlannerRequest& operator=(const PathPlannerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PathPlannerRequest(PathPlannerRequest&& from) noexcept
    : PathPlannerRequest() {
    *this = ::std::move(from);
  }

  inline PathPlannerRequest& operator=(PathPlannerRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PathPlannerRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PathPlannerRequest* internal_default_instance() {
    return reinterpret_cast<const PathPlannerRequest*>(
               &_PathPlannerRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(PathPlannerRequest* other);
  friend void swap(PathPlannerRequest& a, PathPlannerRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PathPlannerRequest* New() const final {
    return CreateMaybeMessage<PathPlannerRequest>(NULL);
  }

  PathPlannerRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PathPlannerRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PathPlannerRequest& from);
  void MergeFrom(const PathPlannerRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PathPlannerRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .goldo.common.geometry.StaticPose target_poses = 2;
  int target_poses_size() const;
  void clear_target_poses();
  static const int kTargetPosesFieldNumber = 2;
  ::goldo::common::geometry::StaticPose* mutable_target_poses(int index);
  ::google::protobuf::RepeatedPtrField< ::goldo::common::geometry::StaticPose >*
      mutable_target_poses();
  const ::goldo::common::geometry::StaticPose& target_poses(int index) const;
  ::goldo::common::geometry::StaticPose* add_target_poses();
  const ::google::protobuf::RepeatedPtrField< ::goldo::common::geometry::StaticPose >&
      target_poses() const;

  // .goldo.common.geometry.StaticPose start_pose = 1;
  bool has_start_pose() const;
  void clear_start_pose();
  static const int kStartPoseFieldNumber = 1;
  private:
  const ::goldo::common::geometry::StaticPose& _internal_start_pose() const;
  public:
  const ::goldo::common::geometry::StaticPose& start_pose() const;
  ::goldo::common::geometry::StaticPose* release_start_pose();
  ::goldo::common::geometry::StaticPose* mutable_start_pose();
  void set_allocated_start_pose(::goldo::common::geometry::StaticPose* start_pose);

  // @@protoc_insertion_point(class_scope:goldo.path_planner.PathPlannerRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::goldo::common::geometry::StaticPose > target_poses_;
  ::goldo::common::geometry::StaticPose* start_pose_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_goldo_2fpath_5fplanner_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PathPlannerResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:goldo.path_planner.PathPlannerResponse) */ {
 public:
  PathPlannerResponse();
  virtual ~PathPlannerResponse();

  PathPlannerResponse(const PathPlannerResponse& from);

  inline PathPlannerResponse& operator=(const PathPlannerResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PathPlannerResponse(PathPlannerResponse&& from) noexcept
    : PathPlannerResponse() {
    *this = ::std::move(from);
  }

  inline PathPlannerResponse& operator=(PathPlannerResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PathPlannerResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PathPlannerResponse* internal_default_instance() {
    return reinterpret_cast<const PathPlannerResponse*>(
               &_PathPlannerResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(PathPlannerResponse* other);
  friend void swap(PathPlannerResponse& a, PathPlannerResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PathPlannerResponse* New() const final {
    return CreateMaybeMessage<PathPlannerResponse>(NULL);
  }

  PathPlannerResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PathPlannerResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PathPlannerResponse& from);
  void MergeFrom(const PathPlannerResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PathPlannerResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .goldo.path_planner.PathPlannerPath paths = 1;
  int paths_size() const;
  void clear_paths();
  static const int kPathsFieldNumber = 1;
  ::goldo::path_planner::PathPlannerPath* mutable_paths(int index);
  ::google::protobuf::RepeatedPtrField< ::goldo::path_planner::PathPlannerPath >*
      mutable_paths();
  const ::goldo::path_planner::PathPlannerPath& paths(int index) const;
  ::goldo::path_planner::PathPlannerPath* add_paths();
  const ::google::protobuf::RepeatedPtrField< ::goldo::path_planner::PathPlannerPath >&
      paths() const;

  // .google.protobuf.Any debug_info = 2;
  bool has_debug_info() const;
  void clear_debug_info();
  static const int kDebugInfoFieldNumber = 2;
  private:
  const ::google::protobuf::Any& _internal_debug_info() const;
  public:
  const ::google::protobuf::Any& debug_info() const;
  ::google::protobuf::Any* release_debug_info();
  ::google::protobuf::Any* mutable_debug_info();
  void set_allocated_debug_info(::google::protobuf::Any* debug_info);

  // @@protoc_insertion_point(class_scope:goldo.path_planner.PathPlannerResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::goldo::path_planner::PathPlannerPath > paths_;
  ::google::protobuf::Any* debug_info_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_goldo_2fpath_5fplanner_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PathPlannerPath

// repeated .goldo.common.geometry.Point points = 1;
inline int PathPlannerPath::points_size() const {
  return points_.size();
}
inline ::goldo::common::geometry::Point* PathPlannerPath::mutable_points(int index) {
  // @@protoc_insertion_point(field_mutable:goldo.path_planner.PathPlannerPath.points)
  return points_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::goldo::common::geometry::Point >*
PathPlannerPath::mutable_points() {
  // @@protoc_insertion_point(field_mutable_list:goldo.path_planner.PathPlannerPath.points)
  return &points_;
}
inline const ::goldo::common::geometry::Point& PathPlannerPath::points(int index) const {
  // @@protoc_insertion_point(field_get:goldo.path_planner.PathPlannerPath.points)
  return points_.Get(index);
}
inline ::goldo::common::geometry::Point* PathPlannerPath::add_points() {
  // @@protoc_insertion_point(field_add:goldo.path_planner.PathPlannerPath.points)
  return points_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::goldo::common::geometry::Point >&
PathPlannerPath::points() const {
  // @@protoc_insertion_point(field_list:goldo.path_planner.PathPlannerPath.points)
  return points_;
}

// float cost = 2;
inline void PathPlannerPath::clear_cost() {
  cost_ = 0;
}
inline float PathPlannerPath::cost() const {
  // @@protoc_insertion_point(field_get:goldo.path_planner.PathPlannerPath.cost)
  return cost_;
}
inline void PathPlannerPath::set_cost(float value) {
  
  cost_ = value;
  // @@protoc_insertion_point(field_set:goldo.path_planner.PathPlannerPath.cost)
}

// -------------------------------------------------------------------

// PathPlannerRequest

// .goldo.common.geometry.StaticPose start_pose = 1;
inline bool PathPlannerRequest::has_start_pose() const {
  return this != internal_default_instance() && start_pose_ != NULL;
}
inline const ::goldo::common::geometry::StaticPose& PathPlannerRequest::_internal_start_pose() const {
  return *start_pose_;
}
inline const ::goldo::common::geometry::StaticPose& PathPlannerRequest::start_pose() const {
  const ::goldo::common::geometry::StaticPose* p = start_pose_;
  // @@protoc_insertion_point(field_get:goldo.path_planner.PathPlannerRequest.start_pose)
  return p != NULL ? *p : *reinterpret_cast<const ::goldo::common::geometry::StaticPose*>(
      &::goldo::common::geometry::_StaticPose_default_instance_);
}
inline ::goldo::common::geometry::StaticPose* PathPlannerRequest::release_start_pose() {
  // @@protoc_insertion_point(field_release:goldo.path_planner.PathPlannerRequest.start_pose)
  
  ::goldo::common::geometry::StaticPose* temp = start_pose_;
  start_pose_ = NULL;
  return temp;
}
inline ::goldo::common::geometry::StaticPose* PathPlannerRequest::mutable_start_pose() {
  
  if (start_pose_ == NULL) {
    auto* p = CreateMaybeMessage<::goldo::common::geometry::StaticPose>(GetArenaNoVirtual());
    start_pose_ = p;
  }
  // @@protoc_insertion_point(field_mutable:goldo.path_planner.PathPlannerRequest.start_pose)
  return start_pose_;
}
inline void PathPlannerRequest::set_allocated_start_pose(::goldo::common::geometry::StaticPose* start_pose) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(start_pose_);
  }
  if (start_pose) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      start_pose = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, start_pose, submessage_arena);
    }
    
  } else {
    
  }
  start_pose_ = start_pose;
  // @@protoc_insertion_point(field_set_allocated:goldo.path_planner.PathPlannerRequest.start_pose)
}

// repeated .goldo.common.geometry.StaticPose target_poses = 2;
inline int PathPlannerRequest::target_poses_size() const {
  return target_poses_.size();
}
inline ::goldo::common::geometry::StaticPose* PathPlannerRequest::mutable_target_poses(int index) {
  // @@protoc_insertion_point(field_mutable:goldo.path_planner.PathPlannerRequest.target_poses)
  return target_poses_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::goldo::common::geometry::StaticPose >*
PathPlannerRequest::mutable_target_poses() {
  // @@protoc_insertion_point(field_mutable_list:goldo.path_planner.PathPlannerRequest.target_poses)
  return &target_poses_;
}
inline const ::goldo::common::geometry::StaticPose& PathPlannerRequest::target_poses(int index) const {
  // @@protoc_insertion_point(field_get:goldo.path_planner.PathPlannerRequest.target_poses)
  return target_poses_.Get(index);
}
inline ::goldo::common::geometry::StaticPose* PathPlannerRequest::add_target_poses() {
  // @@protoc_insertion_point(field_add:goldo.path_planner.PathPlannerRequest.target_poses)
  return target_poses_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::goldo::common::geometry::StaticPose >&
PathPlannerRequest::target_poses() const {
  // @@protoc_insertion_point(field_list:goldo.path_planner.PathPlannerRequest.target_poses)
  return target_poses_;
}

// -------------------------------------------------------------------

// PathPlannerResponse

// repeated .goldo.path_planner.PathPlannerPath paths = 1;
inline int PathPlannerResponse::paths_size() const {
  return paths_.size();
}
inline void PathPlannerResponse::clear_paths() {
  paths_.Clear();
}
inline ::goldo::path_planner::PathPlannerPath* PathPlannerResponse::mutable_paths(int index) {
  // @@protoc_insertion_point(field_mutable:goldo.path_planner.PathPlannerResponse.paths)
  return paths_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::goldo::path_planner::PathPlannerPath >*
PathPlannerResponse::mutable_paths() {
  // @@protoc_insertion_point(field_mutable_list:goldo.path_planner.PathPlannerResponse.paths)
  return &paths_;
}
inline const ::goldo::path_planner::PathPlannerPath& PathPlannerResponse::paths(int index) const {
  // @@protoc_insertion_point(field_get:goldo.path_planner.PathPlannerResponse.paths)
  return paths_.Get(index);
}
inline ::goldo::path_planner::PathPlannerPath* PathPlannerResponse::add_paths() {
  // @@protoc_insertion_point(field_add:goldo.path_planner.PathPlannerResponse.paths)
  return paths_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::goldo::path_planner::PathPlannerPath >&
PathPlannerResponse::paths() const {
  // @@protoc_insertion_point(field_list:goldo.path_planner.PathPlannerResponse.paths)
  return paths_;
}

// .google.protobuf.Any debug_info = 2;
inline bool PathPlannerResponse::has_debug_info() const {
  return this != internal_default_instance() && debug_info_ != NULL;
}
inline const ::google::protobuf::Any& PathPlannerResponse::_internal_debug_info() const {
  return *debug_info_;
}
inline const ::google::protobuf::Any& PathPlannerResponse::debug_info() const {
  const ::google::protobuf::Any* p = debug_info_;
  // @@protoc_insertion_point(field_get:goldo.path_planner.PathPlannerResponse.debug_info)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Any*>(
      &::google::protobuf::_Any_default_instance_);
}
inline ::google::protobuf::Any* PathPlannerResponse::release_debug_info() {
  // @@protoc_insertion_point(field_release:goldo.path_planner.PathPlannerResponse.debug_info)
  
  ::google::protobuf::Any* temp = debug_info_;
  debug_info_ = NULL;
  return temp;
}
inline ::google::protobuf::Any* PathPlannerResponse::mutable_debug_info() {
  
  if (debug_info_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Any>(GetArenaNoVirtual());
    debug_info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:goldo.path_planner.PathPlannerResponse.debug_info)
  return debug_info_;
}
inline void PathPlannerResponse::set_allocated_debug_info(::google::protobuf::Any* debug_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(debug_info_);
  }
  if (debug_info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      debug_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, debug_info, submessage_arena);
    }
    
  } else {
    
  }
  debug_info_ = debug_info;
  // @@protoc_insertion_point(field_set_allocated:goldo.path_planner.PathPlannerResponse.debug_info)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace path_planner
}  // namespace goldo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_goldo_2fpath_5fplanner_2eproto
