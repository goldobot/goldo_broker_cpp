// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: goldo/common/geometry.proto

#include "goldo/common/geometry.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_goldo_2fcommon_2fgeometry_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_goldo_2fcommon_2fgeometry_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Point;
}  // namespace protobuf_goldo_2fcommon_2fgeometry_2eproto
namespace goldo {
namespace common {
namespace geometry {
class PointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Point>
      _instance;
} _Point_default_instance_;
class PointCloudDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PointCloud>
      _instance;
} _PointCloud_default_instance_;
class StaticPoseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StaticPose>
      _instance;
} _StaticPose_default_instance_;
class PoseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Pose>
      _instance;
} _Pose_default_instance_;
class CircleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Circle>
      _instance;
} _Circle_default_instance_;
class BoxDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Box>
      _instance;
} _Box_default_instance_;
class PolygonDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Polygon>
      _instance;
} _Polygon_default_instance_;
}  // namespace geometry
}  // namespace common
}  // namespace goldo
namespace protobuf_goldo_2fcommon_2fgeometry_2eproto {
static void InitDefaultsPoint() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::common::geometry::_Point_default_instance_;
    new (ptr) ::goldo::common::geometry::Point();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::common::geometry::Point::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Point =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPoint}, {}};

static void InitDefaultsPointCloud() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::common::geometry::_PointCloud_default_instance_;
    new (ptr) ::goldo::common::geometry::PointCloud();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::common::geometry::PointCloud::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PointCloud =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPointCloud}, {}};

static void InitDefaultsStaticPose() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::common::geometry::_StaticPose_default_instance_;
    new (ptr) ::goldo::common::geometry::StaticPose();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::common::geometry::StaticPose::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_StaticPose =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStaticPose}, {
      &protobuf_goldo_2fcommon_2fgeometry_2eproto::scc_info_Point.base,}};

static void InitDefaultsPose() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::common::geometry::_Pose_default_instance_;
    new (ptr) ::goldo::common::geometry::Pose();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::common::geometry::Pose::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Pose =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPose}, {
      &protobuf_goldo_2fcommon_2fgeometry_2eproto::scc_info_Point.base,}};

static void InitDefaultsCircle() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::common::geometry::_Circle_default_instance_;
    new (ptr) ::goldo::common::geometry::Circle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::common::geometry::Circle::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Circle =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCircle}, {
      &protobuf_goldo_2fcommon_2fgeometry_2eproto::scc_info_Point.base,}};

static void InitDefaultsBox() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::common::geometry::_Box_default_instance_;
    new (ptr) ::goldo::common::geometry::Box();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::common::geometry::Box::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Box =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBox}, {
      &protobuf_goldo_2fcommon_2fgeometry_2eproto::scc_info_Point.base,}};

static void InitDefaultsPolygon() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::common::geometry::_Polygon_default_instance_;
    new (ptr) ::goldo::common::geometry::Polygon();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::common::geometry::Polygon::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Polygon =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPolygon}, {
      &protobuf_goldo_2fcommon_2fgeometry_2eproto::scc_info_Point.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Point.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PointCloud.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StaticPose.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Pose.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Circle.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Box.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Polygon.base);
}

::google::protobuf::Metadata file_level_metadata[7];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::common::geometry::Point, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::common::geometry::Point, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::common::geometry::Point, y_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::common::geometry::PointCloud, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::common::geometry::PointCloud, num_points_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::common::geometry::PointCloud, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::common::geometry::StaticPose, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::common::geometry::StaticPose, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::common::geometry::StaticPose, yaw_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::common::geometry::Pose, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::common::geometry::Pose, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::common::geometry::Pose, yaw_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::common::geometry::Pose, speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::common::geometry::Pose, yaw_rate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::common::geometry::Pose, acceleration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::common::geometry::Pose, angular_acceleration_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::common::geometry::Circle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::common::geometry::Circle, center_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::common::geometry::Circle, radius_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::common::geometry::Box, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::common::geometry::Box, pmin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::common::geometry::Box, pmax_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::common::geometry::Polygon, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::common::geometry::Polygon, vertices_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::goldo::common::geometry::Point)},
  { 7, -1, sizeof(::goldo::common::geometry::PointCloud)},
  { 14, -1, sizeof(::goldo::common::geometry::StaticPose)},
  { 21, -1, sizeof(::goldo::common::geometry::Pose)},
  { 32, -1, sizeof(::goldo::common::geometry::Circle)},
  { 39, -1, sizeof(::goldo::common::geometry::Box)},
  { 46, -1, sizeof(::goldo::common::geometry::Polygon)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::common::geometry::_Point_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::common::geometry::_PointCloud_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::common::geometry::_StaticPose_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::common::geometry::_Pose_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::common::geometry::_Circle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::common::geometry::_Box_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::common::geometry::_Polygon_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "goldo/common/geometry.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\033goldo/common/geometry.proto\022\025goldo.com"
      "mon.geometry\"\035\n\005Point\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 "
      "\001(\002\".\n\nPointCloud\022\022\n\nnum_points\030\001 \001(\r\022\014\n"
      "\004data\030\002 \001(\014\"I\n\nStaticPose\022.\n\010position\030\001 "
      "\001(\0132\034.goldo.common.geometry.Point\022\013\n\003yaw"
      "\030\002 \001(\002\"\230\001\n\004Pose\022.\n\010position\030\001 \001(\0132\034.gold"
      "o.common.geometry.Point\022\013\n\003yaw\030\002 \001(\002\022\r\n\005"
      "speed\030\003 \001(\002\022\020\n\010yaw_rate\030\004 \001(\002\022\024\n\014acceler"
      "ation\030\005 \001(\002\022\034\n\024angular_acceleration\030\006 \001("
      "\002\"F\n\006Circle\022,\n\006center\030\001 \001(\0132\034.goldo.comm"
      "on.geometry.Point\022\016\n\006radius\030\002 \001(\002\"]\n\003Box"
      "\022*\n\004pmin\030\001 \001(\0132\034.goldo.common.geometry.P"
      "oint\022*\n\004pmax\030\002 \001(\0132\034.goldo.common.geomet"
      "ry.Point\"9\n\007Polygon\022.\n\010vertices\030\001 \003(\0132\034."
      "goldo.common.geometry.Pointb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 595);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "goldo/common/geometry.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_goldo_2fcommon_2fgeometry_2eproto
namespace goldo {
namespace common {
namespace geometry {

// ===================================================================

void Point::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Point::kXFieldNumber;
const int Point::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Point::Point()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fcommon_2fgeometry_2eproto::scc_info_Point.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.common.geometry.Point)
}
Point::Point(const Point& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:goldo.common.geometry.Point)
}

void Point::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
}

Point::~Point() {
  // @@protoc_insertion_point(destructor:goldo.common.geometry.Point)
  SharedDtor();
}

void Point::SharedDtor() {
}

void Point::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Point::descriptor() {
  ::protobuf_goldo_2fcommon_2fgeometry_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fcommon_2fgeometry_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Point& Point::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fcommon_2fgeometry_2eproto::scc_info_Point.base);
  return *internal_default_instance();
}


void Point::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.common.geometry.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _internal_metadata_.Clear();
}

bool Point::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.common.geometry.Point)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.common.geometry.Point)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.common.geometry.Point)
  return false;
#undef DO_
}

void Point::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.common.geometry.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.common.geometry.Point)
}

::google::protobuf::uint8* Point::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.common.geometry.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.common.geometry.Point)
  return target;
}

size_t Point::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.common.geometry.Point)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Point::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.common.geometry.Point)
  GOOGLE_DCHECK_NE(&from, this);
  const Point* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Point>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.common.geometry.Point)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.common.geometry.Point)
    MergeFrom(*source);
  }
}

void Point::MergeFrom(const Point& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.common.geometry.Point)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
}

void Point::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.common.geometry.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Point::CopyFrom(const Point& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.common.geometry.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Point::IsInitialized() const {
  return true;
}

void Point::Swap(Point* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Point::InternalSwap(Point* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Point::GetMetadata() const {
  protobuf_goldo_2fcommon_2fgeometry_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fcommon_2fgeometry_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PointCloud::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PointCloud::kNumPointsFieldNumber;
const int PointCloud::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PointCloud::PointCloud()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fcommon_2fgeometry_2eproto::scc_info_PointCloud.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.common.geometry.PointCloud)
}
PointCloud::PointCloud(const PointCloud& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  num_points_ = from.num_points_;
  // @@protoc_insertion_point(copy_constructor:goldo.common.geometry.PointCloud)
}

void PointCloud::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  num_points_ = 0u;
}

PointCloud::~PointCloud() {
  // @@protoc_insertion_point(destructor:goldo.common.geometry.PointCloud)
  SharedDtor();
}

void PointCloud::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PointCloud::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PointCloud::descriptor() {
  ::protobuf_goldo_2fcommon_2fgeometry_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fcommon_2fgeometry_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PointCloud& PointCloud::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fcommon_2fgeometry_2eproto::scc_info_PointCloud.base);
  return *internal_default_instance();
}


void PointCloud::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.common.geometry.PointCloud)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  num_points_ = 0u;
  _internal_metadata_.Clear();
}

bool PointCloud::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.common.geometry.PointCloud)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 num_points = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_points_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.common.geometry.PointCloud)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.common.geometry.PointCloud)
  return false;
#undef DO_
}

void PointCloud::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.common.geometry.PointCloud)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 num_points = 1;
  if (this->num_points() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->num_points(), output);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.common.geometry.PointCloud)
}

::google::protobuf::uint8* PointCloud::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.common.geometry.PointCloud)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 num_points = 1;
  if (this->num_points() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->num_points(), target);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.common.geometry.PointCloud)
  return target;
}

size_t PointCloud::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.common.geometry.PointCloud)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // uint32 num_points = 1;
  if (this->num_points() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->num_points());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PointCloud::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.common.geometry.PointCloud)
  GOOGLE_DCHECK_NE(&from, this);
  const PointCloud* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PointCloud>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.common.geometry.PointCloud)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.common.geometry.PointCloud)
    MergeFrom(*source);
  }
}

void PointCloud::MergeFrom(const PointCloud& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.common.geometry.PointCloud)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.num_points() != 0) {
    set_num_points(from.num_points());
  }
}

void PointCloud::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.common.geometry.PointCloud)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PointCloud::CopyFrom(const PointCloud& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.common.geometry.PointCloud)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PointCloud::IsInitialized() const {
  return true;
}

void PointCloud::Swap(PointCloud* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PointCloud::InternalSwap(PointCloud* other) {
  using std::swap;
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(num_points_, other->num_points_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PointCloud::GetMetadata() const {
  protobuf_goldo_2fcommon_2fgeometry_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fcommon_2fgeometry_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StaticPose::InitAsDefaultInstance() {
  ::goldo::common::geometry::_StaticPose_default_instance_._instance.get_mutable()->position_ = const_cast< ::goldo::common::geometry::Point*>(
      ::goldo::common::geometry::Point::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StaticPose::kPositionFieldNumber;
const int StaticPose::kYawFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StaticPose::StaticPose()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fcommon_2fgeometry_2eproto::scc_info_StaticPose.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.common.geometry.StaticPose)
}
StaticPose::StaticPose(const StaticPose& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position()) {
    position_ = new ::goldo::common::geometry::Point(*from.position_);
  } else {
    position_ = NULL;
  }
  yaw_ = from.yaw_;
  // @@protoc_insertion_point(copy_constructor:goldo.common.geometry.StaticPose)
}

void StaticPose::SharedCtor() {
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&yaw_) -
      reinterpret_cast<char*>(&position_)) + sizeof(yaw_));
}

StaticPose::~StaticPose() {
  // @@protoc_insertion_point(destructor:goldo.common.geometry.StaticPose)
  SharedDtor();
}

void StaticPose::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
}

void StaticPose::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StaticPose::descriptor() {
  ::protobuf_goldo_2fcommon_2fgeometry_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fcommon_2fgeometry_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StaticPose& StaticPose::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fcommon_2fgeometry_2eproto::scc_info_StaticPose.base);
  return *internal_default_instance();
}


void StaticPose::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.common.geometry.StaticPose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
  yaw_ = 0;
  _internal_metadata_.Clear();
}

bool StaticPose::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.common.geometry.StaticPose)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .goldo.common.geometry.Point position = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float yaw = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &yaw_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.common.geometry.StaticPose)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.common.geometry.StaticPose)
  return false;
#undef DO_
}

void StaticPose::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.common.geometry.StaticPose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .goldo.common.geometry.Point position = 1;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_position(), output);
  }

  // float yaw = 2;
  if (this->yaw() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->yaw(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.common.geometry.StaticPose)
}

::google::protobuf::uint8* StaticPose::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.common.geometry.StaticPose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .goldo.common.geometry.Point position = 1;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_position(), deterministic, target);
  }

  // float yaw = 2;
  if (this->yaw() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->yaw(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.common.geometry.StaticPose)
  return target;
}

size_t StaticPose::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.common.geometry.StaticPose)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .goldo.common.geometry.Point position = 1;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // float yaw = 2;
  if (this->yaw() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StaticPose::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.common.geometry.StaticPose)
  GOOGLE_DCHECK_NE(&from, this);
  const StaticPose* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StaticPose>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.common.geometry.StaticPose)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.common.geometry.StaticPose)
    MergeFrom(*source);
  }
}

void StaticPose::MergeFrom(const StaticPose& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.common.geometry.StaticPose)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_position()) {
    mutable_position()->::goldo::common::geometry::Point::MergeFrom(from.position());
  }
  if (from.yaw() != 0) {
    set_yaw(from.yaw());
  }
}

void StaticPose::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.common.geometry.StaticPose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StaticPose::CopyFrom(const StaticPose& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.common.geometry.StaticPose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StaticPose::IsInitialized() const {
  return true;
}

void StaticPose::Swap(StaticPose* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StaticPose::InternalSwap(StaticPose* other) {
  using std::swap;
  swap(position_, other->position_);
  swap(yaw_, other->yaw_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StaticPose::GetMetadata() const {
  protobuf_goldo_2fcommon_2fgeometry_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fcommon_2fgeometry_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Pose::InitAsDefaultInstance() {
  ::goldo::common::geometry::_Pose_default_instance_._instance.get_mutable()->position_ = const_cast< ::goldo::common::geometry::Point*>(
      ::goldo::common::geometry::Point::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pose::kPositionFieldNumber;
const int Pose::kYawFieldNumber;
const int Pose::kSpeedFieldNumber;
const int Pose::kYawRateFieldNumber;
const int Pose::kAccelerationFieldNumber;
const int Pose::kAngularAccelerationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Pose::Pose()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fcommon_2fgeometry_2eproto::scc_info_Pose.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.common.geometry.Pose)
}
Pose::Pose(const Pose& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position()) {
    position_ = new ::goldo::common::geometry::Point(*from.position_);
  } else {
    position_ = NULL;
  }
  ::memcpy(&yaw_, &from.yaw_,
    static_cast<size_t>(reinterpret_cast<char*>(&angular_acceleration_) -
    reinterpret_cast<char*>(&yaw_)) + sizeof(angular_acceleration_));
  // @@protoc_insertion_point(copy_constructor:goldo.common.geometry.Pose)
}

void Pose::SharedCtor() {
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&angular_acceleration_) -
      reinterpret_cast<char*>(&position_)) + sizeof(angular_acceleration_));
}

Pose::~Pose() {
  // @@protoc_insertion_point(destructor:goldo.common.geometry.Pose)
  SharedDtor();
}

void Pose::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
}

void Pose::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Pose::descriptor() {
  ::protobuf_goldo_2fcommon_2fgeometry_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fcommon_2fgeometry_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Pose& Pose::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fcommon_2fgeometry_2eproto::scc_info_Pose.base);
  return *internal_default_instance();
}


void Pose::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.common.geometry.Pose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
  ::memset(&yaw_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&angular_acceleration_) -
      reinterpret_cast<char*>(&yaw_)) + sizeof(angular_acceleration_));
  _internal_metadata_.Clear();
}

bool Pose::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.common.geometry.Pose)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .goldo.common.geometry.Point position = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float yaw = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &yaw_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float speed = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float yaw_rate = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &yaw_rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float acceleration = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &acceleration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float angular_acceleration = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &angular_acceleration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.common.geometry.Pose)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.common.geometry.Pose)
  return false;
#undef DO_
}

void Pose::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.common.geometry.Pose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .goldo.common.geometry.Point position = 1;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_position(), output);
  }

  // float yaw = 2;
  if (this->yaw() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->yaw(), output);
  }

  // float speed = 3;
  if (this->speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->speed(), output);
  }

  // float yaw_rate = 4;
  if (this->yaw_rate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->yaw_rate(), output);
  }

  // float acceleration = 5;
  if (this->acceleration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->acceleration(), output);
  }

  // float angular_acceleration = 6;
  if (this->angular_acceleration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->angular_acceleration(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.common.geometry.Pose)
}

::google::protobuf::uint8* Pose::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.common.geometry.Pose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .goldo.common.geometry.Point position = 1;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_position(), deterministic, target);
  }

  // float yaw = 2;
  if (this->yaw() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->yaw(), target);
  }

  // float speed = 3;
  if (this->speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->speed(), target);
  }

  // float yaw_rate = 4;
  if (this->yaw_rate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->yaw_rate(), target);
  }

  // float acceleration = 5;
  if (this->acceleration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->acceleration(), target);
  }

  // float angular_acceleration = 6;
  if (this->angular_acceleration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->angular_acceleration(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.common.geometry.Pose)
  return target;
}

size_t Pose::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.common.geometry.Pose)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .goldo.common.geometry.Point position = 1;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // float yaw = 2;
  if (this->yaw() != 0) {
    total_size += 1 + 4;
  }

  // float speed = 3;
  if (this->speed() != 0) {
    total_size += 1 + 4;
  }

  // float yaw_rate = 4;
  if (this->yaw_rate() != 0) {
    total_size += 1 + 4;
  }

  // float acceleration = 5;
  if (this->acceleration() != 0) {
    total_size += 1 + 4;
  }

  // float angular_acceleration = 6;
  if (this->angular_acceleration() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Pose::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.common.geometry.Pose)
  GOOGLE_DCHECK_NE(&from, this);
  const Pose* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Pose>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.common.geometry.Pose)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.common.geometry.Pose)
    MergeFrom(*source);
  }
}

void Pose::MergeFrom(const Pose& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.common.geometry.Pose)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_position()) {
    mutable_position()->::goldo::common::geometry::Point::MergeFrom(from.position());
  }
  if (from.yaw() != 0) {
    set_yaw(from.yaw());
  }
  if (from.speed() != 0) {
    set_speed(from.speed());
  }
  if (from.yaw_rate() != 0) {
    set_yaw_rate(from.yaw_rate());
  }
  if (from.acceleration() != 0) {
    set_acceleration(from.acceleration());
  }
  if (from.angular_acceleration() != 0) {
    set_angular_acceleration(from.angular_acceleration());
  }
}

void Pose::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.common.geometry.Pose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pose::CopyFrom(const Pose& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.common.geometry.Pose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pose::IsInitialized() const {
  return true;
}

void Pose::Swap(Pose* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Pose::InternalSwap(Pose* other) {
  using std::swap;
  swap(position_, other->position_);
  swap(yaw_, other->yaw_);
  swap(speed_, other->speed_);
  swap(yaw_rate_, other->yaw_rate_);
  swap(acceleration_, other->acceleration_);
  swap(angular_acceleration_, other->angular_acceleration_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Pose::GetMetadata() const {
  protobuf_goldo_2fcommon_2fgeometry_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fcommon_2fgeometry_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Circle::InitAsDefaultInstance() {
  ::goldo::common::geometry::_Circle_default_instance_._instance.get_mutable()->center_ = const_cast< ::goldo::common::geometry::Point*>(
      ::goldo::common::geometry::Point::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Circle::kCenterFieldNumber;
const int Circle::kRadiusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Circle::Circle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fcommon_2fgeometry_2eproto::scc_info_Circle.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.common.geometry.Circle)
}
Circle::Circle(const Circle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_center()) {
    center_ = new ::goldo::common::geometry::Point(*from.center_);
  } else {
    center_ = NULL;
  }
  radius_ = from.radius_;
  // @@protoc_insertion_point(copy_constructor:goldo.common.geometry.Circle)
}

void Circle::SharedCtor() {
  ::memset(&center_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&radius_) -
      reinterpret_cast<char*>(&center_)) + sizeof(radius_));
}

Circle::~Circle() {
  // @@protoc_insertion_point(destructor:goldo.common.geometry.Circle)
  SharedDtor();
}

void Circle::SharedDtor() {
  if (this != internal_default_instance()) delete center_;
}

void Circle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Circle::descriptor() {
  ::protobuf_goldo_2fcommon_2fgeometry_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fcommon_2fgeometry_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Circle& Circle::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fcommon_2fgeometry_2eproto::scc_info_Circle.base);
  return *internal_default_instance();
}


void Circle::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.common.geometry.Circle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && center_ != NULL) {
    delete center_;
  }
  center_ = NULL;
  radius_ = 0;
  _internal_metadata_.Clear();
}

bool Circle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.common.geometry.Circle)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .goldo.common.geometry.Point center = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_center()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float radius = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &radius_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.common.geometry.Circle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.common.geometry.Circle)
  return false;
#undef DO_
}

void Circle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.common.geometry.Circle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .goldo.common.geometry.Point center = 1;
  if (this->has_center()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_center(), output);
  }

  // float radius = 2;
  if (this->radius() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->radius(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.common.geometry.Circle)
}

::google::protobuf::uint8* Circle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.common.geometry.Circle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .goldo.common.geometry.Point center = 1;
  if (this->has_center()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_center(), deterministic, target);
  }

  // float radius = 2;
  if (this->radius() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->radius(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.common.geometry.Circle)
  return target;
}

size_t Circle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.common.geometry.Circle)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .goldo.common.geometry.Point center = 1;
  if (this->has_center()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *center_);
  }

  // float radius = 2;
  if (this->radius() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Circle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.common.geometry.Circle)
  GOOGLE_DCHECK_NE(&from, this);
  const Circle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Circle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.common.geometry.Circle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.common.geometry.Circle)
    MergeFrom(*source);
  }
}

void Circle::MergeFrom(const Circle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.common.geometry.Circle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_center()) {
    mutable_center()->::goldo::common::geometry::Point::MergeFrom(from.center());
  }
  if (from.radius() != 0) {
    set_radius(from.radius());
  }
}

void Circle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.common.geometry.Circle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Circle::CopyFrom(const Circle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.common.geometry.Circle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Circle::IsInitialized() const {
  return true;
}

void Circle::Swap(Circle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Circle::InternalSwap(Circle* other) {
  using std::swap;
  swap(center_, other->center_);
  swap(radius_, other->radius_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Circle::GetMetadata() const {
  protobuf_goldo_2fcommon_2fgeometry_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fcommon_2fgeometry_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Box::InitAsDefaultInstance() {
  ::goldo::common::geometry::_Box_default_instance_._instance.get_mutable()->pmin_ = const_cast< ::goldo::common::geometry::Point*>(
      ::goldo::common::geometry::Point::internal_default_instance());
  ::goldo::common::geometry::_Box_default_instance_._instance.get_mutable()->pmax_ = const_cast< ::goldo::common::geometry::Point*>(
      ::goldo::common::geometry::Point::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Box::kPminFieldNumber;
const int Box::kPmaxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Box::Box()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fcommon_2fgeometry_2eproto::scc_info_Box.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.common.geometry.Box)
}
Box::Box(const Box& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pmin()) {
    pmin_ = new ::goldo::common::geometry::Point(*from.pmin_);
  } else {
    pmin_ = NULL;
  }
  if (from.has_pmax()) {
    pmax_ = new ::goldo::common::geometry::Point(*from.pmax_);
  } else {
    pmax_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:goldo.common.geometry.Box)
}

void Box::SharedCtor() {
  ::memset(&pmin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pmax_) -
      reinterpret_cast<char*>(&pmin_)) + sizeof(pmax_));
}

Box::~Box() {
  // @@protoc_insertion_point(destructor:goldo.common.geometry.Box)
  SharedDtor();
}

void Box::SharedDtor() {
  if (this != internal_default_instance()) delete pmin_;
  if (this != internal_default_instance()) delete pmax_;
}

void Box::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Box::descriptor() {
  ::protobuf_goldo_2fcommon_2fgeometry_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fcommon_2fgeometry_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Box& Box::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fcommon_2fgeometry_2eproto::scc_info_Box.base);
  return *internal_default_instance();
}


void Box::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.common.geometry.Box)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pmin_ != NULL) {
    delete pmin_;
  }
  pmin_ = NULL;
  if (GetArenaNoVirtual() == NULL && pmax_ != NULL) {
    delete pmax_;
  }
  pmax_ = NULL;
  _internal_metadata_.Clear();
}

bool Box::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.common.geometry.Box)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .goldo.common.geometry.Point pmin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pmin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .goldo.common.geometry.Point pmax = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pmax()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.common.geometry.Box)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.common.geometry.Box)
  return false;
#undef DO_
}

void Box::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.common.geometry.Box)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .goldo.common.geometry.Point pmin = 1;
  if (this->has_pmin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_pmin(), output);
  }

  // .goldo.common.geometry.Point pmax = 2;
  if (this->has_pmax()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_pmax(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.common.geometry.Box)
}

::google::protobuf::uint8* Box::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.common.geometry.Box)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .goldo.common.geometry.Point pmin = 1;
  if (this->has_pmin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_pmin(), deterministic, target);
  }

  // .goldo.common.geometry.Point pmax = 2;
  if (this->has_pmax()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_pmax(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.common.geometry.Box)
  return target;
}

size_t Box::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.common.geometry.Box)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .goldo.common.geometry.Point pmin = 1;
  if (this->has_pmin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pmin_);
  }

  // .goldo.common.geometry.Point pmax = 2;
  if (this->has_pmax()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pmax_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Box::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.common.geometry.Box)
  GOOGLE_DCHECK_NE(&from, this);
  const Box* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Box>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.common.geometry.Box)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.common.geometry.Box)
    MergeFrom(*source);
  }
}

void Box::MergeFrom(const Box& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.common.geometry.Box)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pmin()) {
    mutable_pmin()->::goldo::common::geometry::Point::MergeFrom(from.pmin());
  }
  if (from.has_pmax()) {
    mutable_pmax()->::goldo::common::geometry::Point::MergeFrom(from.pmax());
  }
}

void Box::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.common.geometry.Box)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Box::CopyFrom(const Box& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.common.geometry.Box)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Box::IsInitialized() const {
  return true;
}

void Box::Swap(Box* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Box::InternalSwap(Box* other) {
  using std::swap;
  swap(pmin_, other->pmin_);
  swap(pmax_, other->pmax_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Box::GetMetadata() const {
  protobuf_goldo_2fcommon_2fgeometry_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fcommon_2fgeometry_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Polygon::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Polygon::kVerticesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Polygon::Polygon()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fcommon_2fgeometry_2eproto::scc_info_Polygon.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.common.geometry.Polygon)
}
Polygon::Polygon(const Polygon& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      vertices_(from.vertices_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:goldo.common.geometry.Polygon)
}

void Polygon::SharedCtor() {
}

Polygon::~Polygon() {
  // @@protoc_insertion_point(destructor:goldo.common.geometry.Polygon)
  SharedDtor();
}

void Polygon::SharedDtor() {
}

void Polygon::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Polygon::descriptor() {
  ::protobuf_goldo_2fcommon_2fgeometry_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fcommon_2fgeometry_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Polygon& Polygon::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fcommon_2fgeometry_2eproto::scc_info_Polygon.base);
  return *internal_default_instance();
}


void Polygon::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.common.geometry.Polygon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vertices_.Clear();
  _internal_metadata_.Clear();
}

bool Polygon::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.common.geometry.Polygon)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .goldo.common.geometry.Point vertices = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_vertices()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.common.geometry.Polygon)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.common.geometry.Polygon)
  return false;
#undef DO_
}

void Polygon::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.common.geometry.Polygon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .goldo.common.geometry.Point vertices = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vertices_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->vertices(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.common.geometry.Polygon)
}

::google::protobuf::uint8* Polygon::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.common.geometry.Polygon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .goldo.common.geometry.Point vertices = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vertices_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->vertices(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.common.geometry.Polygon)
  return target;
}

size_t Polygon::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.common.geometry.Polygon)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .goldo.common.geometry.Point vertices = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->vertices_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->vertices(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Polygon::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.common.geometry.Polygon)
  GOOGLE_DCHECK_NE(&from, this);
  const Polygon* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Polygon>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.common.geometry.Polygon)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.common.geometry.Polygon)
    MergeFrom(*source);
  }
}

void Polygon::MergeFrom(const Polygon& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.common.geometry.Polygon)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  vertices_.MergeFrom(from.vertices_);
}

void Polygon::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.common.geometry.Polygon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Polygon::CopyFrom(const Polygon& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.common.geometry.Polygon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Polygon::IsInitialized() const {
  return true;
}

void Polygon::Swap(Polygon* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Polygon::InternalSwap(Polygon* other) {
  using std::swap;
  CastToBase(&vertices_)->InternalSwap(CastToBase(&other->vertices_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Polygon::GetMetadata() const {
  protobuf_goldo_2fcommon_2fgeometry_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fcommon_2fgeometry_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace geometry
}  // namespace common
}  // namespace goldo
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::common::geometry::Point* Arena::CreateMaybeMessage< ::goldo::common::geometry::Point >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::common::geometry::Point >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::common::geometry::PointCloud* Arena::CreateMaybeMessage< ::goldo::common::geometry::PointCloud >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::common::geometry::PointCloud >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::common::geometry::StaticPose* Arena::CreateMaybeMessage< ::goldo::common::geometry::StaticPose >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::common::geometry::StaticPose >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::common::geometry::Pose* Arena::CreateMaybeMessage< ::goldo::common::geometry::Pose >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::common::geometry::Pose >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::common::geometry::Circle* Arena::CreateMaybeMessage< ::goldo::common::geometry::Circle >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::common::geometry::Circle >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::common::geometry::Box* Arena::CreateMaybeMessage< ::goldo::common::geometry::Box >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::common::geometry::Box >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::common::geometry::Polygon* Arena::CreateMaybeMessage< ::goldo::common::geometry::Polygon >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::common::geometry::Polygon >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
