// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: goldo/nucleo/main.proto

#ifndef PROTOBUF_INCLUDED_goldo_2fnucleo_2fmain_2eproto
#define PROTOBUF_INCLUDED_goldo_2fnucleo_2fmain_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_goldo_2fnucleo_2fmain_2eproto 

namespace protobuf_goldo_2fnucleo_2fmain_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_goldo_2fnucleo_2fmain_2eproto
namespace goldo {
namespace nucleo {
class FreeRTOSHeapStats;
class FreeRTOSHeapStatsDefaultTypeInternal;
extern FreeRTOSHeapStatsDefaultTypeInternal _FreeRTOSHeapStats_default_instance_;
class Heartbeat;
class HeartbeatDefaultTypeInternal;
extern HeartbeatDefaultTypeInternal _Heartbeat_default_instance_;
class SensorsState;
class SensorsStateDefaultTypeInternal;
extern SensorsStateDefaultTypeInternal _SensorsState_default_instance_;
class WatchdogState;
class WatchdogStateDefaultTypeInternal;
extern WatchdogStateDefaultTypeInternal _WatchdogState_default_instance_;
}  // namespace nucleo
}  // namespace goldo
namespace google {
namespace protobuf {
template<> ::goldo::nucleo::FreeRTOSHeapStats* Arena::CreateMaybeMessage<::goldo::nucleo::FreeRTOSHeapStats>(Arena*);
template<> ::goldo::nucleo::Heartbeat* Arena::CreateMaybeMessage<::goldo::nucleo::Heartbeat>(Arena*);
template<> ::goldo::nucleo::SensorsState* Arena::CreateMaybeMessage<::goldo::nucleo::SensorsState>(Arena*);
template<> ::goldo::nucleo::WatchdogState* Arena::CreateMaybeMessage<::goldo::nucleo::WatchdogState>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace goldo {
namespace nucleo {

// ===================================================================

class Heartbeat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:goldo.nucleo.Heartbeat) */ {
 public:
  Heartbeat();
  virtual ~Heartbeat();

  Heartbeat(const Heartbeat& from);

  inline Heartbeat& operator=(const Heartbeat& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Heartbeat(Heartbeat&& from) noexcept
    : Heartbeat() {
    *this = ::std::move(from);
  }

  inline Heartbeat& operator=(Heartbeat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Heartbeat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Heartbeat* internal_default_instance() {
    return reinterpret_cast<const Heartbeat*>(
               &_Heartbeat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Heartbeat* other);
  friend void swap(Heartbeat& a, Heartbeat& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Heartbeat* New() const final {
    return CreateMaybeMessage<Heartbeat>(NULL);
  }

  Heartbeat* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Heartbeat>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Heartbeat& from);
  void MergeFrom(const Heartbeat& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Heartbeat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // fixed32 timestamp = 1;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  ::google::protobuf::uint32 timestamp() const;
  void set_timestamp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:goldo.nucleo.Heartbeat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 timestamp_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_goldo_2fnucleo_2fmain_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SensorsState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:goldo.nucleo.SensorsState) */ {
 public:
  SensorsState();
  virtual ~SensorsState();

  SensorsState(const SensorsState& from);

  inline SensorsState& operator=(const SensorsState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SensorsState(SensorsState&& from) noexcept
    : SensorsState() {
    *this = ::std::move(from);
  }

  inline SensorsState& operator=(SensorsState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SensorsState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SensorsState* internal_default_instance() {
    return reinterpret_cast<const SensorsState*>(
               &_SensorsState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(SensorsState* other);
  friend void swap(SensorsState& a, SensorsState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SensorsState* New() const final {
    return CreateMaybeMessage<SensorsState>(NULL);
  }

  SensorsState* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SensorsState>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SensorsState& from);
  void MergeFrom(const SensorsState& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SensorsState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // fixed32 state = 1;
  void clear_state();
  static const int kStateFieldNumber = 1;
  ::google::protobuf::uint32 state() const;
  void set_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:goldo.nucleo.SensorsState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 state_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_goldo_2fnucleo_2fmain_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WatchdogState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:goldo.nucleo.WatchdogState) */ {
 public:
  WatchdogState();
  virtual ~WatchdogState();

  WatchdogState(const WatchdogState& from);

  inline WatchdogState& operator=(const WatchdogState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WatchdogState(WatchdogState&& from) noexcept
    : WatchdogState() {
    *this = ::std::move(from);
  }

  inline WatchdogState& operator=(WatchdogState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WatchdogState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WatchdogState* internal_default_instance() {
    return reinterpret_cast<const WatchdogState*>(
               &_WatchdogState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(WatchdogState* other);
  friend void swap(WatchdogState& a, WatchdogState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WatchdogState* New() const final {
    return CreateMaybeMessage<WatchdogState>(NULL);
  }

  WatchdogState* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WatchdogState>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WatchdogState& from);
  void MergeFrom(const WatchdogState& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WatchdogState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool main = 1;
  void clear_main();
  static const int kMainFieldNumber = 1;
  bool main() const;
  void set_main(bool value);

  // bool propulsion = 2;
  void clear_propulsion();
  static const int kPropulsionFieldNumber = 2;
  bool propulsion() const;
  void set_propulsion(bool value);

  // bool fpga = 3;
  void clear_fpga();
  static const int kFpgaFieldNumber = 3;
  bool fpga() const;
  void set_fpga(bool value);

  // bool odrive_comm = 4;
  void clear_odrive_comm();
  static const int kOdriveCommFieldNumber = 4;
  bool odrive_comm() const;
  void set_odrive_comm(bool value);

  // bool dynamixels_comm = 5;
  void clear_dynamixels_comm();
  static const int kDynamixelsCommFieldNumber = 5;
  bool dynamixels_comm() const;
  void set_dynamixels_comm(bool value);

  // bool servos = 6;
  void clear_servos();
  static const int kServosFieldNumber = 6;
  bool servos() const;
  void set_servos(bool value);

  // @@protoc_insertion_point(class_scope:goldo.nucleo.WatchdogState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool main_;
  bool propulsion_;
  bool fpga_;
  bool odrive_comm_;
  bool dynamixels_comm_;
  bool servos_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_goldo_2fnucleo_2fmain_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FreeRTOSHeapStats : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:goldo.nucleo.FreeRTOSHeapStats) */ {
 public:
  FreeRTOSHeapStats();
  virtual ~FreeRTOSHeapStats();

  FreeRTOSHeapStats(const FreeRTOSHeapStats& from);

  inline FreeRTOSHeapStats& operator=(const FreeRTOSHeapStats& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FreeRTOSHeapStats(FreeRTOSHeapStats&& from) noexcept
    : FreeRTOSHeapStats() {
    *this = ::std::move(from);
  }

  inline FreeRTOSHeapStats& operator=(FreeRTOSHeapStats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FreeRTOSHeapStats& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FreeRTOSHeapStats* internal_default_instance() {
    return reinterpret_cast<const FreeRTOSHeapStats*>(
               &_FreeRTOSHeapStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(FreeRTOSHeapStats* other);
  friend void swap(FreeRTOSHeapStats& a, FreeRTOSHeapStats& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FreeRTOSHeapStats* New() const final {
    return CreateMaybeMessage<FreeRTOSHeapStats>(NULL);
  }

  FreeRTOSHeapStats* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FreeRTOSHeapStats>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FreeRTOSHeapStats& from);
  void MergeFrom(const FreeRTOSHeapStats& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FreeRTOSHeapStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // fixed32 xAvailableHeapSpaceInBytes = 1;
  void clear_xavailableheapspaceinbytes();
  static const int kXAvailableHeapSpaceInBytesFieldNumber = 1;
  ::google::protobuf::uint32 xavailableheapspaceinbytes() const;
  void set_xavailableheapspaceinbytes(::google::protobuf::uint32 value);

  // fixed32 xSizeOfLargestFreeBlockInBytes = 2;
  void clear_xsizeoflargestfreeblockinbytes();
  static const int kXSizeOfLargestFreeBlockInBytesFieldNumber = 2;
  ::google::protobuf::uint32 xsizeoflargestfreeblockinbytes() const;
  void set_xsizeoflargestfreeblockinbytes(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:goldo.nucleo.FreeRTOSHeapStats)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 xavailableheapspaceinbytes_;
  ::google::protobuf::uint32 xsizeoflargestfreeblockinbytes_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_goldo_2fnucleo_2fmain_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Heartbeat

// fixed32 timestamp = 1;
inline void Heartbeat::clear_timestamp() {
  timestamp_ = 0u;
}
inline ::google::protobuf::uint32 Heartbeat::timestamp() const {
  // @@protoc_insertion_point(field_get:goldo.nucleo.Heartbeat.timestamp)
  return timestamp_;
}
inline void Heartbeat::set_timestamp(::google::protobuf::uint32 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:goldo.nucleo.Heartbeat.timestamp)
}

// -------------------------------------------------------------------

// SensorsState

// fixed32 state = 1;
inline void SensorsState::clear_state() {
  state_ = 0u;
}
inline ::google::protobuf::uint32 SensorsState::state() const {
  // @@protoc_insertion_point(field_get:goldo.nucleo.SensorsState.state)
  return state_;
}
inline void SensorsState::set_state(::google::protobuf::uint32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:goldo.nucleo.SensorsState.state)
}

// -------------------------------------------------------------------

// WatchdogState

// bool main = 1;
inline void WatchdogState::clear_main() {
  main_ = false;
}
inline bool WatchdogState::main() const {
  // @@protoc_insertion_point(field_get:goldo.nucleo.WatchdogState.main)
  return main_;
}
inline void WatchdogState::set_main(bool value) {
  
  main_ = value;
  // @@protoc_insertion_point(field_set:goldo.nucleo.WatchdogState.main)
}

// bool propulsion = 2;
inline void WatchdogState::clear_propulsion() {
  propulsion_ = false;
}
inline bool WatchdogState::propulsion() const {
  // @@protoc_insertion_point(field_get:goldo.nucleo.WatchdogState.propulsion)
  return propulsion_;
}
inline void WatchdogState::set_propulsion(bool value) {
  
  propulsion_ = value;
  // @@protoc_insertion_point(field_set:goldo.nucleo.WatchdogState.propulsion)
}

// bool fpga = 3;
inline void WatchdogState::clear_fpga() {
  fpga_ = false;
}
inline bool WatchdogState::fpga() const {
  // @@protoc_insertion_point(field_get:goldo.nucleo.WatchdogState.fpga)
  return fpga_;
}
inline void WatchdogState::set_fpga(bool value) {
  
  fpga_ = value;
  // @@protoc_insertion_point(field_set:goldo.nucleo.WatchdogState.fpga)
}

// bool odrive_comm = 4;
inline void WatchdogState::clear_odrive_comm() {
  odrive_comm_ = false;
}
inline bool WatchdogState::odrive_comm() const {
  // @@protoc_insertion_point(field_get:goldo.nucleo.WatchdogState.odrive_comm)
  return odrive_comm_;
}
inline void WatchdogState::set_odrive_comm(bool value) {
  
  odrive_comm_ = value;
  // @@protoc_insertion_point(field_set:goldo.nucleo.WatchdogState.odrive_comm)
}

// bool dynamixels_comm = 5;
inline void WatchdogState::clear_dynamixels_comm() {
  dynamixels_comm_ = false;
}
inline bool WatchdogState::dynamixels_comm() const {
  // @@protoc_insertion_point(field_get:goldo.nucleo.WatchdogState.dynamixels_comm)
  return dynamixels_comm_;
}
inline void WatchdogState::set_dynamixels_comm(bool value) {
  
  dynamixels_comm_ = value;
  // @@protoc_insertion_point(field_set:goldo.nucleo.WatchdogState.dynamixels_comm)
}

// bool servos = 6;
inline void WatchdogState::clear_servos() {
  servos_ = false;
}
inline bool WatchdogState::servos() const {
  // @@protoc_insertion_point(field_get:goldo.nucleo.WatchdogState.servos)
  return servos_;
}
inline void WatchdogState::set_servos(bool value) {
  
  servos_ = value;
  // @@protoc_insertion_point(field_set:goldo.nucleo.WatchdogState.servos)
}

// -------------------------------------------------------------------

// FreeRTOSHeapStats

// fixed32 xAvailableHeapSpaceInBytes = 1;
inline void FreeRTOSHeapStats::clear_xavailableheapspaceinbytes() {
  xavailableheapspaceinbytes_ = 0u;
}
inline ::google::protobuf::uint32 FreeRTOSHeapStats::xavailableheapspaceinbytes() const {
  // @@protoc_insertion_point(field_get:goldo.nucleo.FreeRTOSHeapStats.xAvailableHeapSpaceInBytes)
  return xavailableheapspaceinbytes_;
}
inline void FreeRTOSHeapStats::set_xavailableheapspaceinbytes(::google::protobuf::uint32 value) {
  
  xavailableheapspaceinbytes_ = value;
  // @@protoc_insertion_point(field_set:goldo.nucleo.FreeRTOSHeapStats.xAvailableHeapSpaceInBytes)
}

// fixed32 xSizeOfLargestFreeBlockInBytes = 2;
inline void FreeRTOSHeapStats::clear_xsizeoflargestfreeblockinbytes() {
  xsizeoflargestfreeblockinbytes_ = 0u;
}
inline ::google::protobuf::uint32 FreeRTOSHeapStats::xsizeoflargestfreeblockinbytes() const {
  // @@protoc_insertion_point(field_get:goldo.nucleo.FreeRTOSHeapStats.xSizeOfLargestFreeBlockInBytes)
  return xsizeoflargestfreeblockinbytes_;
}
inline void FreeRTOSHeapStats::set_xsizeoflargestfreeblockinbytes(::google::protobuf::uint32 value) {
  
  xsizeoflargestfreeblockinbytes_ = value;
  // @@protoc_insertion_point(field_set:goldo.nucleo.FreeRTOSHeapStats.xSizeOfLargestFreeBlockInBytes)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace nucleo
}  // namespace goldo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_goldo_2fnucleo_2fmain_2eproto
