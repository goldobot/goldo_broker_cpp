// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: goldo/nucleo/statistics.proto

#include "goldo/nucleo/statistics.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_goldo_2fnucleo_2fstatistics_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_goldo_2fnucleo_2fstatistics_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CommDeserializerStatistics;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_goldo_2fnucleo_2fstatistics_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CommSerializerStatistics;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_goldo_2fnucleo_2fstatistics_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MessageQueueStatistics;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_goldo_2fnucleo_2fstatistics_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ODriveStreamParserStatistics;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_goldo_2fnucleo_2fstatistics_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ODriveStreamWriterStatistics;
}  // namespace protobuf_goldo_2fnucleo_2fstatistics_2eproto
namespace goldo {
namespace nucleo {
namespace statistics {
class MessageQueueStatisticsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessageQueueStatistics>
      _instance;
} _MessageQueueStatistics_default_instance_;
class CommSerializerStatisticsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CommSerializerStatistics>
      _instance;
} _CommSerializerStatistics_default_instance_;
class CommDeserializerStatisticsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CommDeserializerStatistics>
      _instance;
} _CommDeserializerStatistics_default_instance_;
class ODriveStreamParserStatisticsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ODriveStreamParserStatistics>
      _instance;
} _ODriveStreamParserStatistics_default_instance_;
class ODriveStreamWriterStatisticsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ODriveStreamWriterStatistics>
      _instance;
} _ODriveStreamWriterStatistics_default_instance_;
class UARTCommTaskStatisticsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UARTCommTaskStatistics>
      _instance;
} _UARTCommTaskStatistics_default_instance_;
class ODriveCommTaskStatisticsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ODriveCommTaskStatistics>
      _instance;
} _ODriveCommTaskStatistics_default_instance_;
class PropulsionTaskStatisticsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PropulsionTaskStatistics>
      _instance;
} _PropulsionTaskStatistics_default_instance_;
}  // namespace statistics
}  // namespace nucleo
}  // namespace goldo
namespace protobuf_goldo_2fnucleo_2fstatistics_2eproto {
static void InitDefaultsMessageQueueStatistics() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::nucleo::statistics::_MessageQueueStatistics_default_instance_;
    new (ptr) ::goldo::nucleo::statistics::MessageQueueStatistics();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::nucleo::statistics::MessageQueueStatistics::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MessageQueueStatistics =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMessageQueueStatistics}, {}};

static void InitDefaultsCommSerializerStatistics() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::nucleo::statistics::_CommSerializerStatistics_default_instance_;
    new (ptr) ::goldo::nucleo::statistics::CommSerializerStatistics();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::nucleo::statistics::CommSerializerStatistics::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CommSerializerStatistics =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCommSerializerStatistics}, {}};

static void InitDefaultsCommDeserializerStatistics() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::nucleo::statistics::_CommDeserializerStatistics_default_instance_;
    new (ptr) ::goldo::nucleo::statistics::CommDeserializerStatistics();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::nucleo::statistics::CommDeserializerStatistics::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CommDeserializerStatistics =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCommDeserializerStatistics}, {}};

static void InitDefaultsODriveStreamParserStatistics() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::nucleo::statistics::_ODriveStreamParserStatistics_default_instance_;
    new (ptr) ::goldo::nucleo::statistics::ODriveStreamParserStatistics();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::nucleo::statistics::ODriveStreamParserStatistics::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ODriveStreamParserStatistics =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsODriveStreamParserStatistics}, {}};

static void InitDefaultsODriveStreamWriterStatistics() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::nucleo::statistics::_ODriveStreamWriterStatistics_default_instance_;
    new (ptr) ::goldo::nucleo::statistics::ODriveStreamWriterStatistics();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::nucleo::statistics::ODriveStreamWriterStatistics::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ODriveStreamWriterStatistics =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsODriveStreamWriterStatistics}, {}};

static void InitDefaultsUARTCommTaskStatistics() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::nucleo::statistics::_UARTCommTaskStatistics_default_instance_;
    new (ptr) ::goldo::nucleo::statistics::UARTCommTaskStatistics();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::nucleo::statistics::UARTCommTaskStatistics::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_UARTCommTaskStatistics =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsUARTCommTaskStatistics}, {
      &protobuf_goldo_2fnucleo_2fstatistics_2eproto::scc_info_CommSerializerStatistics.base,
      &protobuf_goldo_2fnucleo_2fstatistics_2eproto::scc_info_CommDeserializerStatistics.base,
      &protobuf_goldo_2fnucleo_2fstatistics_2eproto::scc_info_MessageQueueStatistics.base,}};

static void InitDefaultsODriveCommTaskStatistics() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::nucleo::statistics::_ODriveCommTaskStatistics_default_instance_;
    new (ptr) ::goldo::nucleo::statistics::ODriveCommTaskStatistics();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::nucleo::statistics::ODriveCommTaskStatistics::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_ODriveCommTaskStatistics =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsODriveCommTaskStatistics}, {
      &protobuf_goldo_2fnucleo_2fstatistics_2eproto::scc_info_ODriveStreamParserStatistics.base,
      &protobuf_goldo_2fnucleo_2fstatistics_2eproto::scc_info_ODriveStreamWriterStatistics.base,
      &protobuf_goldo_2fnucleo_2fstatistics_2eproto::scc_info_MessageQueueStatistics.base,}};

static void InitDefaultsPropulsionTaskStatistics() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::nucleo::statistics::_PropulsionTaskStatistics_default_instance_;
    new (ptr) ::goldo::nucleo::statistics::PropulsionTaskStatistics();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::nucleo::statistics::PropulsionTaskStatistics::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PropulsionTaskStatistics =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPropulsionTaskStatistics}, {
      &protobuf_goldo_2fnucleo_2fstatistics_2eproto::scc_info_MessageQueueStatistics.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_MessageQueueStatistics.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CommSerializerStatistics.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CommDeserializerStatistics.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ODriveStreamParserStatistics.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ODriveStreamWriterStatistics.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UARTCommTaskStatistics.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ODriveCommTaskStatistics.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PropulsionTaskStatistics.base);
}

::google::protobuf::Metadata file_level_metadata[8];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::statistics::MessageQueueStatistics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::statistics::MessageQueueStatistics, min_available_capacity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::statistics::MessageQueueStatistics, bytes_pushed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::statistics::MessageQueueStatistics, messages_pushed_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::statistics::CommSerializerStatistics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::statistics::CommSerializerStatistics, messages_sent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::statistics::CommSerializerStatistics, bytes_sent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::statistics::CommSerializerStatistics, buffer_high_watermark_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::statistics::CommDeserializerStatistics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::statistics::CommDeserializerStatistics, messages_received_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::statistics::CommDeserializerStatistics, bytes_received_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::statistics::CommDeserializerStatistics, sequence_errors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::statistics::CommDeserializerStatistics, crc_errors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::statistics::CommDeserializerStatistics, buffer_high_watermark_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::statistics::ODriveStreamParserStatistics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::statistics::ODriveStreamParserStatistics, bytes_received_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::statistics::ODriveStreamParserStatistics, messages_received_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::statistics::ODriveStreamParserStatistics, rx_errors_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::statistics::ODriveStreamWriterStatistics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::statistics::ODriveStreamWriterStatistics, bytes_sent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::statistics::ODriveStreamWriterStatistics, messages_sent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::statistics::ODriveStreamWriterStatistics, tx_highwater_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::statistics::UARTCommTaskStatistics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::statistics::UARTCommTaskStatistics, max_cycles_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::statistics::UARTCommTaskStatistics, serializer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::statistics::UARTCommTaskStatistics, deserializer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::statistics::UARTCommTaskStatistics, serializer_ftdi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::statistics::UARTCommTaskStatistics, deserializer_fdti_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::statistics::UARTCommTaskStatistics, queue_out_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::statistics::UARTCommTaskStatistics, queue_out_prio_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::statistics::UARTCommTaskStatistics, queue_out_ftdi_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::statistics::ODriveCommTaskStatistics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::statistics::ODriveCommTaskStatistics, parser_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::statistics::ODriveCommTaskStatistics, writer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::statistics::ODriveCommTaskStatistics, queue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::statistics::PropulsionTaskStatistics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::statistics::PropulsionTaskStatistics, max_cycles_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::statistics::PropulsionTaskStatistics, min_interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::statistics::PropulsionTaskStatistics, max_interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::statistics::PropulsionTaskStatistics, queue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::statistics::PropulsionTaskStatistics, urgent_queue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::statistics::PropulsionTaskStatistics, odrive_queue_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::goldo::nucleo::statistics::MessageQueueStatistics)},
  { 8, -1, sizeof(::goldo::nucleo::statistics::CommSerializerStatistics)},
  { 16, -1, sizeof(::goldo::nucleo::statistics::CommDeserializerStatistics)},
  { 26, -1, sizeof(::goldo::nucleo::statistics::ODriveStreamParserStatistics)},
  { 34, -1, sizeof(::goldo::nucleo::statistics::ODriveStreamWriterStatistics)},
  { 42, -1, sizeof(::goldo::nucleo::statistics::UARTCommTaskStatistics)},
  { 55, -1, sizeof(::goldo::nucleo::statistics::ODriveCommTaskStatistics)},
  { 63, -1, sizeof(::goldo::nucleo::statistics::PropulsionTaskStatistics)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::nucleo::statistics::_MessageQueueStatistics_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::nucleo::statistics::_CommSerializerStatistics_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::nucleo::statistics::_CommDeserializerStatistics_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::nucleo::statistics::_ODriveStreamParserStatistics_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::nucleo::statistics::_ODriveStreamWriterStatistics_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::nucleo::statistics::_UARTCommTaskStatistics_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::nucleo::statistics::_ODriveCommTaskStatistics_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::nucleo::statistics::_PropulsionTaskStatistics_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "goldo/nucleo/statistics.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\035goldo/nucleo/statistics.proto\022\027goldo.n"
      "ucleo.statistics\032\027goldo/pb2_options.prot"
      "o\"y\n\026MessageQueueStatistics\022$\n\026min_avail"
      "able_capacity\030\001 \001(\rB\004\200\265\030\007\022\032\n\014bytes_pushe"
      "d\030\002 \001(\rB\004\200\265\030\007\022\035\n\017messages_pushed\030\003 \001(\rB\004"
      "\200\265\030\007\"v\n\030CommSerializerStatistics\022\033\n\rmess"
      "ages_sent\030\001 \001(\rB\004\200\265\030\007\022\030\n\nbytes_sent\030\002 \001("
      "\rB\004\200\265\030\007\022#\n\025buffer_high_watermark\030\003 \001(\rB\004"
      "\200\265\030\007\"\271\001\n\032CommDeserializerStatistics\022\037\n\021m"
      "essages_received\030\001 \001(\rB\004\200\265\030\007\022\034\n\016bytes_re"
      "ceived\030\002 \001(\rB\004\200\265\030\007\022\035\n\017sequence_errors\030\003 "
      "\001(\rB\004\200\265\030\007\022\030\n\ncrc_errors\030\004 \001(\rB\004\200\265\030\007\022#\n\025b"
      "uffer_high_watermark\030\005 \001(\rB\004\200\265\030\007\"v\n\034ODri"
      "veStreamParserStatistics\022\034\n\016bytes_receiv"
      "ed\030\001 \001(\rB\004\200\265\030\007\022\037\n\021messages_received\030\002 \001("
      "\rB\004\200\265\030\005\022\027\n\trx_errors\030\003 \001(\rB\004\200\265\030\005\"q\n\034ODri"
      "veStreamWriterStatistics\022\030\n\nbytes_sent\030\001"
      " \001(\rB\004\200\265\030\007\022\033\n\rmessages_sent\030\002 \001(\rB\004\200\265\030\005\022"
      "\032\n\014tx_highwater\030\003 \001(\rB\004\200\265\030\005\"\266\004\n\026UARTComm"
      "TaskStatistics\022\030\n\nmax_cycles\030\001 \001(\rB\004\200\265\030\007"
      "\022E\n\nserializer\030\002 \001(\01321.goldo.nucleo.stat"
      "istics.CommSerializerStatistics\022I\n\014deser"
      "ializer\030\003 \001(\01323.goldo.nucleo.statistics."
      "CommDeserializerStatistics\022J\n\017serializer"
      "_ftdi\030\004 \001(\01321.goldo.nucleo.statistics.Co"
      "mmSerializerStatistics\022N\n\021deserializer_f"
      "dti\030\005 \001(\01323.goldo.nucleo.statistics.Comm"
      "DeserializerStatistics\022B\n\tqueue_out\030\006 \001("
      "\0132/.goldo.nucleo.statistics.MessageQueue"
      "Statistics\022G\n\016queue_out_prio\030\007 \001(\0132/.gol"
      "do.nucleo.statistics.MessageQueueStatist"
      "ics\022G\n\016queue_out_ftdi\030\010 \001(\0132/.goldo.nucl"
      "eo.statistics.MessageQueueStatistics\"\350\001\n"
      "\030ODriveCommTaskStatistics\022E\n\006parser\030\002 \001("
      "\01325.goldo.nucleo.statistics.ODriveStream"
      "ParserStatistics\022E\n\006writer\030\003 \001(\01325.goldo"
      ".nucleo.statistics.ODriveStreamWriterSta"
      "tistics\022>\n\005queue\030\004 \001(\0132/.goldo.nucleo.st"
      "atistics.MessageQueueStatistics\"\272\002\n\030Prop"
      "ulsionTaskStatistics\022\030\n\nmax_cycles\030\001 \001(\r"
      "B\004\200\265\030\007\022\032\n\014min_interval\030\005 \001(\rB\004\200\265\030\007\022\032\n\014ma"
      "x_interval\030\006 \001(\rB\004\200\265\030\007\022>\n\005queue\030\002 \001(\0132/."
      "goldo.nucleo.statistics.MessageQueueStat"
      "istics\022E\n\014urgent_queue\030\003 \001(\0132/.goldo.nuc"
      "leo.statistics.MessageQueueStatistics\022E\n"
      "\014odrive_queue\030\004 \001(\0132/.goldo.nucleo.stati"
      "stics.MessageQueueStatisticsb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1876);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "goldo/nucleo/statistics.proto", &protobuf_RegisterTypes);
  ::protobuf_goldo_2fpb2_5foptions_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_goldo_2fnucleo_2fstatistics_2eproto
namespace goldo {
namespace nucleo {
namespace statistics {

// ===================================================================

void MessageQueueStatistics::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageQueueStatistics::kMinAvailableCapacityFieldNumber;
const int MessageQueueStatistics::kBytesPushedFieldNumber;
const int MessageQueueStatistics::kMessagesPushedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageQueueStatistics::MessageQueueStatistics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fnucleo_2fstatistics_2eproto::scc_info_MessageQueueStatistics.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.nucleo.statistics.MessageQueueStatistics)
}
MessageQueueStatistics::MessageQueueStatistics(const MessageQueueStatistics& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&min_available_capacity_, &from.min_available_capacity_,
    static_cast<size_t>(reinterpret_cast<char*>(&messages_pushed_) -
    reinterpret_cast<char*>(&min_available_capacity_)) + sizeof(messages_pushed_));
  // @@protoc_insertion_point(copy_constructor:goldo.nucleo.statistics.MessageQueueStatistics)
}

void MessageQueueStatistics::SharedCtor() {
  ::memset(&min_available_capacity_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&messages_pushed_) -
      reinterpret_cast<char*>(&min_available_capacity_)) + sizeof(messages_pushed_));
}

MessageQueueStatistics::~MessageQueueStatistics() {
  // @@protoc_insertion_point(destructor:goldo.nucleo.statistics.MessageQueueStatistics)
  SharedDtor();
}

void MessageQueueStatistics::SharedDtor() {
}

void MessageQueueStatistics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MessageQueueStatistics::descriptor() {
  ::protobuf_goldo_2fnucleo_2fstatistics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2fstatistics_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageQueueStatistics& MessageQueueStatistics::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fnucleo_2fstatistics_2eproto::scc_info_MessageQueueStatistics.base);
  return *internal_default_instance();
}


void MessageQueueStatistics::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.nucleo.statistics.MessageQueueStatistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&min_available_capacity_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&messages_pushed_) -
      reinterpret_cast<char*>(&min_available_capacity_)) + sizeof(messages_pushed_));
  _internal_metadata_.Clear();
}

bool MessageQueueStatistics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.nucleo.statistics.MessageQueueStatistics)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 min_available_capacity = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &min_available_capacity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 bytes_pushed = 2 [(.goldo.pb2_options.cpp_type) = UINT32];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bytes_pushed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 messages_pushed = 3 [(.goldo.pb2_options.cpp_type) = UINT32];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &messages_pushed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.nucleo.statistics.MessageQueueStatistics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.nucleo.statistics.MessageQueueStatistics)
  return false;
#undef DO_
}

void MessageQueueStatistics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.nucleo.statistics.MessageQueueStatistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 min_available_capacity = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->min_available_capacity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->min_available_capacity(), output);
  }

  // uint32 bytes_pushed = 2 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->bytes_pushed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->bytes_pushed(), output);
  }

  // uint32 messages_pushed = 3 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->messages_pushed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->messages_pushed(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.nucleo.statistics.MessageQueueStatistics)
}

::google::protobuf::uint8* MessageQueueStatistics::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.nucleo.statistics.MessageQueueStatistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 min_available_capacity = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->min_available_capacity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->min_available_capacity(), target);
  }

  // uint32 bytes_pushed = 2 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->bytes_pushed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->bytes_pushed(), target);
  }

  // uint32 messages_pushed = 3 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->messages_pushed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->messages_pushed(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.nucleo.statistics.MessageQueueStatistics)
  return target;
}

size_t MessageQueueStatistics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.nucleo.statistics.MessageQueueStatistics)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 min_available_capacity = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->min_available_capacity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->min_available_capacity());
  }

  // uint32 bytes_pushed = 2 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->bytes_pushed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bytes_pushed());
  }

  // uint32 messages_pushed = 3 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->messages_pushed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->messages_pushed());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MessageQueueStatistics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.nucleo.statistics.MessageQueueStatistics)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageQueueStatistics* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageQueueStatistics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.nucleo.statistics.MessageQueueStatistics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.nucleo.statistics.MessageQueueStatistics)
    MergeFrom(*source);
  }
}

void MessageQueueStatistics::MergeFrom(const MessageQueueStatistics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.nucleo.statistics.MessageQueueStatistics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.min_available_capacity() != 0) {
    set_min_available_capacity(from.min_available_capacity());
  }
  if (from.bytes_pushed() != 0) {
    set_bytes_pushed(from.bytes_pushed());
  }
  if (from.messages_pushed() != 0) {
    set_messages_pushed(from.messages_pushed());
  }
}

void MessageQueueStatistics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.nucleo.statistics.MessageQueueStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageQueueStatistics::CopyFrom(const MessageQueueStatistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.nucleo.statistics.MessageQueueStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageQueueStatistics::IsInitialized() const {
  return true;
}

void MessageQueueStatistics::Swap(MessageQueueStatistics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageQueueStatistics::InternalSwap(MessageQueueStatistics* other) {
  using std::swap;
  swap(min_available_capacity_, other->min_available_capacity_);
  swap(bytes_pushed_, other->bytes_pushed_);
  swap(messages_pushed_, other->messages_pushed_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MessageQueueStatistics::GetMetadata() const {
  protobuf_goldo_2fnucleo_2fstatistics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2fstatistics_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CommSerializerStatistics::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommSerializerStatistics::kMessagesSentFieldNumber;
const int CommSerializerStatistics::kBytesSentFieldNumber;
const int CommSerializerStatistics::kBufferHighWatermarkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommSerializerStatistics::CommSerializerStatistics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fnucleo_2fstatistics_2eproto::scc_info_CommSerializerStatistics.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.nucleo.statistics.CommSerializerStatistics)
}
CommSerializerStatistics::CommSerializerStatistics(const CommSerializerStatistics& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&messages_sent_, &from.messages_sent_,
    static_cast<size_t>(reinterpret_cast<char*>(&buffer_high_watermark_) -
    reinterpret_cast<char*>(&messages_sent_)) + sizeof(buffer_high_watermark_));
  // @@protoc_insertion_point(copy_constructor:goldo.nucleo.statistics.CommSerializerStatistics)
}

void CommSerializerStatistics::SharedCtor() {
  ::memset(&messages_sent_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&buffer_high_watermark_) -
      reinterpret_cast<char*>(&messages_sent_)) + sizeof(buffer_high_watermark_));
}

CommSerializerStatistics::~CommSerializerStatistics() {
  // @@protoc_insertion_point(destructor:goldo.nucleo.statistics.CommSerializerStatistics)
  SharedDtor();
}

void CommSerializerStatistics::SharedDtor() {
}

void CommSerializerStatistics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CommSerializerStatistics::descriptor() {
  ::protobuf_goldo_2fnucleo_2fstatistics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2fstatistics_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CommSerializerStatistics& CommSerializerStatistics::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fnucleo_2fstatistics_2eproto::scc_info_CommSerializerStatistics.base);
  return *internal_default_instance();
}


void CommSerializerStatistics::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.nucleo.statistics.CommSerializerStatistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&messages_sent_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&buffer_high_watermark_) -
      reinterpret_cast<char*>(&messages_sent_)) + sizeof(buffer_high_watermark_));
  _internal_metadata_.Clear();
}

bool CommSerializerStatistics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.nucleo.statistics.CommSerializerStatistics)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 messages_sent = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &messages_sent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 bytes_sent = 2 [(.goldo.pb2_options.cpp_type) = UINT32];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bytes_sent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 buffer_high_watermark = 3 [(.goldo.pb2_options.cpp_type) = UINT32];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buffer_high_watermark_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.nucleo.statistics.CommSerializerStatistics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.nucleo.statistics.CommSerializerStatistics)
  return false;
#undef DO_
}

void CommSerializerStatistics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.nucleo.statistics.CommSerializerStatistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 messages_sent = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->messages_sent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->messages_sent(), output);
  }

  // uint32 bytes_sent = 2 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->bytes_sent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->bytes_sent(), output);
  }

  // uint32 buffer_high_watermark = 3 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->buffer_high_watermark() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->buffer_high_watermark(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.nucleo.statistics.CommSerializerStatistics)
}

::google::protobuf::uint8* CommSerializerStatistics::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.nucleo.statistics.CommSerializerStatistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 messages_sent = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->messages_sent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->messages_sent(), target);
  }

  // uint32 bytes_sent = 2 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->bytes_sent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->bytes_sent(), target);
  }

  // uint32 buffer_high_watermark = 3 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->buffer_high_watermark() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->buffer_high_watermark(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.nucleo.statistics.CommSerializerStatistics)
  return target;
}

size_t CommSerializerStatistics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.nucleo.statistics.CommSerializerStatistics)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 messages_sent = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->messages_sent() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->messages_sent());
  }

  // uint32 bytes_sent = 2 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->bytes_sent() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bytes_sent());
  }

  // uint32 buffer_high_watermark = 3 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->buffer_high_watermark() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->buffer_high_watermark());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CommSerializerStatistics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.nucleo.statistics.CommSerializerStatistics)
  GOOGLE_DCHECK_NE(&from, this);
  const CommSerializerStatistics* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CommSerializerStatistics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.nucleo.statistics.CommSerializerStatistics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.nucleo.statistics.CommSerializerStatistics)
    MergeFrom(*source);
  }
}

void CommSerializerStatistics::MergeFrom(const CommSerializerStatistics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.nucleo.statistics.CommSerializerStatistics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.messages_sent() != 0) {
    set_messages_sent(from.messages_sent());
  }
  if (from.bytes_sent() != 0) {
    set_bytes_sent(from.bytes_sent());
  }
  if (from.buffer_high_watermark() != 0) {
    set_buffer_high_watermark(from.buffer_high_watermark());
  }
}

void CommSerializerStatistics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.nucleo.statistics.CommSerializerStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommSerializerStatistics::CopyFrom(const CommSerializerStatistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.nucleo.statistics.CommSerializerStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommSerializerStatistics::IsInitialized() const {
  return true;
}

void CommSerializerStatistics::Swap(CommSerializerStatistics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommSerializerStatistics::InternalSwap(CommSerializerStatistics* other) {
  using std::swap;
  swap(messages_sent_, other->messages_sent_);
  swap(bytes_sent_, other->bytes_sent_);
  swap(buffer_high_watermark_, other->buffer_high_watermark_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CommSerializerStatistics::GetMetadata() const {
  protobuf_goldo_2fnucleo_2fstatistics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2fstatistics_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CommDeserializerStatistics::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommDeserializerStatistics::kMessagesReceivedFieldNumber;
const int CommDeserializerStatistics::kBytesReceivedFieldNumber;
const int CommDeserializerStatistics::kSequenceErrorsFieldNumber;
const int CommDeserializerStatistics::kCrcErrorsFieldNumber;
const int CommDeserializerStatistics::kBufferHighWatermarkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommDeserializerStatistics::CommDeserializerStatistics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fnucleo_2fstatistics_2eproto::scc_info_CommDeserializerStatistics.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.nucleo.statistics.CommDeserializerStatistics)
}
CommDeserializerStatistics::CommDeserializerStatistics(const CommDeserializerStatistics& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&messages_received_, &from.messages_received_,
    static_cast<size_t>(reinterpret_cast<char*>(&buffer_high_watermark_) -
    reinterpret_cast<char*>(&messages_received_)) + sizeof(buffer_high_watermark_));
  // @@protoc_insertion_point(copy_constructor:goldo.nucleo.statistics.CommDeserializerStatistics)
}

void CommDeserializerStatistics::SharedCtor() {
  ::memset(&messages_received_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&buffer_high_watermark_) -
      reinterpret_cast<char*>(&messages_received_)) + sizeof(buffer_high_watermark_));
}

CommDeserializerStatistics::~CommDeserializerStatistics() {
  // @@protoc_insertion_point(destructor:goldo.nucleo.statistics.CommDeserializerStatistics)
  SharedDtor();
}

void CommDeserializerStatistics::SharedDtor() {
}

void CommDeserializerStatistics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CommDeserializerStatistics::descriptor() {
  ::protobuf_goldo_2fnucleo_2fstatistics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2fstatistics_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CommDeserializerStatistics& CommDeserializerStatistics::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fnucleo_2fstatistics_2eproto::scc_info_CommDeserializerStatistics.base);
  return *internal_default_instance();
}


void CommDeserializerStatistics::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.nucleo.statistics.CommDeserializerStatistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&messages_received_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&buffer_high_watermark_) -
      reinterpret_cast<char*>(&messages_received_)) + sizeof(buffer_high_watermark_));
  _internal_metadata_.Clear();
}

bool CommDeserializerStatistics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.nucleo.statistics.CommDeserializerStatistics)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 messages_received = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &messages_received_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 bytes_received = 2 [(.goldo.pb2_options.cpp_type) = UINT32];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bytes_received_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 sequence_errors = 3 [(.goldo.pb2_options.cpp_type) = UINT32];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sequence_errors_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 crc_errors = 4 [(.goldo.pb2_options.cpp_type) = UINT32];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &crc_errors_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 buffer_high_watermark = 5 [(.goldo.pb2_options.cpp_type) = UINT32];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buffer_high_watermark_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.nucleo.statistics.CommDeserializerStatistics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.nucleo.statistics.CommDeserializerStatistics)
  return false;
#undef DO_
}

void CommDeserializerStatistics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.nucleo.statistics.CommDeserializerStatistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 messages_received = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->messages_received() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->messages_received(), output);
  }

  // uint32 bytes_received = 2 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->bytes_received() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->bytes_received(), output);
  }

  // uint32 sequence_errors = 3 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->sequence_errors() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->sequence_errors(), output);
  }

  // uint32 crc_errors = 4 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->crc_errors() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->crc_errors(), output);
  }

  // uint32 buffer_high_watermark = 5 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->buffer_high_watermark() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->buffer_high_watermark(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.nucleo.statistics.CommDeserializerStatistics)
}

::google::protobuf::uint8* CommDeserializerStatistics::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.nucleo.statistics.CommDeserializerStatistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 messages_received = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->messages_received() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->messages_received(), target);
  }

  // uint32 bytes_received = 2 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->bytes_received() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->bytes_received(), target);
  }

  // uint32 sequence_errors = 3 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->sequence_errors() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->sequence_errors(), target);
  }

  // uint32 crc_errors = 4 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->crc_errors() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->crc_errors(), target);
  }

  // uint32 buffer_high_watermark = 5 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->buffer_high_watermark() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->buffer_high_watermark(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.nucleo.statistics.CommDeserializerStatistics)
  return target;
}

size_t CommDeserializerStatistics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.nucleo.statistics.CommDeserializerStatistics)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 messages_received = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->messages_received() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->messages_received());
  }

  // uint32 bytes_received = 2 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->bytes_received() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bytes_received());
  }

  // uint32 sequence_errors = 3 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->sequence_errors() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sequence_errors());
  }

  // uint32 crc_errors = 4 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->crc_errors() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->crc_errors());
  }

  // uint32 buffer_high_watermark = 5 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->buffer_high_watermark() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->buffer_high_watermark());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CommDeserializerStatistics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.nucleo.statistics.CommDeserializerStatistics)
  GOOGLE_DCHECK_NE(&from, this);
  const CommDeserializerStatistics* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CommDeserializerStatistics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.nucleo.statistics.CommDeserializerStatistics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.nucleo.statistics.CommDeserializerStatistics)
    MergeFrom(*source);
  }
}

void CommDeserializerStatistics::MergeFrom(const CommDeserializerStatistics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.nucleo.statistics.CommDeserializerStatistics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.messages_received() != 0) {
    set_messages_received(from.messages_received());
  }
  if (from.bytes_received() != 0) {
    set_bytes_received(from.bytes_received());
  }
  if (from.sequence_errors() != 0) {
    set_sequence_errors(from.sequence_errors());
  }
  if (from.crc_errors() != 0) {
    set_crc_errors(from.crc_errors());
  }
  if (from.buffer_high_watermark() != 0) {
    set_buffer_high_watermark(from.buffer_high_watermark());
  }
}

void CommDeserializerStatistics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.nucleo.statistics.CommDeserializerStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommDeserializerStatistics::CopyFrom(const CommDeserializerStatistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.nucleo.statistics.CommDeserializerStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommDeserializerStatistics::IsInitialized() const {
  return true;
}

void CommDeserializerStatistics::Swap(CommDeserializerStatistics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommDeserializerStatistics::InternalSwap(CommDeserializerStatistics* other) {
  using std::swap;
  swap(messages_received_, other->messages_received_);
  swap(bytes_received_, other->bytes_received_);
  swap(sequence_errors_, other->sequence_errors_);
  swap(crc_errors_, other->crc_errors_);
  swap(buffer_high_watermark_, other->buffer_high_watermark_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CommDeserializerStatistics::GetMetadata() const {
  protobuf_goldo_2fnucleo_2fstatistics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2fstatistics_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ODriveStreamParserStatistics::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ODriveStreamParserStatistics::kBytesReceivedFieldNumber;
const int ODriveStreamParserStatistics::kMessagesReceivedFieldNumber;
const int ODriveStreamParserStatistics::kRxErrorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ODriveStreamParserStatistics::ODriveStreamParserStatistics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fnucleo_2fstatistics_2eproto::scc_info_ODriveStreamParserStatistics.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.nucleo.statistics.ODriveStreamParserStatistics)
}
ODriveStreamParserStatistics::ODriveStreamParserStatistics(const ODriveStreamParserStatistics& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&bytes_received_, &from.bytes_received_,
    static_cast<size_t>(reinterpret_cast<char*>(&rx_errors_) -
    reinterpret_cast<char*>(&bytes_received_)) + sizeof(rx_errors_));
  // @@protoc_insertion_point(copy_constructor:goldo.nucleo.statistics.ODriveStreamParserStatistics)
}

void ODriveStreamParserStatistics::SharedCtor() {
  ::memset(&bytes_received_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rx_errors_) -
      reinterpret_cast<char*>(&bytes_received_)) + sizeof(rx_errors_));
}

ODriveStreamParserStatistics::~ODriveStreamParserStatistics() {
  // @@protoc_insertion_point(destructor:goldo.nucleo.statistics.ODriveStreamParserStatistics)
  SharedDtor();
}

void ODriveStreamParserStatistics::SharedDtor() {
}

void ODriveStreamParserStatistics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ODriveStreamParserStatistics::descriptor() {
  ::protobuf_goldo_2fnucleo_2fstatistics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2fstatistics_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ODriveStreamParserStatistics& ODriveStreamParserStatistics::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fnucleo_2fstatistics_2eproto::scc_info_ODriveStreamParserStatistics.base);
  return *internal_default_instance();
}


void ODriveStreamParserStatistics::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.nucleo.statistics.ODriveStreamParserStatistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&bytes_received_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rx_errors_) -
      reinterpret_cast<char*>(&bytes_received_)) + sizeof(rx_errors_));
  _internal_metadata_.Clear();
}

bool ODriveStreamParserStatistics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.nucleo.statistics.ODriveStreamParserStatistics)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 bytes_received = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bytes_received_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 messages_received = 2 [(.goldo.pb2_options.cpp_type) = UINT16];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &messages_received_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 rx_errors = 3 [(.goldo.pb2_options.cpp_type) = UINT16];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rx_errors_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.nucleo.statistics.ODriveStreamParserStatistics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.nucleo.statistics.ODriveStreamParserStatistics)
  return false;
#undef DO_
}

void ODriveStreamParserStatistics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.nucleo.statistics.ODriveStreamParserStatistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 bytes_received = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->bytes_received() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->bytes_received(), output);
  }

  // uint32 messages_received = 2 [(.goldo.pb2_options.cpp_type) = UINT16];
  if (this->messages_received() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->messages_received(), output);
  }

  // uint32 rx_errors = 3 [(.goldo.pb2_options.cpp_type) = UINT16];
  if (this->rx_errors() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->rx_errors(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.nucleo.statistics.ODriveStreamParserStatistics)
}

::google::protobuf::uint8* ODriveStreamParserStatistics::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.nucleo.statistics.ODriveStreamParserStatistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 bytes_received = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->bytes_received() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->bytes_received(), target);
  }

  // uint32 messages_received = 2 [(.goldo.pb2_options.cpp_type) = UINT16];
  if (this->messages_received() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->messages_received(), target);
  }

  // uint32 rx_errors = 3 [(.goldo.pb2_options.cpp_type) = UINT16];
  if (this->rx_errors() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->rx_errors(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.nucleo.statistics.ODriveStreamParserStatistics)
  return target;
}

size_t ODriveStreamParserStatistics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.nucleo.statistics.ODriveStreamParserStatistics)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 bytes_received = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->bytes_received() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bytes_received());
  }

  // uint32 messages_received = 2 [(.goldo.pb2_options.cpp_type) = UINT16];
  if (this->messages_received() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->messages_received());
  }

  // uint32 rx_errors = 3 [(.goldo.pb2_options.cpp_type) = UINT16];
  if (this->rx_errors() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rx_errors());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ODriveStreamParserStatistics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.nucleo.statistics.ODriveStreamParserStatistics)
  GOOGLE_DCHECK_NE(&from, this);
  const ODriveStreamParserStatistics* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ODriveStreamParserStatistics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.nucleo.statistics.ODriveStreamParserStatistics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.nucleo.statistics.ODriveStreamParserStatistics)
    MergeFrom(*source);
  }
}

void ODriveStreamParserStatistics::MergeFrom(const ODriveStreamParserStatistics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.nucleo.statistics.ODriveStreamParserStatistics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bytes_received() != 0) {
    set_bytes_received(from.bytes_received());
  }
  if (from.messages_received() != 0) {
    set_messages_received(from.messages_received());
  }
  if (from.rx_errors() != 0) {
    set_rx_errors(from.rx_errors());
  }
}

void ODriveStreamParserStatistics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.nucleo.statistics.ODriveStreamParserStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ODriveStreamParserStatistics::CopyFrom(const ODriveStreamParserStatistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.nucleo.statistics.ODriveStreamParserStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ODriveStreamParserStatistics::IsInitialized() const {
  return true;
}

void ODriveStreamParserStatistics::Swap(ODriveStreamParserStatistics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ODriveStreamParserStatistics::InternalSwap(ODriveStreamParserStatistics* other) {
  using std::swap;
  swap(bytes_received_, other->bytes_received_);
  swap(messages_received_, other->messages_received_);
  swap(rx_errors_, other->rx_errors_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ODriveStreamParserStatistics::GetMetadata() const {
  protobuf_goldo_2fnucleo_2fstatistics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2fstatistics_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ODriveStreamWriterStatistics::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ODriveStreamWriterStatistics::kBytesSentFieldNumber;
const int ODriveStreamWriterStatistics::kMessagesSentFieldNumber;
const int ODriveStreamWriterStatistics::kTxHighwaterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ODriveStreamWriterStatistics::ODriveStreamWriterStatistics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fnucleo_2fstatistics_2eproto::scc_info_ODriveStreamWriterStatistics.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.nucleo.statistics.ODriveStreamWriterStatistics)
}
ODriveStreamWriterStatistics::ODriveStreamWriterStatistics(const ODriveStreamWriterStatistics& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&bytes_sent_, &from.bytes_sent_,
    static_cast<size_t>(reinterpret_cast<char*>(&tx_highwater_) -
    reinterpret_cast<char*>(&bytes_sent_)) + sizeof(tx_highwater_));
  // @@protoc_insertion_point(copy_constructor:goldo.nucleo.statistics.ODriveStreamWriterStatistics)
}

void ODriveStreamWriterStatistics::SharedCtor() {
  ::memset(&bytes_sent_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tx_highwater_) -
      reinterpret_cast<char*>(&bytes_sent_)) + sizeof(tx_highwater_));
}

ODriveStreamWriterStatistics::~ODriveStreamWriterStatistics() {
  // @@protoc_insertion_point(destructor:goldo.nucleo.statistics.ODriveStreamWriterStatistics)
  SharedDtor();
}

void ODriveStreamWriterStatistics::SharedDtor() {
}

void ODriveStreamWriterStatistics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ODriveStreamWriterStatistics::descriptor() {
  ::protobuf_goldo_2fnucleo_2fstatistics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2fstatistics_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ODriveStreamWriterStatistics& ODriveStreamWriterStatistics::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fnucleo_2fstatistics_2eproto::scc_info_ODriveStreamWriterStatistics.base);
  return *internal_default_instance();
}


void ODriveStreamWriterStatistics::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.nucleo.statistics.ODriveStreamWriterStatistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&bytes_sent_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tx_highwater_) -
      reinterpret_cast<char*>(&bytes_sent_)) + sizeof(tx_highwater_));
  _internal_metadata_.Clear();
}

bool ODriveStreamWriterStatistics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.nucleo.statistics.ODriveStreamWriterStatistics)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 bytes_sent = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bytes_sent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 messages_sent = 2 [(.goldo.pb2_options.cpp_type) = UINT16];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &messages_sent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 tx_highwater = 3 [(.goldo.pb2_options.cpp_type) = UINT16];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tx_highwater_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.nucleo.statistics.ODriveStreamWriterStatistics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.nucleo.statistics.ODriveStreamWriterStatistics)
  return false;
#undef DO_
}

void ODriveStreamWriterStatistics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.nucleo.statistics.ODriveStreamWriterStatistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 bytes_sent = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->bytes_sent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->bytes_sent(), output);
  }

  // uint32 messages_sent = 2 [(.goldo.pb2_options.cpp_type) = UINT16];
  if (this->messages_sent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->messages_sent(), output);
  }

  // uint32 tx_highwater = 3 [(.goldo.pb2_options.cpp_type) = UINT16];
  if (this->tx_highwater() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->tx_highwater(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.nucleo.statistics.ODriveStreamWriterStatistics)
}

::google::protobuf::uint8* ODriveStreamWriterStatistics::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.nucleo.statistics.ODriveStreamWriterStatistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 bytes_sent = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->bytes_sent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->bytes_sent(), target);
  }

  // uint32 messages_sent = 2 [(.goldo.pb2_options.cpp_type) = UINT16];
  if (this->messages_sent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->messages_sent(), target);
  }

  // uint32 tx_highwater = 3 [(.goldo.pb2_options.cpp_type) = UINT16];
  if (this->tx_highwater() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->tx_highwater(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.nucleo.statistics.ODriveStreamWriterStatistics)
  return target;
}

size_t ODriveStreamWriterStatistics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.nucleo.statistics.ODriveStreamWriterStatistics)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 bytes_sent = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->bytes_sent() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bytes_sent());
  }

  // uint32 messages_sent = 2 [(.goldo.pb2_options.cpp_type) = UINT16];
  if (this->messages_sent() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->messages_sent());
  }

  // uint32 tx_highwater = 3 [(.goldo.pb2_options.cpp_type) = UINT16];
  if (this->tx_highwater() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tx_highwater());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ODriveStreamWriterStatistics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.nucleo.statistics.ODriveStreamWriterStatistics)
  GOOGLE_DCHECK_NE(&from, this);
  const ODriveStreamWriterStatistics* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ODriveStreamWriterStatistics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.nucleo.statistics.ODriveStreamWriterStatistics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.nucleo.statistics.ODriveStreamWriterStatistics)
    MergeFrom(*source);
  }
}

void ODriveStreamWriterStatistics::MergeFrom(const ODriveStreamWriterStatistics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.nucleo.statistics.ODriveStreamWriterStatistics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bytes_sent() != 0) {
    set_bytes_sent(from.bytes_sent());
  }
  if (from.messages_sent() != 0) {
    set_messages_sent(from.messages_sent());
  }
  if (from.tx_highwater() != 0) {
    set_tx_highwater(from.tx_highwater());
  }
}

void ODriveStreamWriterStatistics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.nucleo.statistics.ODriveStreamWriterStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ODriveStreamWriterStatistics::CopyFrom(const ODriveStreamWriterStatistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.nucleo.statistics.ODriveStreamWriterStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ODriveStreamWriterStatistics::IsInitialized() const {
  return true;
}

void ODriveStreamWriterStatistics::Swap(ODriveStreamWriterStatistics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ODriveStreamWriterStatistics::InternalSwap(ODriveStreamWriterStatistics* other) {
  using std::swap;
  swap(bytes_sent_, other->bytes_sent_);
  swap(messages_sent_, other->messages_sent_);
  swap(tx_highwater_, other->tx_highwater_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ODriveStreamWriterStatistics::GetMetadata() const {
  protobuf_goldo_2fnucleo_2fstatistics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2fstatistics_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UARTCommTaskStatistics::InitAsDefaultInstance() {
  ::goldo::nucleo::statistics::_UARTCommTaskStatistics_default_instance_._instance.get_mutable()->serializer_ = const_cast< ::goldo::nucleo::statistics::CommSerializerStatistics*>(
      ::goldo::nucleo::statistics::CommSerializerStatistics::internal_default_instance());
  ::goldo::nucleo::statistics::_UARTCommTaskStatistics_default_instance_._instance.get_mutable()->deserializer_ = const_cast< ::goldo::nucleo::statistics::CommDeserializerStatistics*>(
      ::goldo::nucleo::statistics::CommDeserializerStatistics::internal_default_instance());
  ::goldo::nucleo::statistics::_UARTCommTaskStatistics_default_instance_._instance.get_mutable()->serializer_ftdi_ = const_cast< ::goldo::nucleo::statistics::CommSerializerStatistics*>(
      ::goldo::nucleo::statistics::CommSerializerStatistics::internal_default_instance());
  ::goldo::nucleo::statistics::_UARTCommTaskStatistics_default_instance_._instance.get_mutable()->deserializer_fdti_ = const_cast< ::goldo::nucleo::statistics::CommDeserializerStatistics*>(
      ::goldo::nucleo::statistics::CommDeserializerStatistics::internal_default_instance());
  ::goldo::nucleo::statistics::_UARTCommTaskStatistics_default_instance_._instance.get_mutable()->queue_out_ = const_cast< ::goldo::nucleo::statistics::MessageQueueStatistics*>(
      ::goldo::nucleo::statistics::MessageQueueStatistics::internal_default_instance());
  ::goldo::nucleo::statistics::_UARTCommTaskStatistics_default_instance_._instance.get_mutable()->queue_out_prio_ = const_cast< ::goldo::nucleo::statistics::MessageQueueStatistics*>(
      ::goldo::nucleo::statistics::MessageQueueStatistics::internal_default_instance());
  ::goldo::nucleo::statistics::_UARTCommTaskStatistics_default_instance_._instance.get_mutable()->queue_out_ftdi_ = const_cast< ::goldo::nucleo::statistics::MessageQueueStatistics*>(
      ::goldo::nucleo::statistics::MessageQueueStatistics::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UARTCommTaskStatistics::kMaxCyclesFieldNumber;
const int UARTCommTaskStatistics::kSerializerFieldNumber;
const int UARTCommTaskStatistics::kDeserializerFieldNumber;
const int UARTCommTaskStatistics::kSerializerFtdiFieldNumber;
const int UARTCommTaskStatistics::kDeserializerFdtiFieldNumber;
const int UARTCommTaskStatistics::kQueueOutFieldNumber;
const int UARTCommTaskStatistics::kQueueOutPrioFieldNumber;
const int UARTCommTaskStatistics::kQueueOutFtdiFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UARTCommTaskStatistics::UARTCommTaskStatistics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fnucleo_2fstatistics_2eproto::scc_info_UARTCommTaskStatistics.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.nucleo.statistics.UARTCommTaskStatistics)
}
UARTCommTaskStatistics::UARTCommTaskStatistics(const UARTCommTaskStatistics& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_serializer()) {
    serializer_ = new ::goldo::nucleo::statistics::CommSerializerStatistics(*from.serializer_);
  } else {
    serializer_ = NULL;
  }
  if (from.has_deserializer()) {
    deserializer_ = new ::goldo::nucleo::statistics::CommDeserializerStatistics(*from.deserializer_);
  } else {
    deserializer_ = NULL;
  }
  if (from.has_serializer_ftdi()) {
    serializer_ftdi_ = new ::goldo::nucleo::statistics::CommSerializerStatistics(*from.serializer_ftdi_);
  } else {
    serializer_ftdi_ = NULL;
  }
  if (from.has_deserializer_fdti()) {
    deserializer_fdti_ = new ::goldo::nucleo::statistics::CommDeserializerStatistics(*from.deserializer_fdti_);
  } else {
    deserializer_fdti_ = NULL;
  }
  if (from.has_queue_out()) {
    queue_out_ = new ::goldo::nucleo::statistics::MessageQueueStatistics(*from.queue_out_);
  } else {
    queue_out_ = NULL;
  }
  if (from.has_queue_out_prio()) {
    queue_out_prio_ = new ::goldo::nucleo::statistics::MessageQueueStatistics(*from.queue_out_prio_);
  } else {
    queue_out_prio_ = NULL;
  }
  if (from.has_queue_out_ftdi()) {
    queue_out_ftdi_ = new ::goldo::nucleo::statistics::MessageQueueStatistics(*from.queue_out_ftdi_);
  } else {
    queue_out_ftdi_ = NULL;
  }
  max_cycles_ = from.max_cycles_;
  // @@protoc_insertion_point(copy_constructor:goldo.nucleo.statistics.UARTCommTaskStatistics)
}

void UARTCommTaskStatistics::SharedCtor() {
  ::memset(&serializer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_cycles_) -
      reinterpret_cast<char*>(&serializer_)) + sizeof(max_cycles_));
}

UARTCommTaskStatistics::~UARTCommTaskStatistics() {
  // @@protoc_insertion_point(destructor:goldo.nucleo.statistics.UARTCommTaskStatistics)
  SharedDtor();
}

void UARTCommTaskStatistics::SharedDtor() {
  if (this != internal_default_instance()) delete serializer_;
  if (this != internal_default_instance()) delete deserializer_;
  if (this != internal_default_instance()) delete serializer_ftdi_;
  if (this != internal_default_instance()) delete deserializer_fdti_;
  if (this != internal_default_instance()) delete queue_out_;
  if (this != internal_default_instance()) delete queue_out_prio_;
  if (this != internal_default_instance()) delete queue_out_ftdi_;
}

void UARTCommTaskStatistics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UARTCommTaskStatistics::descriptor() {
  ::protobuf_goldo_2fnucleo_2fstatistics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2fstatistics_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UARTCommTaskStatistics& UARTCommTaskStatistics::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fnucleo_2fstatistics_2eproto::scc_info_UARTCommTaskStatistics.base);
  return *internal_default_instance();
}


void UARTCommTaskStatistics::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.nucleo.statistics.UARTCommTaskStatistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && serializer_ != NULL) {
    delete serializer_;
  }
  serializer_ = NULL;
  if (GetArenaNoVirtual() == NULL && deserializer_ != NULL) {
    delete deserializer_;
  }
  deserializer_ = NULL;
  if (GetArenaNoVirtual() == NULL && serializer_ftdi_ != NULL) {
    delete serializer_ftdi_;
  }
  serializer_ftdi_ = NULL;
  if (GetArenaNoVirtual() == NULL && deserializer_fdti_ != NULL) {
    delete deserializer_fdti_;
  }
  deserializer_fdti_ = NULL;
  if (GetArenaNoVirtual() == NULL && queue_out_ != NULL) {
    delete queue_out_;
  }
  queue_out_ = NULL;
  if (GetArenaNoVirtual() == NULL && queue_out_prio_ != NULL) {
    delete queue_out_prio_;
  }
  queue_out_prio_ = NULL;
  if (GetArenaNoVirtual() == NULL && queue_out_ftdi_ != NULL) {
    delete queue_out_ftdi_;
  }
  queue_out_ftdi_ = NULL;
  max_cycles_ = 0u;
  _internal_metadata_.Clear();
}

bool UARTCommTaskStatistics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.nucleo.statistics.UARTCommTaskStatistics)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 max_cycles = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_cycles_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .goldo.nucleo.statistics.CommSerializerStatistics serializer = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_serializer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .goldo.nucleo.statistics.CommDeserializerStatistics deserializer = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_deserializer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .goldo.nucleo.statistics.CommSerializerStatistics serializer_ftdi = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_serializer_ftdi()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .goldo.nucleo.statistics.CommDeserializerStatistics deserializer_fdti = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_deserializer_fdti()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .goldo.nucleo.statistics.MessageQueueStatistics queue_out = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_queue_out()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .goldo.nucleo.statistics.MessageQueueStatistics queue_out_prio = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_queue_out_prio()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .goldo.nucleo.statistics.MessageQueueStatistics queue_out_ftdi = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_queue_out_ftdi()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.nucleo.statistics.UARTCommTaskStatistics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.nucleo.statistics.UARTCommTaskStatistics)
  return false;
#undef DO_
}

void UARTCommTaskStatistics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.nucleo.statistics.UARTCommTaskStatistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 max_cycles = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->max_cycles() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->max_cycles(), output);
  }

  // .goldo.nucleo.statistics.CommSerializerStatistics serializer = 2;
  if (this->has_serializer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_serializer(), output);
  }

  // .goldo.nucleo.statistics.CommDeserializerStatistics deserializer = 3;
  if (this->has_deserializer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_deserializer(), output);
  }

  // .goldo.nucleo.statistics.CommSerializerStatistics serializer_ftdi = 4;
  if (this->has_serializer_ftdi()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_serializer_ftdi(), output);
  }

  // .goldo.nucleo.statistics.CommDeserializerStatistics deserializer_fdti = 5;
  if (this->has_deserializer_fdti()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_deserializer_fdti(), output);
  }

  // .goldo.nucleo.statistics.MessageQueueStatistics queue_out = 6;
  if (this->has_queue_out()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_queue_out(), output);
  }

  // .goldo.nucleo.statistics.MessageQueueStatistics queue_out_prio = 7;
  if (this->has_queue_out_prio()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_queue_out_prio(), output);
  }

  // .goldo.nucleo.statistics.MessageQueueStatistics queue_out_ftdi = 8;
  if (this->has_queue_out_ftdi()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_queue_out_ftdi(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.nucleo.statistics.UARTCommTaskStatistics)
}

::google::protobuf::uint8* UARTCommTaskStatistics::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.nucleo.statistics.UARTCommTaskStatistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 max_cycles = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->max_cycles() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->max_cycles(), target);
  }

  // .goldo.nucleo.statistics.CommSerializerStatistics serializer = 2;
  if (this->has_serializer()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_serializer(), deterministic, target);
  }

  // .goldo.nucleo.statistics.CommDeserializerStatistics deserializer = 3;
  if (this->has_deserializer()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_deserializer(), deterministic, target);
  }

  // .goldo.nucleo.statistics.CommSerializerStatistics serializer_ftdi = 4;
  if (this->has_serializer_ftdi()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_serializer_ftdi(), deterministic, target);
  }

  // .goldo.nucleo.statistics.CommDeserializerStatistics deserializer_fdti = 5;
  if (this->has_deserializer_fdti()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_deserializer_fdti(), deterministic, target);
  }

  // .goldo.nucleo.statistics.MessageQueueStatistics queue_out = 6;
  if (this->has_queue_out()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_queue_out(), deterministic, target);
  }

  // .goldo.nucleo.statistics.MessageQueueStatistics queue_out_prio = 7;
  if (this->has_queue_out_prio()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_queue_out_prio(), deterministic, target);
  }

  // .goldo.nucleo.statistics.MessageQueueStatistics queue_out_ftdi = 8;
  if (this->has_queue_out_ftdi()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_queue_out_ftdi(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.nucleo.statistics.UARTCommTaskStatistics)
  return target;
}

size_t UARTCommTaskStatistics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.nucleo.statistics.UARTCommTaskStatistics)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .goldo.nucleo.statistics.CommSerializerStatistics serializer = 2;
  if (this->has_serializer()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *serializer_);
  }

  // .goldo.nucleo.statistics.CommDeserializerStatistics deserializer = 3;
  if (this->has_deserializer()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *deserializer_);
  }

  // .goldo.nucleo.statistics.CommSerializerStatistics serializer_ftdi = 4;
  if (this->has_serializer_ftdi()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *serializer_ftdi_);
  }

  // .goldo.nucleo.statistics.CommDeserializerStatistics deserializer_fdti = 5;
  if (this->has_deserializer_fdti()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *deserializer_fdti_);
  }

  // .goldo.nucleo.statistics.MessageQueueStatistics queue_out = 6;
  if (this->has_queue_out()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *queue_out_);
  }

  // .goldo.nucleo.statistics.MessageQueueStatistics queue_out_prio = 7;
  if (this->has_queue_out_prio()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *queue_out_prio_);
  }

  // .goldo.nucleo.statistics.MessageQueueStatistics queue_out_ftdi = 8;
  if (this->has_queue_out_ftdi()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *queue_out_ftdi_);
  }

  // uint32 max_cycles = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->max_cycles() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->max_cycles());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UARTCommTaskStatistics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.nucleo.statistics.UARTCommTaskStatistics)
  GOOGLE_DCHECK_NE(&from, this);
  const UARTCommTaskStatistics* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UARTCommTaskStatistics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.nucleo.statistics.UARTCommTaskStatistics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.nucleo.statistics.UARTCommTaskStatistics)
    MergeFrom(*source);
  }
}

void UARTCommTaskStatistics::MergeFrom(const UARTCommTaskStatistics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.nucleo.statistics.UARTCommTaskStatistics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_serializer()) {
    mutable_serializer()->::goldo::nucleo::statistics::CommSerializerStatistics::MergeFrom(from.serializer());
  }
  if (from.has_deserializer()) {
    mutable_deserializer()->::goldo::nucleo::statistics::CommDeserializerStatistics::MergeFrom(from.deserializer());
  }
  if (from.has_serializer_ftdi()) {
    mutable_serializer_ftdi()->::goldo::nucleo::statistics::CommSerializerStatistics::MergeFrom(from.serializer_ftdi());
  }
  if (from.has_deserializer_fdti()) {
    mutable_deserializer_fdti()->::goldo::nucleo::statistics::CommDeserializerStatistics::MergeFrom(from.deserializer_fdti());
  }
  if (from.has_queue_out()) {
    mutable_queue_out()->::goldo::nucleo::statistics::MessageQueueStatistics::MergeFrom(from.queue_out());
  }
  if (from.has_queue_out_prio()) {
    mutable_queue_out_prio()->::goldo::nucleo::statistics::MessageQueueStatistics::MergeFrom(from.queue_out_prio());
  }
  if (from.has_queue_out_ftdi()) {
    mutable_queue_out_ftdi()->::goldo::nucleo::statistics::MessageQueueStatistics::MergeFrom(from.queue_out_ftdi());
  }
  if (from.max_cycles() != 0) {
    set_max_cycles(from.max_cycles());
  }
}

void UARTCommTaskStatistics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.nucleo.statistics.UARTCommTaskStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UARTCommTaskStatistics::CopyFrom(const UARTCommTaskStatistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.nucleo.statistics.UARTCommTaskStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UARTCommTaskStatistics::IsInitialized() const {
  return true;
}

void UARTCommTaskStatistics::Swap(UARTCommTaskStatistics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UARTCommTaskStatistics::InternalSwap(UARTCommTaskStatistics* other) {
  using std::swap;
  swap(serializer_, other->serializer_);
  swap(deserializer_, other->deserializer_);
  swap(serializer_ftdi_, other->serializer_ftdi_);
  swap(deserializer_fdti_, other->deserializer_fdti_);
  swap(queue_out_, other->queue_out_);
  swap(queue_out_prio_, other->queue_out_prio_);
  swap(queue_out_ftdi_, other->queue_out_ftdi_);
  swap(max_cycles_, other->max_cycles_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UARTCommTaskStatistics::GetMetadata() const {
  protobuf_goldo_2fnucleo_2fstatistics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2fstatistics_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ODriveCommTaskStatistics::InitAsDefaultInstance() {
  ::goldo::nucleo::statistics::_ODriveCommTaskStatistics_default_instance_._instance.get_mutable()->parser_ = const_cast< ::goldo::nucleo::statistics::ODriveStreamParserStatistics*>(
      ::goldo::nucleo::statistics::ODriveStreamParserStatistics::internal_default_instance());
  ::goldo::nucleo::statistics::_ODriveCommTaskStatistics_default_instance_._instance.get_mutable()->writer_ = const_cast< ::goldo::nucleo::statistics::ODriveStreamWriterStatistics*>(
      ::goldo::nucleo::statistics::ODriveStreamWriterStatistics::internal_default_instance());
  ::goldo::nucleo::statistics::_ODriveCommTaskStatistics_default_instance_._instance.get_mutable()->queue_ = const_cast< ::goldo::nucleo::statistics::MessageQueueStatistics*>(
      ::goldo::nucleo::statistics::MessageQueueStatistics::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ODriveCommTaskStatistics::kParserFieldNumber;
const int ODriveCommTaskStatistics::kWriterFieldNumber;
const int ODriveCommTaskStatistics::kQueueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ODriveCommTaskStatistics::ODriveCommTaskStatistics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fnucleo_2fstatistics_2eproto::scc_info_ODriveCommTaskStatistics.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.nucleo.statistics.ODriveCommTaskStatistics)
}
ODriveCommTaskStatistics::ODriveCommTaskStatistics(const ODriveCommTaskStatistics& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_parser()) {
    parser_ = new ::goldo::nucleo::statistics::ODriveStreamParserStatistics(*from.parser_);
  } else {
    parser_ = NULL;
  }
  if (from.has_writer()) {
    writer_ = new ::goldo::nucleo::statistics::ODriveStreamWriterStatistics(*from.writer_);
  } else {
    writer_ = NULL;
  }
  if (from.has_queue()) {
    queue_ = new ::goldo::nucleo::statistics::MessageQueueStatistics(*from.queue_);
  } else {
    queue_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:goldo.nucleo.statistics.ODriveCommTaskStatistics)
}

void ODriveCommTaskStatistics::SharedCtor() {
  ::memset(&parser_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&queue_) -
      reinterpret_cast<char*>(&parser_)) + sizeof(queue_));
}

ODriveCommTaskStatistics::~ODriveCommTaskStatistics() {
  // @@protoc_insertion_point(destructor:goldo.nucleo.statistics.ODriveCommTaskStatistics)
  SharedDtor();
}

void ODriveCommTaskStatistics::SharedDtor() {
  if (this != internal_default_instance()) delete parser_;
  if (this != internal_default_instance()) delete writer_;
  if (this != internal_default_instance()) delete queue_;
}

void ODriveCommTaskStatistics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ODriveCommTaskStatistics::descriptor() {
  ::protobuf_goldo_2fnucleo_2fstatistics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2fstatistics_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ODriveCommTaskStatistics& ODriveCommTaskStatistics::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fnucleo_2fstatistics_2eproto::scc_info_ODriveCommTaskStatistics.base);
  return *internal_default_instance();
}


void ODriveCommTaskStatistics::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.nucleo.statistics.ODriveCommTaskStatistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && parser_ != NULL) {
    delete parser_;
  }
  parser_ = NULL;
  if (GetArenaNoVirtual() == NULL && writer_ != NULL) {
    delete writer_;
  }
  writer_ = NULL;
  if (GetArenaNoVirtual() == NULL && queue_ != NULL) {
    delete queue_;
  }
  queue_ = NULL;
  _internal_metadata_.Clear();
}

bool ODriveCommTaskStatistics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.nucleo.statistics.ODriveCommTaskStatistics)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .goldo.nucleo.statistics.ODriveStreamParserStatistics parser = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_parser()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .goldo.nucleo.statistics.ODriveStreamWriterStatistics writer = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_writer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .goldo.nucleo.statistics.MessageQueueStatistics queue = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_queue()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.nucleo.statistics.ODriveCommTaskStatistics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.nucleo.statistics.ODriveCommTaskStatistics)
  return false;
#undef DO_
}

void ODriveCommTaskStatistics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.nucleo.statistics.ODriveCommTaskStatistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .goldo.nucleo.statistics.ODriveStreamParserStatistics parser = 2;
  if (this->has_parser()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_parser(), output);
  }

  // .goldo.nucleo.statistics.ODriveStreamWriterStatistics writer = 3;
  if (this->has_writer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_writer(), output);
  }

  // .goldo.nucleo.statistics.MessageQueueStatistics queue = 4;
  if (this->has_queue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_queue(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.nucleo.statistics.ODriveCommTaskStatistics)
}

::google::protobuf::uint8* ODriveCommTaskStatistics::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.nucleo.statistics.ODriveCommTaskStatistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .goldo.nucleo.statistics.ODriveStreamParserStatistics parser = 2;
  if (this->has_parser()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_parser(), deterministic, target);
  }

  // .goldo.nucleo.statistics.ODriveStreamWriterStatistics writer = 3;
  if (this->has_writer()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_writer(), deterministic, target);
  }

  // .goldo.nucleo.statistics.MessageQueueStatistics queue = 4;
  if (this->has_queue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_queue(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.nucleo.statistics.ODriveCommTaskStatistics)
  return target;
}

size_t ODriveCommTaskStatistics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.nucleo.statistics.ODriveCommTaskStatistics)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .goldo.nucleo.statistics.ODriveStreamParserStatistics parser = 2;
  if (this->has_parser()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *parser_);
  }

  // .goldo.nucleo.statistics.ODriveStreamWriterStatistics writer = 3;
  if (this->has_writer()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *writer_);
  }

  // .goldo.nucleo.statistics.MessageQueueStatistics queue = 4;
  if (this->has_queue()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *queue_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ODriveCommTaskStatistics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.nucleo.statistics.ODriveCommTaskStatistics)
  GOOGLE_DCHECK_NE(&from, this);
  const ODriveCommTaskStatistics* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ODriveCommTaskStatistics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.nucleo.statistics.ODriveCommTaskStatistics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.nucleo.statistics.ODriveCommTaskStatistics)
    MergeFrom(*source);
  }
}

void ODriveCommTaskStatistics::MergeFrom(const ODriveCommTaskStatistics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.nucleo.statistics.ODriveCommTaskStatistics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_parser()) {
    mutable_parser()->::goldo::nucleo::statistics::ODriveStreamParserStatistics::MergeFrom(from.parser());
  }
  if (from.has_writer()) {
    mutable_writer()->::goldo::nucleo::statistics::ODriveStreamWriterStatistics::MergeFrom(from.writer());
  }
  if (from.has_queue()) {
    mutable_queue()->::goldo::nucleo::statistics::MessageQueueStatistics::MergeFrom(from.queue());
  }
}

void ODriveCommTaskStatistics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.nucleo.statistics.ODriveCommTaskStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ODriveCommTaskStatistics::CopyFrom(const ODriveCommTaskStatistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.nucleo.statistics.ODriveCommTaskStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ODriveCommTaskStatistics::IsInitialized() const {
  return true;
}

void ODriveCommTaskStatistics::Swap(ODriveCommTaskStatistics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ODriveCommTaskStatistics::InternalSwap(ODriveCommTaskStatistics* other) {
  using std::swap;
  swap(parser_, other->parser_);
  swap(writer_, other->writer_);
  swap(queue_, other->queue_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ODriveCommTaskStatistics::GetMetadata() const {
  protobuf_goldo_2fnucleo_2fstatistics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2fstatistics_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PropulsionTaskStatistics::InitAsDefaultInstance() {
  ::goldo::nucleo::statistics::_PropulsionTaskStatistics_default_instance_._instance.get_mutable()->queue_ = const_cast< ::goldo::nucleo::statistics::MessageQueueStatistics*>(
      ::goldo::nucleo::statistics::MessageQueueStatistics::internal_default_instance());
  ::goldo::nucleo::statistics::_PropulsionTaskStatistics_default_instance_._instance.get_mutable()->urgent_queue_ = const_cast< ::goldo::nucleo::statistics::MessageQueueStatistics*>(
      ::goldo::nucleo::statistics::MessageQueueStatistics::internal_default_instance());
  ::goldo::nucleo::statistics::_PropulsionTaskStatistics_default_instance_._instance.get_mutable()->odrive_queue_ = const_cast< ::goldo::nucleo::statistics::MessageQueueStatistics*>(
      ::goldo::nucleo::statistics::MessageQueueStatistics::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PropulsionTaskStatistics::kMaxCyclesFieldNumber;
const int PropulsionTaskStatistics::kMinIntervalFieldNumber;
const int PropulsionTaskStatistics::kMaxIntervalFieldNumber;
const int PropulsionTaskStatistics::kQueueFieldNumber;
const int PropulsionTaskStatistics::kUrgentQueueFieldNumber;
const int PropulsionTaskStatistics::kOdriveQueueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PropulsionTaskStatistics::PropulsionTaskStatistics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fnucleo_2fstatistics_2eproto::scc_info_PropulsionTaskStatistics.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.nucleo.statistics.PropulsionTaskStatistics)
}
PropulsionTaskStatistics::PropulsionTaskStatistics(const PropulsionTaskStatistics& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_queue()) {
    queue_ = new ::goldo::nucleo::statistics::MessageQueueStatistics(*from.queue_);
  } else {
    queue_ = NULL;
  }
  if (from.has_urgent_queue()) {
    urgent_queue_ = new ::goldo::nucleo::statistics::MessageQueueStatistics(*from.urgent_queue_);
  } else {
    urgent_queue_ = NULL;
  }
  if (from.has_odrive_queue()) {
    odrive_queue_ = new ::goldo::nucleo::statistics::MessageQueueStatistics(*from.odrive_queue_);
  } else {
    odrive_queue_ = NULL;
  }
  ::memcpy(&max_cycles_, &from.max_cycles_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_interval_) -
    reinterpret_cast<char*>(&max_cycles_)) + sizeof(max_interval_));
  // @@protoc_insertion_point(copy_constructor:goldo.nucleo.statistics.PropulsionTaskStatistics)
}

void PropulsionTaskStatistics::SharedCtor() {
  ::memset(&queue_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_interval_) -
      reinterpret_cast<char*>(&queue_)) + sizeof(max_interval_));
}

PropulsionTaskStatistics::~PropulsionTaskStatistics() {
  // @@protoc_insertion_point(destructor:goldo.nucleo.statistics.PropulsionTaskStatistics)
  SharedDtor();
}

void PropulsionTaskStatistics::SharedDtor() {
  if (this != internal_default_instance()) delete queue_;
  if (this != internal_default_instance()) delete urgent_queue_;
  if (this != internal_default_instance()) delete odrive_queue_;
}

void PropulsionTaskStatistics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PropulsionTaskStatistics::descriptor() {
  ::protobuf_goldo_2fnucleo_2fstatistics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2fstatistics_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PropulsionTaskStatistics& PropulsionTaskStatistics::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fnucleo_2fstatistics_2eproto::scc_info_PropulsionTaskStatistics.base);
  return *internal_default_instance();
}


void PropulsionTaskStatistics::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.nucleo.statistics.PropulsionTaskStatistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && queue_ != NULL) {
    delete queue_;
  }
  queue_ = NULL;
  if (GetArenaNoVirtual() == NULL && urgent_queue_ != NULL) {
    delete urgent_queue_;
  }
  urgent_queue_ = NULL;
  if (GetArenaNoVirtual() == NULL && odrive_queue_ != NULL) {
    delete odrive_queue_;
  }
  odrive_queue_ = NULL;
  ::memset(&max_cycles_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_interval_) -
      reinterpret_cast<char*>(&max_cycles_)) + sizeof(max_interval_));
  _internal_metadata_.Clear();
}

bool PropulsionTaskStatistics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.nucleo.statistics.PropulsionTaskStatistics)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 max_cycles = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_cycles_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .goldo.nucleo.statistics.MessageQueueStatistics queue = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_queue()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .goldo.nucleo.statistics.MessageQueueStatistics urgent_queue = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_urgent_queue()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .goldo.nucleo.statistics.MessageQueueStatistics odrive_queue = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_odrive_queue()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 min_interval = 5 [(.goldo.pb2_options.cpp_type) = UINT32];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &min_interval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 max_interval = 6 [(.goldo.pb2_options.cpp_type) = UINT32];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_interval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.nucleo.statistics.PropulsionTaskStatistics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.nucleo.statistics.PropulsionTaskStatistics)
  return false;
#undef DO_
}

void PropulsionTaskStatistics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.nucleo.statistics.PropulsionTaskStatistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 max_cycles = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->max_cycles() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->max_cycles(), output);
  }

  // .goldo.nucleo.statistics.MessageQueueStatistics queue = 2;
  if (this->has_queue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_queue(), output);
  }

  // .goldo.nucleo.statistics.MessageQueueStatistics urgent_queue = 3;
  if (this->has_urgent_queue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_urgent_queue(), output);
  }

  // .goldo.nucleo.statistics.MessageQueueStatistics odrive_queue = 4;
  if (this->has_odrive_queue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_odrive_queue(), output);
  }

  // uint32 min_interval = 5 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->min_interval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->min_interval(), output);
  }

  // uint32 max_interval = 6 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->max_interval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->max_interval(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.nucleo.statistics.PropulsionTaskStatistics)
}

::google::protobuf::uint8* PropulsionTaskStatistics::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.nucleo.statistics.PropulsionTaskStatistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 max_cycles = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->max_cycles() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->max_cycles(), target);
  }

  // .goldo.nucleo.statistics.MessageQueueStatistics queue = 2;
  if (this->has_queue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_queue(), deterministic, target);
  }

  // .goldo.nucleo.statistics.MessageQueueStatistics urgent_queue = 3;
  if (this->has_urgent_queue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_urgent_queue(), deterministic, target);
  }

  // .goldo.nucleo.statistics.MessageQueueStatistics odrive_queue = 4;
  if (this->has_odrive_queue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_odrive_queue(), deterministic, target);
  }

  // uint32 min_interval = 5 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->min_interval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->min_interval(), target);
  }

  // uint32 max_interval = 6 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->max_interval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->max_interval(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.nucleo.statistics.PropulsionTaskStatistics)
  return target;
}

size_t PropulsionTaskStatistics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.nucleo.statistics.PropulsionTaskStatistics)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .goldo.nucleo.statistics.MessageQueueStatistics queue = 2;
  if (this->has_queue()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *queue_);
  }

  // .goldo.nucleo.statistics.MessageQueueStatistics urgent_queue = 3;
  if (this->has_urgent_queue()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *urgent_queue_);
  }

  // .goldo.nucleo.statistics.MessageQueueStatistics odrive_queue = 4;
  if (this->has_odrive_queue()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *odrive_queue_);
  }

  // uint32 max_cycles = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->max_cycles() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->max_cycles());
  }

  // uint32 min_interval = 5 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->min_interval() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->min_interval());
  }

  // uint32 max_interval = 6 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->max_interval() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->max_interval());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PropulsionTaskStatistics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.nucleo.statistics.PropulsionTaskStatistics)
  GOOGLE_DCHECK_NE(&from, this);
  const PropulsionTaskStatistics* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PropulsionTaskStatistics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.nucleo.statistics.PropulsionTaskStatistics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.nucleo.statistics.PropulsionTaskStatistics)
    MergeFrom(*source);
  }
}

void PropulsionTaskStatistics::MergeFrom(const PropulsionTaskStatistics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.nucleo.statistics.PropulsionTaskStatistics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_queue()) {
    mutable_queue()->::goldo::nucleo::statistics::MessageQueueStatistics::MergeFrom(from.queue());
  }
  if (from.has_urgent_queue()) {
    mutable_urgent_queue()->::goldo::nucleo::statistics::MessageQueueStatistics::MergeFrom(from.urgent_queue());
  }
  if (from.has_odrive_queue()) {
    mutable_odrive_queue()->::goldo::nucleo::statistics::MessageQueueStatistics::MergeFrom(from.odrive_queue());
  }
  if (from.max_cycles() != 0) {
    set_max_cycles(from.max_cycles());
  }
  if (from.min_interval() != 0) {
    set_min_interval(from.min_interval());
  }
  if (from.max_interval() != 0) {
    set_max_interval(from.max_interval());
  }
}

void PropulsionTaskStatistics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.nucleo.statistics.PropulsionTaskStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PropulsionTaskStatistics::CopyFrom(const PropulsionTaskStatistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.nucleo.statistics.PropulsionTaskStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PropulsionTaskStatistics::IsInitialized() const {
  return true;
}

void PropulsionTaskStatistics::Swap(PropulsionTaskStatistics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PropulsionTaskStatistics::InternalSwap(PropulsionTaskStatistics* other) {
  using std::swap;
  swap(queue_, other->queue_);
  swap(urgent_queue_, other->urgent_queue_);
  swap(odrive_queue_, other->odrive_queue_);
  swap(max_cycles_, other->max_cycles_);
  swap(min_interval_, other->min_interval_);
  swap(max_interval_, other->max_interval_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PropulsionTaskStatistics::GetMetadata() const {
  protobuf_goldo_2fnucleo_2fstatistics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2fstatistics_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace statistics
}  // namespace nucleo
}  // namespace goldo
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::nucleo::statistics::MessageQueueStatistics* Arena::CreateMaybeMessage< ::goldo::nucleo::statistics::MessageQueueStatistics >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::nucleo::statistics::MessageQueueStatistics >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::nucleo::statistics::CommSerializerStatistics* Arena::CreateMaybeMessage< ::goldo::nucleo::statistics::CommSerializerStatistics >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::nucleo::statistics::CommSerializerStatistics >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::nucleo::statistics::CommDeserializerStatistics* Arena::CreateMaybeMessage< ::goldo::nucleo::statistics::CommDeserializerStatistics >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::nucleo::statistics::CommDeserializerStatistics >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::nucleo::statistics::ODriveStreamParserStatistics* Arena::CreateMaybeMessage< ::goldo::nucleo::statistics::ODriveStreamParserStatistics >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::nucleo::statistics::ODriveStreamParserStatistics >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::nucleo::statistics::ODriveStreamWriterStatistics* Arena::CreateMaybeMessage< ::goldo::nucleo::statistics::ODriveStreamWriterStatistics >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::nucleo::statistics::ODriveStreamWriterStatistics >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::nucleo::statistics::UARTCommTaskStatistics* Arena::CreateMaybeMessage< ::goldo::nucleo::statistics::UARTCommTaskStatistics >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::nucleo::statistics::UARTCommTaskStatistics >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::nucleo::statistics::ODriveCommTaskStatistics* Arena::CreateMaybeMessage< ::goldo::nucleo::statistics::ODriveCommTaskStatistics >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::nucleo::statistics::ODriveCommTaskStatistics >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::nucleo::statistics::PropulsionTaskStatistics* Arena::CreateMaybeMessage< ::goldo::nucleo::statistics::PropulsionTaskStatistics >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::nucleo::statistics::PropulsionTaskStatistics >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
