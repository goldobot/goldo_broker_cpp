// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: goldo/nucleo/odrive.proto

#include "goldo/nucleo/odrive.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_goldo_2fnucleo_2fodrive_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_goldo_2fnucleo_2fodrive_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AxisErrorState;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_goldo_2fnucleo_2fodrive_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AxisState_;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_goldo_2fnucleo_2fodrive_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AxisTelemetry;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_goldo_2fnucleo_2fodrive_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ClientStatistics;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_goldo_2fnucleo_2fodrive_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_AxisStatus;
}  // namespace protobuf_goldo_2fnucleo_2fodrive_2eproto
namespace goldo {
namespace nucleo {
namespace odrive {
class RequestPacketDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RequestPacket>
      _instance;
} _RequestPacket_default_instance_;
class ResponsePacketDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResponsePacket>
      _instance;
} _ResponsePacket_default_instance_;
class AxisTelemetryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AxisTelemetry>
      _instance;
} _AxisTelemetry_default_instance_;
class AxisErrorStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AxisErrorState>
      _instance;
} _AxisErrorState_default_instance_;
class AxisState_DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AxisState_>
      _instance;
} _AxisState__default_instance_;
class AxisErrorStatesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AxisErrorStates>
      _instance;
} _AxisErrorStates_default_instance_;
class AxisStatesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AxisStates>
      _instance;
} _AxisStates_default_instance_;
class ClientStatisticsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientStatistics>
      _instance;
} _ClientStatistics_default_instance_;
class AxisStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AxisStatus>
      _instance;
} _AxisStatus_default_instance_;
class TelemetryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Telemetry>
      _instance;
} _Telemetry_default_instance_;
class ODriveStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ODriveStatus>
      _instance;
} _ODriveStatus_default_instance_;
}  // namespace odrive
}  // namespace nucleo
}  // namespace goldo
namespace protobuf_goldo_2fnucleo_2fodrive_2eproto {
static void InitDefaultsRequestPacket() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::nucleo::odrive::_RequestPacket_default_instance_;
    new (ptr) ::goldo::nucleo::odrive::RequestPacket();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::nucleo::odrive::RequestPacket::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RequestPacket =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRequestPacket}, {}};

static void InitDefaultsResponsePacket() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::nucleo::odrive::_ResponsePacket_default_instance_;
    new (ptr) ::goldo::nucleo::odrive::ResponsePacket();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::nucleo::odrive::ResponsePacket::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ResponsePacket =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResponsePacket}, {}};

static void InitDefaultsAxisTelemetry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::nucleo::odrive::_AxisTelemetry_default_instance_;
    new (ptr) ::goldo::nucleo::odrive::AxisTelemetry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::nucleo::odrive::AxisTelemetry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AxisTelemetry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAxisTelemetry}, {}};

static void InitDefaultsAxisErrorState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::nucleo::odrive::_AxisErrorState_default_instance_;
    new (ptr) ::goldo::nucleo::odrive::AxisErrorState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::nucleo::odrive::AxisErrorState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AxisErrorState =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAxisErrorState}, {}};

static void InitDefaultsAxisState_() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::nucleo::odrive::_AxisState__default_instance_;
    new (ptr) ::goldo::nucleo::odrive::AxisState_();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::nucleo::odrive::AxisState_::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AxisState_ =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAxisState_}, {}};

static void InitDefaultsAxisErrorStates() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::nucleo::odrive::_AxisErrorStates_default_instance_;
    new (ptr) ::goldo::nucleo::odrive::AxisErrorStates();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::nucleo::odrive::AxisErrorStates::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AxisErrorStates =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAxisErrorStates}, {
      &protobuf_goldo_2fnucleo_2fodrive_2eproto::scc_info_AxisErrorState.base,}};

static void InitDefaultsAxisStates() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::nucleo::odrive::_AxisStates_default_instance_;
    new (ptr) ::goldo::nucleo::odrive::AxisStates();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::nucleo::odrive::AxisStates::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AxisStates =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAxisStates}, {
      &protobuf_goldo_2fnucleo_2fodrive_2eproto::scc_info_AxisState_.base,}};

static void InitDefaultsClientStatistics() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::nucleo::odrive::_ClientStatistics_default_instance_;
    new (ptr) ::goldo::nucleo::odrive::ClientStatistics();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::nucleo::odrive::ClientStatistics::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ClientStatistics =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsClientStatistics}, {}};

static void InitDefaultsAxisStatus() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::nucleo::odrive::_AxisStatus_default_instance_;
    new (ptr) ::goldo::nucleo::odrive::AxisStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::nucleo::odrive::AxisStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AxisStatus =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAxisStatus}, {
      &protobuf_goldo_2fnucleo_2fodrive_2eproto::scc_info_AxisErrorState.base,}};

static void InitDefaultsTelemetry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::nucleo::odrive::_Telemetry_default_instance_;
    new (ptr) ::goldo::nucleo::odrive::Telemetry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::nucleo::odrive::Telemetry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Telemetry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTelemetry}, {
      &protobuf_goldo_2fnucleo_2fodrive_2eproto::scc_info_AxisTelemetry.base,}};

static void InitDefaultsODriveStatus() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::nucleo::odrive::_ODriveStatus_default_instance_;
    new (ptr) ::goldo::nucleo::odrive::ODriveStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::nucleo::odrive::ODriveStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ODriveStatus =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsODriveStatus}, {
      &protobuf_goldo_2fnucleo_2fodrive_2eproto::scc_info_AxisStatus.base,
      &protobuf_goldo_2fnucleo_2fodrive_2eproto::scc_info_ClientStatistics.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_RequestPacket.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResponsePacket.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AxisTelemetry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AxisErrorState.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AxisState_.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AxisErrorStates.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AxisStates.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClientStatistics.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AxisStatus.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Telemetry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ODriveStatus.base);
}

::google::protobuf::Metadata file_level_metadata[11];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::odrive::RequestPacket, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::odrive::RequestPacket, sequence_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::odrive::RequestPacket, endpoint_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::odrive::RequestPacket, expected_response_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::odrive::RequestPacket, payload_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::odrive::RequestPacket, protocol_version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::odrive::ResponsePacket, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::odrive::ResponsePacket, sequence_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::odrive::ResponsePacket, payload_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::odrive::AxisTelemetry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::odrive::AxisTelemetry, pos_estimate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::odrive::AxisTelemetry, vel_estimate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::odrive::AxisTelemetry, current_iq_setpoint_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::odrive::AxisErrorState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::odrive::AxisErrorState, axis_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::odrive::AxisErrorState, motor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::odrive::AxisErrorState, controller_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::odrive::AxisErrorState, encoder_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::odrive::AxisErrorState, sensorless_estimator_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::odrive::AxisState_, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::odrive::AxisState_, current_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::odrive::AxisState_, requested_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::odrive::AxisState_, control_mode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::odrive::AxisErrorStates, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::odrive::AxisErrorStates, axis0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::odrive::AxisErrorStates, axis1_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::odrive::AxisStates, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::odrive::AxisStates, axis0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::odrive::AxisStates, axis1_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::odrive::ClientStatistics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::odrive::ClientStatistics, max_latency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::odrive::ClientStatistics, timeout_errors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::odrive::ClientStatistics, uptime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::odrive::ClientStatistics, synchronized_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::odrive::AxisStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::odrive::AxisStatus, current_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::odrive::AxisStatus, requested_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::odrive::AxisStatus, control_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::odrive::AxisStatus, errors_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::odrive::Telemetry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::odrive::Telemetry, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::odrive::Telemetry, axis_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::odrive::ODriveStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::odrive::ODriveStatus, synchronized_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::odrive::ODriveStatus, axis0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::odrive::ODriveStatus, axis1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::odrive::ODriveStatus, client_statistics_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::goldo::nucleo::odrive::RequestPacket)},
  { 10, -1, sizeof(::goldo::nucleo::odrive::ResponsePacket)},
  { 17, -1, sizeof(::goldo::nucleo::odrive::AxisTelemetry)},
  { 25, -1, sizeof(::goldo::nucleo::odrive::AxisErrorState)},
  { 35, -1, sizeof(::goldo::nucleo::odrive::AxisState_)},
  { 43, -1, sizeof(::goldo::nucleo::odrive::AxisErrorStates)},
  { 50, -1, sizeof(::goldo::nucleo::odrive::AxisStates)},
  { 57, -1, sizeof(::goldo::nucleo::odrive::ClientStatistics)},
  { 66, -1, sizeof(::goldo::nucleo::odrive::AxisStatus)},
  { 75, -1, sizeof(::goldo::nucleo::odrive::Telemetry)},
  { 82, -1, sizeof(::goldo::nucleo::odrive::ODriveStatus)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::nucleo::odrive::_RequestPacket_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::nucleo::odrive::_ResponsePacket_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::nucleo::odrive::_AxisTelemetry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::nucleo::odrive::_AxisErrorState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::nucleo::odrive::_AxisState__default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::nucleo::odrive::_AxisErrorStates_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::nucleo::odrive::_AxisStates_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::nucleo::odrive::_ClientStatistics_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::nucleo::odrive::_AxisStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::nucleo::odrive::_Telemetry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::nucleo::odrive::_ODriveStatus_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "goldo/nucleo/odrive.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 11);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\031goldo/nucleo/odrive.proto\022\023goldo.nucle"
      "o.odrive\032\027goldo/pb2_options.proto\"\240\001\n\rRe"
      "questPacket\022\035\n\017sequence_number\030\001 \001(\rB\004\200\265"
      "\030\005\022\031\n\013endpoint_id\030\002 \001(\rB\004\200\265\030\005\022$\n\026expecte"
      "d_response_size\030\003 \001(\rB\004\200\265\030\005\022\017\n\007payload\030\004"
      " \001(\014\022\036\n\020protocol_version\030\005 \001(\rB\004\200\265\030\005\"@\n\016"
      "ResponsePacket\022\035\n\017sequence_number\030\001 \001(\rB"
      "\004\200\265\030\005\022\017\n\007payload\030\004 \001(\014\"X\n\rAxisTelemetry\022"
      "\024\n\014pos_estimate\030\001 \001(\002\022\024\n\014vel_estimate\030\002 "
      "\001(\002\022\033\n\023current_iq_setpoint\030\003 \001(\002\"\216\001\n\016Axi"
      "sErrorState\022\022\n\004axis\030\001 \001(\rB\004\200\265\030\007\022\023\n\005motor"
      "\030\002 \001(\rB\004\200\265\030\007\022\030\n\ncontroller\030\003 \001(\rB\004\200\265\030\007\022\025"
      "\n\007encoder\030\004 \001(\rB\004\200\265\030\007\022\"\n\024sensorless_esti"
      "mator\030\005 \001(\rB\004\200\265\030\007\"\306\001\n\nAxisState_\022;\n\rcurr"
      "ent_state\030\001 \001(\0162\036.goldo.nucleo.odrive.Ax"
      "isStateB\004\200\265\030\007\022=\n\017requested_state\030\002 \001(\0162\036"
      ".goldo.nucleo.odrive.AxisStateB\004\200\265\030\007\022<\n\014"
      "control_mode\030\003 \001(\0162 .goldo.nucleo.odrive"
      ".ControlModeB\004\200\265\030\007\"y\n\017AxisErrorStates\0222\n"
      "\005axis0\030\001 \001(\0132#.goldo.nucleo.odrive.AxisE"
      "rrorState\0222\n\005axis1\030\002 \001(\0132#.goldo.nucleo."
      "odrive.AxisErrorState\"l\n\nAxisStates\022.\n\005a"
      "xis0\030\001 \001(\0132\037.goldo.nucleo.odrive.AxisSta"
      "te_\022.\n\005axis1\030\002 \001(\0132\037.goldo.nucleo.odrive"
      ".AxisState_\"w\n\020ClientStatistics\022\031\n\013max_l"
      "atency\030\001 \001(\rB\004\200\265\030\005\022\034\n\016timeout_errors\030\002 \001"
      "(\rB\004\200\265\030\005\022\024\n\006uptime\030\003 \001(\rB\004\200\265\030\007\022\024\n\014synchr"
      "onized\030\004 \001(\010\"\351\001\n\nAxisStatus\0225\n\rcurrent_s"
      "tate\030\001 \001(\0162\036.goldo.nucleo.odrive.AxisSta"
      "te\0227\n\017requested_state\030\002 \001(\0162\036.goldo.nucl"
      "eo.odrive.AxisState\0226\n\014control_mode\030\003 \001("
      "\0162 .goldo.nucleo.odrive.ControlMode\0223\n\006e"
      "rrors\030\004 \001(\0132#.goldo.nucleo.odrive.AxisEr"
      "rorState\"`\n\tTelemetry\022\027\n\ttimestamp\030\001 \001(\r"
      "B\004\200\265\030\007\022:\n\004axis\030\002 \003(\0132\".goldo.nucleo.odri"
      "ve.AxisTelemetryB\010\210\265\030\002\220\265\030\001\"\306\001\n\014ODriveSta"
      "tus\022\024\n\014synchronized\030\001 \001(\010\022.\n\005axis0\030\002 \001(\013"
      "2\037.goldo.nucleo.odrive.AxisStatus\022.\n\005axi"
      "s1\030\003 \001(\0132\037.goldo.nucleo.odrive.AxisStatu"
      "s\022@\n\021client_statistics\030\004 \001(\0132%.goldo.nuc"
      "leo.odrive.ClientStatistics*\216\002\n\tAxisStat"
      "e\022\r\n\tUNDEFINED\020\000\022\010\n\004IDLE\020\001\022\024\n\020STARTUP_SE"
      "QUENCE\020\002\022\035\n\031FULL_CALIBRATION_SEQUENCE\020\003\022"
      "\025\n\021MOTOR_CALIBRATION\020\004\022\026\n\022SENSORLESS_CON"
      "TROL\020\005\022\030\n\024ENCODER_INDEX_SEARCH\020\006\022\036\n\032ENCO"
      "DER_OFFSET_CALIBRATION\020\007\022\027\n\023CLOSED_LOOP_"
      "CONTROL\020\010\022\017\n\013LOCKIN_SPIN\020\t\022\024\n\020ENCODER_DI"
      "R_FIND\020\n\022\n\n\006HOMING\020\013*b\n\013ControlMode\022\023\n\017V"
      "OLTAGE_CONTROL\020\000\022\022\n\016TORQUE_CONTROL\020\001\022\024\n\020"
      "VELOCITY_CONTROL\020\002\022\024\n\020POSITION_CONTROL\020\003"
      "b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2008);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "goldo/nucleo/odrive.proto", &protobuf_RegisterTypes);
  ::protobuf_goldo_2fpb2_5foptions_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_goldo_2fnucleo_2fodrive_2eproto
namespace goldo {
namespace nucleo {
namespace odrive {
const ::google::protobuf::EnumDescriptor* AxisState_descriptor() {
  protobuf_goldo_2fnucleo_2fodrive_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_goldo_2fnucleo_2fodrive_2eproto::file_level_enum_descriptors[0];
}
bool AxisState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ControlMode_descriptor() {
  protobuf_goldo_2fnucleo_2fodrive_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_goldo_2fnucleo_2fodrive_2eproto::file_level_enum_descriptors[1];
}
bool ControlMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void RequestPacket::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RequestPacket::kSequenceNumberFieldNumber;
const int RequestPacket::kEndpointIdFieldNumber;
const int RequestPacket::kExpectedResponseSizeFieldNumber;
const int RequestPacket::kPayloadFieldNumber;
const int RequestPacket::kProtocolVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RequestPacket::RequestPacket()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fnucleo_2fodrive_2eproto::scc_info_RequestPacket.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.nucleo.odrive.RequestPacket)
}
RequestPacket::RequestPacket(const RequestPacket& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.payload().size() > 0) {
    payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
  }
  ::memcpy(&sequence_number_, &from.sequence_number_,
    static_cast<size_t>(reinterpret_cast<char*>(&protocol_version_) -
    reinterpret_cast<char*>(&sequence_number_)) + sizeof(protocol_version_));
  // @@protoc_insertion_point(copy_constructor:goldo.nucleo.odrive.RequestPacket)
}

void RequestPacket::SharedCtor() {
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sequence_number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&protocol_version_) -
      reinterpret_cast<char*>(&sequence_number_)) + sizeof(protocol_version_));
}

RequestPacket::~RequestPacket() {
  // @@protoc_insertion_point(destructor:goldo.nucleo.odrive.RequestPacket)
  SharedDtor();
}

void RequestPacket::SharedDtor() {
  payload_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RequestPacket::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RequestPacket::descriptor() {
  ::protobuf_goldo_2fnucleo_2fodrive_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2fodrive_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RequestPacket& RequestPacket::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fnucleo_2fodrive_2eproto::scc_info_RequestPacket.base);
  return *internal_default_instance();
}


void RequestPacket::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.nucleo.odrive.RequestPacket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sequence_number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&protocol_version_) -
      reinterpret_cast<char*>(&sequence_number_)) + sizeof(protocol_version_));
  _internal_metadata_.Clear();
}

bool RequestPacket::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.nucleo.odrive.RequestPacket)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 sequence_number = 1 [(.goldo.pb2_options.cpp_type) = UINT16];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sequence_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 endpoint_id = 2 [(.goldo.pb2_options.cpp_type) = UINT16];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &endpoint_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 expected_response_size = 3 [(.goldo.pb2_options.cpp_type) = UINT16];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &expected_response_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes payload = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_payload()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 protocol_version = 5 [(.goldo.pb2_options.cpp_type) = UINT16];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &protocol_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.nucleo.odrive.RequestPacket)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.nucleo.odrive.RequestPacket)
  return false;
#undef DO_
}

void RequestPacket::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.nucleo.odrive.RequestPacket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 sequence_number = 1 [(.goldo.pb2_options.cpp_type) = UINT16];
  if (this->sequence_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->sequence_number(), output);
  }

  // uint32 endpoint_id = 2 [(.goldo.pb2_options.cpp_type) = UINT16];
  if (this->endpoint_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->endpoint_id(), output);
  }

  // uint32 expected_response_size = 3 [(.goldo.pb2_options.cpp_type) = UINT16];
  if (this->expected_response_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->expected_response_size(), output);
  }

  // bytes payload = 4;
  if (this->payload().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->payload(), output);
  }

  // uint32 protocol_version = 5 [(.goldo.pb2_options.cpp_type) = UINT16];
  if (this->protocol_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->protocol_version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.nucleo.odrive.RequestPacket)
}

::google::protobuf::uint8* RequestPacket::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.nucleo.odrive.RequestPacket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 sequence_number = 1 [(.goldo.pb2_options.cpp_type) = UINT16];
  if (this->sequence_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->sequence_number(), target);
  }

  // uint32 endpoint_id = 2 [(.goldo.pb2_options.cpp_type) = UINT16];
  if (this->endpoint_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->endpoint_id(), target);
  }

  // uint32 expected_response_size = 3 [(.goldo.pb2_options.cpp_type) = UINT16];
  if (this->expected_response_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->expected_response_size(), target);
  }

  // bytes payload = 4;
  if (this->payload().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->payload(), target);
  }

  // uint32 protocol_version = 5 [(.goldo.pb2_options.cpp_type) = UINT16];
  if (this->protocol_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->protocol_version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.nucleo.odrive.RequestPacket)
  return target;
}

size_t RequestPacket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.nucleo.odrive.RequestPacket)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes payload = 4;
  if (this->payload().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->payload());
  }

  // uint32 sequence_number = 1 [(.goldo.pb2_options.cpp_type) = UINT16];
  if (this->sequence_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sequence_number());
  }

  // uint32 endpoint_id = 2 [(.goldo.pb2_options.cpp_type) = UINT16];
  if (this->endpoint_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->endpoint_id());
  }

  // uint32 expected_response_size = 3 [(.goldo.pb2_options.cpp_type) = UINT16];
  if (this->expected_response_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->expected_response_size());
  }

  // uint32 protocol_version = 5 [(.goldo.pb2_options.cpp_type) = UINT16];
  if (this->protocol_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->protocol_version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RequestPacket::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.nucleo.odrive.RequestPacket)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestPacket* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RequestPacket>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.nucleo.odrive.RequestPacket)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.nucleo.odrive.RequestPacket)
    MergeFrom(*source);
  }
}

void RequestPacket::MergeFrom(const RequestPacket& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.nucleo.odrive.RequestPacket)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.payload().size() > 0) {

    payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
  }
  if (from.sequence_number() != 0) {
    set_sequence_number(from.sequence_number());
  }
  if (from.endpoint_id() != 0) {
    set_endpoint_id(from.endpoint_id());
  }
  if (from.expected_response_size() != 0) {
    set_expected_response_size(from.expected_response_size());
  }
  if (from.protocol_version() != 0) {
    set_protocol_version(from.protocol_version());
  }
}

void RequestPacket::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.nucleo.odrive.RequestPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestPacket::CopyFrom(const RequestPacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.nucleo.odrive.RequestPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestPacket::IsInitialized() const {
  return true;
}

void RequestPacket::Swap(RequestPacket* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RequestPacket::InternalSwap(RequestPacket* other) {
  using std::swap;
  payload_.Swap(&other->payload_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(sequence_number_, other->sequence_number_);
  swap(endpoint_id_, other->endpoint_id_);
  swap(expected_response_size_, other->expected_response_size_);
  swap(protocol_version_, other->protocol_version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RequestPacket::GetMetadata() const {
  protobuf_goldo_2fnucleo_2fodrive_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2fodrive_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ResponsePacket::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResponsePacket::kSequenceNumberFieldNumber;
const int ResponsePacket::kPayloadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResponsePacket::ResponsePacket()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fnucleo_2fodrive_2eproto::scc_info_ResponsePacket.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.nucleo.odrive.ResponsePacket)
}
ResponsePacket::ResponsePacket(const ResponsePacket& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.payload().size() > 0) {
    payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
  }
  sequence_number_ = from.sequence_number_;
  // @@protoc_insertion_point(copy_constructor:goldo.nucleo.odrive.ResponsePacket)
}

void ResponsePacket::SharedCtor() {
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sequence_number_ = 0u;
}

ResponsePacket::~ResponsePacket() {
  // @@protoc_insertion_point(destructor:goldo.nucleo.odrive.ResponsePacket)
  SharedDtor();
}

void ResponsePacket::SharedDtor() {
  payload_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ResponsePacket::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ResponsePacket::descriptor() {
  ::protobuf_goldo_2fnucleo_2fodrive_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2fodrive_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResponsePacket& ResponsePacket::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fnucleo_2fodrive_2eproto::scc_info_ResponsePacket.base);
  return *internal_default_instance();
}


void ResponsePacket::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.nucleo.odrive.ResponsePacket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sequence_number_ = 0u;
  _internal_metadata_.Clear();
}

bool ResponsePacket::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.nucleo.odrive.ResponsePacket)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 sequence_number = 1 [(.goldo.pb2_options.cpp_type) = UINT16];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sequence_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes payload = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_payload()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.nucleo.odrive.ResponsePacket)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.nucleo.odrive.ResponsePacket)
  return false;
#undef DO_
}

void ResponsePacket::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.nucleo.odrive.ResponsePacket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 sequence_number = 1 [(.goldo.pb2_options.cpp_type) = UINT16];
  if (this->sequence_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->sequence_number(), output);
  }

  // bytes payload = 4;
  if (this->payload().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->payload(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.nucleo.odrive.ResponsePacket)
}

::google::protobuf::uint8* ResponsePacket::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.nucleo.odrive.ResponsePacket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 sequence_number = 1 [(.goldo.pb2_options.cpp_type) = UINT16];
  if (this->sequence_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->sequence_number(), target);
  }

  // bytes payload = 4;
  if (this->payload().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->payload(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.nucleo.odrive.ResponsePacket)
  return target;
}

size_t ResponsePacket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.nucleo.odrive.ResponsePacket)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes payload = 4;
  if (this->payload().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->payload());
  }

  // uint32 sequence_number = 1 [(.goldo.pb2_options.cpp_type) = UINT16];
  if (this->sequence_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sequence_number());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResponsePacket::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.nucleo.odrive.ResponsePacket)
  GOOGLE_DCHECK_NE(&from, this);
  const ResponsePacket* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResponsePacket>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.nucleo.odrive.ResponsePacket)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.nucleo.odrive.ResponsePacket)
    MergeFrom(*source);
  }
}

void ResponsePacket::MergeFrom(const ResponsePacket& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.nucleo.odrive.ResponsePacket)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.payload().size() > 0) {

    payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
  }
  if (from.sequence_number() != 0) {
    set_sequence_number(from.sequence_number());
  }
}

void ResponsePacket::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.nucleo.odrive.ResponsePacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponsePacket::CopyFrom(const ResponsePacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.nucleo.odrive.ResponsePacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponsePacket::IsInitialized() const {
  return true;
}

void ResponsePacket::Swap(ResponsePacket* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResponsePacket::InternalSwap(ResponsePacket* other) {
  using std::swap;
  payload_.Swap(&other->payload_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(sequence_number_, other->sequence_number_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ResponsePacket::GetMetadata() const {
  protobuf_goldo_2fnucleo_2fodrive_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2fodrive_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AxisTelemetry::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AxisTelemetry::kPosEstimateFieldNumber;
const int AxisTelemetry::kVelEstimateFieldNumber;
const int AxisTelemetry::kCurrentIqSetpointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AxisTelemetry::AxisTelemetry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fnucleo_2fodrive_2eproto::scc_info_AxisTelemetry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.nucleo.odrive.AxisTelemetry)
}
AxisTelemetry::AxisTelemetry(const AxisTelemetry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&pos_estimate_, &from.pos_estimate_,
    static_cast<size_t>(reinterpret_cast<char*>(&current_iq_setpoint_) -
    reinterpret_cast<char*>(&pos_estimate_)) + sizeof(current_iq_setpoint_));
  // @@protoc_insertion_point(copy_constructor:goldo.nucleo.odrive.AxisTelemetry)
}

void AxisTelemetry::SharedCtor() {
  ::memset(&pos_estimate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&current_iq_setpoint_) -
      reinterpret_cast<char*>(&pos_estimate_)) + sizeof(current_iq_setpoint_));
}

AxisTelemetry::~AxisTelemetry() {
  // @@protoc_insertion_point(destructor:goldo.nucleo.odrive.AxisTelemetry)
  SharedDtor();
}

void AxisTelemetry::SharedDtor() {
}

void AxisTelemetry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AxisTelemetry::descriptor() {
  ::protobuf_goldo_2fnucleo_2fodrive_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2fodrive_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AxisTelemetry& AxisTelemetry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fnucleo_2fodrive_2eproto::scc_info_AxisTelemetry.base);
  return *internal_default_instance();
}


void AxisTelemetry::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.nucleo.odrive.AxisTelemetry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&pos_estimate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&current_iq_setpoint_) -
      reinterpret_cast<char*>(&pos_estimate_)) + sizeof(current_iq_setpoint_));
  _internal_metadata_.Clear();
}

bool AxisTelemetry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.nucleo.odrive.AxisTelemetry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float pos_estimate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pos_estimate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float vel_estimate = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &vel_estimate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float current_iq_setpoint = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &current_iq_setpoint_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.nucleo.odrive.AxisTelemetry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.nucleo.odrive.AxisTelemetry)
  return false;
#undef DO_
}

void AxisTelemetry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.nucleo.odrive.AxisTelemetry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float pos_estimate = 1;
  if (this->pos_estimate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->pos_estimate(), output);
  }

  // float vel_estimate = 2;
  if (this->vel_estimate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->vel_estimate(), output);
  }

  // float current_iq_setpoint = 3;
  if (this->current_iq_setpoint() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->current_iq_setpoint(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.nucleo.odrive.AxisTelemetry)
}

::google::protobuf::uint8* AxisTelemetry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.nucleo.odrive.AxisTelemetry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float pos_estimate = 1;
  if (this->pos_estimate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->pos_estimate(), target);
  }

  // float vel_estimate = 2;
  if (this->vel_estimate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->vel_estimate(), target);
  }

  // float current_iq_setpoint = 3;
  if (this->current_iq_setpoint() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->current_iq_setpoint(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.nucleo.odrive.AxisTelemetry)
  return target;
}

size_t AxisTelemetry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.nucleo.odrive.AxisTelemetry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float pos_estimate = 1;
  if (this->pos_estimate() != 0) {
    total_size += 1 + 4;
  }

  // float vel_estimate = 2;
  if (this->vel_estimate() != 0) {
    total_size += 1 + 4;
  }

  // float current_iq_setpoint = 3;
  if (this->current_iq_setpoint() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AxisTelemetry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.nucleo.odrive.AxisTelemetry)
  GOOGLE_DCHECK_NE(&from, this);
  const AxisTelemetry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AxisTelemetry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.nucleo.odrive.AxisTelemetry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.nucleo.odrive.AxisTelemetry)
    MergeFrom(*source);
  }
}

void AxisTelemetry::MergeFrom(const AxisTelemetry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.nucleo.odrive.AxisTelemetry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pos_estimate() != 0) {
    set_pos_estimate(from.pos_estimate());
  }
  if (from.vel_estimate() != 0) {
    set_vel_estimate(from.vel_estimate());
  }
  if (from.current_iq_setpoint() != 0) {
    set_current_iq_setpoint(from.current_iq_setpoint());
  }
}

void AxisTelemetry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.nucleo.odrive.AxisTelemetry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AxisTelemetry::CopyFrom(const AxisTelemetry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.nucleo.odrive.AxisTelemetry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AxisTelemetry::IsInitialized() const {
  return true;
}

void AxisTelemetry::Swap(AxisTelemetry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AxisTelemetry::InternalSwap(AxisTelemetry* other) {
  using std::swap;
  swap(pos_estimate_, other->pos_estimate_);
  swap(vel_estimate_, other->vel_estimate_);
  swap(current_iq_setpoint_, other->current_iq_setpoint_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AxisTelemetry::GetMetadata() const {
  protobuf_goldo_2fnucleo_2fodrive_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2fodrive_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AxisErrorState::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AxisErrorState::kAxisFieldNumber;
const int AxisErrorState::kMotorFieldNumber;
const int AxisErrorState::kControllerFieldNumber;
const int AxisErrorState::kEncoderFieldNumber;
const int AxisErrorState::kSensorlessEstimatorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AxisErrorState::AxisErrorState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fnucleo_2fodrive_2eproto::scc_info_AxisErrorState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.nucleo.odrive.AxisErrorState)
}
AxisErrorState::AxisErrorState(const AxisErrorState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&axis_, &from.axis_,
    static_cast<size_t>(reinterpret_cast<char*>(&sensorless_estimator_) -
    reinterpret_cast<char*>(&axis_)) + sizeof(sensorless_estimator_));
  // @@protoc_insertion_point(copy_constructor:goldo.nucleo.odrive.AxisErrorState)
}

void AxisErrorState::SharedCtor() {
  ::memset(&axis_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sensorless_estimator_) -
      reinterpret_cast<char*>(&axis_)) + sizeof(sensorless_estimator_));
}

AxisErrorState::~AxisErrorState() {
  // @@protoc_insertion_point(destructor:goldo.nucleo.odrive.AxisErrorState)
  SharedDtor();
}

void AxisErrorState::SharedDtor() {
}

void AxisErrorState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AxisErrorState::descriptor() {
  ::protobuf_goldo_2fnucleo_2fodrive_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2fodrive_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AxisErrorState& AxisErrorState::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fnucleo_2fodrive_2eproto::scc_info_AxisErrorState.base);
  return *internal_default_instance();
}


void AxisErrorState::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.nucleo.odrive.AxisErrorState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&axis_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sensorless_estimator_) -
      reinterpret_cast<char*>(&axis_)) + sizeof(sensorless_estimator_));
  _internal_metadata_.Clear();
}

bool AxisErrorState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.nucleo.odrive.AxisErrorState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 axis = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &axis_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 motor = 2 [(.goldo.pb2_options.cpp_type) = UINT32];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &motor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 controller = 3 [(.goldo.pb2_options.cpp_type) = UINT32];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &controller_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 encoder = 4 [(.goldo.pb2_options.cpp_type) = UINT32];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &encoder_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 sensorless_estimator = 5 [(.goldo.pb2_options.cpp_type) = UINT32];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sensorless_estimator_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.nucleo.odrive.AxisErrorState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.nucleo.odrive.AxisErrorState)
  return false;
#undef DO_
}

void AxisErrorState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.nucleo.odrive.AxisErrorState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 axis = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->axis() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->axis(), output);
  }

  // uint32 motor = 2 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->motor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->motor(), output);
  }

  // uint32 controller = 3 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->controller() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->controller(), output);
  }

  // uint32 encoder = 4 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->encoder() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->encoder(), output);
  }

  // uint32 sensorless_estimator = 5 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->sensorless_estimator() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->sensorless_estimator(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.nucleo.odrive.AxisErrorState)
}

::google::protobuf::uint8* AxisErrorState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.nucleo.odrive.AxisErrorState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 axis = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->axis() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->axis(), target);
  }

  // uint32 motor = 2 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->motor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->motor(), target);
  }

  // uint32 controller = 3 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->controller() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->controller(), target);
  }

  // uint32 encoder = 4 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->encoder() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->encoder(), target);
  }

  // uint32 sensorless_estimator = 5 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->sensorless_estimator() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->sensorless_estimator(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.nucleo.odrive.AxisErrorState)
  return target;
}

size_t AxisErrorState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.nucleo.odrive.AxisErrorState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 axis = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->axis() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->axis());
  }

  // uint32 motor = 2 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->motor() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->motor());
  }

  // uint32 controller = 3 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->controller() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->controller());
  }

  // uint32 encoder = 4 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->encoder() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->encoder());
  }

  // uint32 sensorless_estimator = 5 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->sensorless_estimator() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sensorless_estimator());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AxisErrorState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.nucleo.odrive.AxisErrorState)
  GOOGLE_DCHECK_NE(&from, this);
  const AxisErrorState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AxisErrorState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.nucleo.odrive.AxisErrorState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.nucleo.odrive.AxisErrorState)
    MergeFrom(*source);
  }
}

void AxisErrorState::MergeFrom(const AxisErrorState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.nucleo.odrive.AxisErrorState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.axis() != 0) {
    set_axis(from.axis());
  }
  if (from.motor() != 0) {
    set_motor(from.motor());
  }
  if (from.controller() != 0) {
    set_controller(from.controller());
  }
  if (from.encoder() != 0) {
    set_encoder(from.encoder());
  }
  if (from.sensorless_estimator() != 0) {
    set_sensorless_estimator(from.sensorless_estimator());
  }
}

void AxisErrorState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.nucleo.odrive.AxisErrorState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AxisErrorState::CopyFrom(const AxisErrorState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.nucleo.odrive.AxisErrorState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AxisErrorState::IsInitialized() const {
  return true;
}

void AxisErrorState::Swap(AxisErrorState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AxisErrorState::InternalSwap(AxisErrorState* other) {
  using std::swap;
  swap(axis_, other->axis_);
  swap(motor_, other->motor_);
  swap(controller_, other->controller_);
  swap(encoder_, other->encoder_);
  swap(sensorless_estimator_, other->sensorless_estimator_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AxisErrorState::GetMetadata() const {
  protobuf_goldo_2fnucleo_2fodrive_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2fodrive_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AxisState_::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AxisState_::kCurrentStateFieldNumber;
const int AxisState_::kRequestedStateFieldNumber;
const int AxisState_::kControlModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AxisState_::AxisState_()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fnucleo_2fodrive_2eproto::scc_info_AxisState_.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.nucleo.odrive.AxisState_)
}
AxisState_::AxisState_(const AxisState_& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&current_state_, &from.current_state_,
    static_cast<size_t>(reinterpret_cast<char*>(&control_mode_) -
    reinterpret_cast<char*>(&current_state_)) + sizeof(control_mode_));
  // @@protoc_insertion_point(copy_constructor:goldo.nucleo.odrive.AxisState_)
}

void AxisState_::SharedCtor() {
  ::memset(&current_state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&control_mode_) -
      reinterpret_cast<char*>(&current_state_)) + sizeof(control_mode_));
}

AxisState_::~AxisState_() {
  // @@protoc_insertion_point(destructor:goldo.nucleo.odrive.AxisState_)
  SharedDtor();
}

void AxisState_::SharedDtor() {
}

void AxisState_::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AxisState_::descriptor() {
  ::protobuf_goldo_2fnucleo_2fodrive_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2fodrive_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AxisState_& AxisState_::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fnucleo_2fodrive_2eproto::scc_info_AxisState_.base);
  return *internal_default_instance();
}


void AxisState_::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.nucleo.odrive.AxisState_)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&current_state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&control_mode_) -
      reinterpret_cast<char*>(&current_state_)) + sizeof(control_mode_));
  _internal_metadata_.Clear();
}

bool AxisState_::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.nucleo.odrive.AxisState_)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .goldo.nucleo.odrive.AxisState current_state = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_current_state(static_cast< ::goldo::nucleo::odrive::AxisState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .goldo.nucleo.odrive.AxisState requested_state = 2 [(.goldo.pb2_options.cpp_type) = UINT32];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_requested_state(static_cast< ::goldo::nucleo::odrive::AxisState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .goldo.nucleo.odrive.ControlMode control_mode = 3 [(.goldo.pb2_options.cpp_type) = UINT32];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_control_mode(static_cast< ::goldo::nucleo::odrive::ControlMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.nucleo.odrive.AxisState_)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.nucleo.odrive.AxisState_)
  return false;
#undef DO_
}

void AxisState_::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.nucleo.odrive.AxisState_)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .goldo.nucleo.odrive.AxisState current_state = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->current_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->current_state(), output);
  }

  // .goldo.nucleo.odrive.AxisState requested_state = 2 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->requested_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->requested_state(), output);
  }

  // .goldo.nucleo.odrive.ControlMode control_mode = 3 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->control_mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->control_mode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.nucleo.odrive.AxisState_)
}

::google::protobuf::uint8* AxisState_::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.nucleo.odrive.AxisState_)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .goldo.nucleo.odrive.AxisState current_state = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->current_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->current_state(), target);
  }

  // .goldo.nucleo.odrive.AxisState requested_state = 2 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->requested_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->requested_state(), target);
  }

  // .goldo.nucleo.odrive.ControlMode control_mode = 3 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->control_mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->control_mode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.nucleo.odrive.AxisState_)
  return target;
}

size_t AxisState_::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.nucleo.odrive.AxisState_)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .goldo.nucleo.odrive.AxisState current_state = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->current_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->current_state());
  }

  // .goldo.nucleo.odrive.AxisState requested_state = 2 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->requested_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->requested_state());
  }

  // .goldo.nucleo.odrive.ControlMode control_mode = 3 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->control_mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->control_mode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AxisState_::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.nucleo.odrive.AxisState_)
  GOOGLE_DCHECK_NE(&from, this);
  const AxisState_* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AxisState_>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.nucleo.odrive.AxisState_)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.nucleo.odrive.AxisState_)
    MergeFrom(*source);
  }
}

void AxisState_::MergeFrom(const AxisState_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.nucleo.odrive.AxisState_)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.current_state() != 0) {
    set_current_state(from.current_state());
  }
  if (from.requested_state() != 0) {
    set_requested_state(from.requested_state());
  }
  if (from.control_mode() != 0) {
    set_control_mode(from.control_mode());
  }
}

void AxisState_::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.nucleo.odrive.AxisState_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AxisState_::CopyFrom(const AxisState_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.nucleo.odrive.AxisState_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AxisState_::IsInitialized() const {
  return true;
}

void AxisState_::Swap(AxisState_* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AxisState_::InternalSwap(AxisState_* other) {
  using std::swap;
  swap(current_state_, other->current_state_);
  swap(requested_state_, other->requested_state_);
  swap(control_mode_, other->control_mode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AxisState_::GetMetadata() const {
  protobuf_goldo_2fnucleo_2fodrive_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2fodrive_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AxisErrorStates::InitAsDefaultInstance() {
  ::goldo::nucleo::odrive::_AxisErrorStates_default_instance_._instance.get_mutable()->axis0_ = const_cast< ::goldo::nucleo::odrive::AxisErrorState*>(
      ::goldo::nucleo::odrive::AxisErrorState::internal_default_instance());
  ::goldo::nucleo::odrive::_AxisErrorStates_default_instance_._instance.get_mutable()->axis1_ = const_cast< ::goldo::nucleo::odrive::AxisErrorState*>(
      ::goldo::nucleo::odrive::AxisErrorState::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AxisErrorStates::kAxis0FieldNumber;
const int AxisErrorStates::kAxis1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AxisErrorStates::AxisErrorStates()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fnucleo_2fodrive_2eproto::scc_info_AxisErrorStates.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.nucleo.odrive.AxisErrorStates)
}
AxisErrorStates::AxisErrorStates(const AxisErrorStates& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_axis0()) {
    axis0_ = new ::goldo::nucleo::odrive::AxisErrorState(*from.axis0_);
  } else {
    axis0_ = NULL;
  }
  if (from.has_axis1()) {
    axis1_ = new ::goldo::nucleo::odrive::AxisErrorState(*from.axis1_);
  } else {
    axis1_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:goldo.nucleo.odrive.AxisErrorStates)
}

void AxisErrorStates::SharedCtor() {
  ::memset(&axis0_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&axis1_) -
      reinterpret_cast<char*>(&axis0_)) + sizeof(axis1_));
}

AxisErrorStates::~AxisErrorStates() {
  // @@protoc_insertion_point(destructor:goldo.nucleo.odrive.AxisErrorStates)
  SharedDtor();
}

void AxisErrorStates::SharedDtor() {
  if (this != internal_default_instance()) delete axis0_;
  if (this != internal_default_instance()) delete axis1_;
}

void AxisErrorStates::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AxisErrorStates::descriptor() {
  ::protobuf_goldo_2fnucleo_2fodrive_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2fodrive_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AxisErrorStates& AxisErrorStates::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fnucleo_2fodrive_2eproto::scc_info_AxisErrorStates.base);
  return *internal_default_instance();
}


void AxisErrorStates::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.nucleo.odrive.AxisErrorStates)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && axis0_ != NULL) {
    delete axis0_;
  }
  axis0_ = NULL;
  if (GetArenaNoVirtual() == NULL && axis1_ != NULL) {
    delete axis1_;
  }
  axis1_ = NULL;
  _internal_metadata_.Clear();
}

bool AxisErrorStates::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.nucleo.odrive.AxisErrorStates)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .goldo.nucleo.odrive.AxisErrorState axis0 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_axis0()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .goldo.nucleo.odrive.AxisErrorState axis1 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_axis1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.nucleo.odrive.AxisErrorStates)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.nucleo.odrive.AxisErrorStates)
  return false;
#undef DO_
}

void AxisErrorStates::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.nucleo.odrive.AxisErrorStates)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .goldo.nucleo.odrive.AxisErrorState axis0 = 1;
  if (this->has_axis0()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_axis0(), output);
  }

  // .goldo.nucleo.odrive.AxisErrorState axis1 = 2;
  if (this->has_axis1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_axis1(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.nucleo.odrive.AxisErrorStates)
}

::google::protobuf::uint8* AxisErrorStates::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.nucleo.odrive.AxisErrorStates)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .goldo.nucleo.odrive.AxisErrorState axis0 = 1;
  if (this->has_axis0()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_axis0(), deterministic, target);
  }

  // .goldo.nucleo.odrive.AxisErrorState axis1 = 2;
  if (this->has_axis1()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_axis1(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.nucleo.odrive.AxisErrorStates)
  return target;
}

size_t AxisErrorStates::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.nucleo.odrive.AxisErrorStates)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .goldo.nucleo.odrive.AxisErrorState axis0 = 1;
  if (this->has_axis0()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *axis0_);
  }

  // .goldo.nucleo.odrive.AxisErrorState axis1 = 2;
  if (this->has_axis1()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *axis1_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AxisErrorStates::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.nucleo.odrive.AxisErrorStates)
  GOOGLE_DCHECK_NE(&from, this);
  const AxisErrorStates* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AxisErrorStates>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.nucleo.odrive.AxisErrorStates)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.nucleo.odrive.AxisErrorStates)
    MergeFrom(*source);
  }
}

void AxisErrorStates::MergeFrom(const AxisErrorStates& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.nucleo.odrive.AxisErrorStates)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_axis0()) {
    mutable_axis0()->::goldo::nucleo::odrive::AxisErrorState::MergeFrom(from.axis0());
  }
  if (from.has_axis1()) {
    mutable_axis1()->::goldo::nucleo::odrive::AxisErrorState::MergeFrom(from.axis1());
  }
}

void AxisErrorStates::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.nucleo.odrive.AxisErrorStates)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AxisErrorStates::CopyFrom(const AxisErrorStates& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.nucleo.odrive.AxisErrorStates)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AxisErrorStates::IsInitialized() const {
  return true;
}

void AxisErrorStates::Swap(AxisErrorStates* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AxisErrorStates::InternalSwap(AxisErrorStates* other) {
  using std::swap;
  swap(axis0_, other->axis0_);
  swap(axis1_, other->axis1_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AxisErrorStates::GetMetadata() const {
  protobuf_goldo_2fnucleo_2fodrive_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2fodrive_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AxisStates::InitAsDefaultInstance() {
  ::goldo::nucleo::odrive::_AxisStates_default_instance_._instance.get_mutable()->axis0_ = const_cast< ::goldo::nucleo::odrive::AxisState_*>(
      ::goldo::nucleo::odrive::AxisState_::internal_default_instance());
  ::goldo::nucleo::odrive::_AxisStates_default_instance_._instance.get_mutable()->axis1_ = const_cast< ::goldo::nucleo::odrive::AxisState_*>(
      ::goldo::nucleo::odrive::AxisState_::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AxisStates::kAxis0FieldNumber;
const int AxisStates::kAxis1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AxisStates::AxisStates()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fnucleo_2fodrive_2eproto::scc_info_AxisStates.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.nucleo.odrive.AxisStates)
}
AxisStates::AxisStates(const AxisStates& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_axis0()) {
    axis0_ = new ::goldo::nucleo::odrive::AxisState_(*from.axis0_);
  } else {
    axis0_ = NULL;
  }
  if (from.has_axis1()) {
    axis1_ = new ::goldo::nucleo::odrive::AxisState_(*from.axis1_);
  } else {
    axis1_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:goldo.nucleo.odrive.AxisStates)
}

void AxisStates::SharedCtor() {
  ::memset(&axis0_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&axis1_) -
      reinterpret_cast<char*>(&axis0_)) + sizeof(axis1_));
}

AxisStates::~AxisStates() {
  // @@protoc_insertion_point(destructor:goldo.nucleo.odrive.AxisStates)
  SharedDtor();
}

void AxisStates::SharedDtor() {
  if (this != internal_default_instance()) delete axis0_;
  if (this != internal_default_instance()) delete axis1_;
}

void AxisStates::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AxisStates::descriptor() {
  ::protobuf_goldo_2fnucleo_2fodrive_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2fodrive_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AxisStates& AxisStates::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fnucleo_2fodrive_2eproto::scc_info_AxisStates.base);
  return *internal_default_instance();
}


void AxisStates::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.nucleo.odrive.AxisStates)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && axis0_ != NULL) {
    delete axis0_;
  }
  axis0_ = NULL;
  if (GetArenaNoVirtual() == NULL && axis1_ != NULL) {
    delete axis1_;
  }
  axis1_ = NULL;
  _internal_metadata_.Clear();
}

bool AxisStates::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.nucleo.odrive.AxisStates)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .goldo.nucleo.odrive.AxisState_ axis0 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_axis0()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .goldo.nucleo.odrive.AxisState_ axis1 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_axis1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.nucleo.odrive.AxisStates)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.nucleo.odrive.AxisStates)
  return false;
#undef DO_
}

void AxisStates::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.nucleo.odrive.AxisStates)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .goldo.nucleo.odrive.AxisState_ axis0 = 1;
  if (this->has_axis0()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_axis0(), output);
  }

  // .goldo.nucleo.odrive.AxisState_ axis1 = 2;
  if (this->has_axis1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_axis1(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.nucleo.odrive.AxisStates)
}

::google::protobuf::uint8* AxisStates::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.nucleo.odrive.AxisStates)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .goldo.nucleo.odrive.AxisState_ axis0 = 1;
  if (this->has_axis0()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_axis0(), deterministic, target);
  }

  // .goldo.nucleo.odrive.AxisState_ axis1 = 2;
  if (this->has_axis1()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_axis1(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.nucleo.odrive.AxisStates)
  return target;
}

size_t AxisStates::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.nucleo.odrive.AxisStates)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .goldo.nucleo.odrive.AxisState_ axis0 = 1;
  if (this->has_axis0()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *axis0_);
  }

  // .goldo.nucleo.odrive.AxisState_ axis1 = 2;
  if (this->has_axis1()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *axis1_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AxisStates::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.nucleo.odrive.AxisStates)
  GOOGLE_DCHECK_NE(&from, this);
  const AxisStates* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AxisStates>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.nucleo.odrive.AxisStates)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.nucleo.odrive.AxisStates)
    MergeFrom(*source);
  }
}

void AxisStates::MergeFrom(const AxisStates& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.nucleo.odrive.AxisStates)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_axis0()) {
    mutable_axis0()->::goldo::nucleo::odrive::AxisState_::MergeFrom(from.axis0());
  }
  if (from.has_axis1()) {
    mutable_axis1()->::goldo::nucleo::odrive::AxisState_::MergeFrom(from.axis1());
  }
}

void AxisStates::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.nucleo.odrive.AxisStates)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AxisStates::CopyFrom(const AxisStates& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.nucleo.odrive.AxisStates)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AxisStates::IsInitialized() const {
  return true;
}

void AxisStates::Swap(AxisStates* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AxisStates::InternalSwap(AxisStates* other) {
  using std::swap;
  swap(axis0_, other->axis0_);
  swap(axis1_, other->axis1_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AxisStates::GetMetadata() const {
  protobuf_goldo_2fnucleo_2fodrive_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2fodrive_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClientStatistics::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientStatistics::kMaxLatencyFieldNumber;
const int ClientStatistics::kTimeoutErrorsFieldNumber;
const int ClientStatistics::kUptimeFieldNumber;
const int ClientStatistics::kSynchronizedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientStatistics::ClientStatistics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fnucleo_2fodrive_2eproto::scc_info_ClientStatistics.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.nucleo.odrive.ClientStatistics)
}
ClientStatistics::ClientStatistics(const ClientStatistics& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&max_latency_, &from.max_latency_,
    static_cast<size_t>(reinterpret_cast<char*>(&synchronized_) -
    reinterpret_cast<char*>(&max_latency_)) + sizeof(synchronized_));
  // @@protoc_insertion_point(copy_constructor:goldo.nucleo.odrive.ClientStatistics)
}

void ClientStatistics::SharedCtor() {
  ::memset(&max_latency_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&synchronized_) -
      reinterpret_cast<char*>(&max_latency_)) + sizeof(synchronized_));
}

ClientStatistics::~ClientStatistics() {
  // @@protoc_insertion_point(destructor:goldo.nucleo.odrive.ClientStatistics)
  SharedDtor();
}

void ClientStatistics::SharedDtor() {
}

void ClientStatistics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ClientStatistics::descriptor() {
  ::protobuf_goldo_2fnucleo_2fodrive_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2fodrive_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientStatistics& ClientStatistics::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fnucleo_2fodrive_2eproto::scc_info_ClientStatistics.base);
  return *internal_default_instance();
}


void ClientStatistics::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.nucleo.odrive.ClientStatistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&max_latency_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&synchronized_) -
      reinterpret_cast<char*>(&max_latency_)) + sizeof(synchronized_));
  _internal_metadata_.Clear();
}

bool ClientStatistics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.nucleo.odrive.ClientStatistics)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 max_latency = 1 [(.goldo.pb2_options.cpp_type) = UINT16];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_latency_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 timeout_errors = 2 [(.goldo.pb2_options.cpp_type) = UINT16];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timeout_errors_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uptime = 3 [(.goldo.pb2_options.cpp_type) = UINT32];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uptime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool synchronized = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &synchronized_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.nucleo.odrive.ClientStatistics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.nucleo.odrive.ClientStatistics)
  return false;
#undef DO_
}

void ClientStatistics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.nucleo.odrive.ClientStatistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 max_latency = 1 [(.goldo.pb2_options.cpp_type) = UINT16];
  if (this->max_latency() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->max_latency(), output);
  }

  // uint32 timeout_errors = 2 [(.goldo.pb2_options.cpp_type) = UINT16];
  if (this->timeout_errors() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->timeout_errors(), output);
  }

  // uint32 uptime = 3 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->uptime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uptime(), output);
  }

  // bool synchronized = 4;
  if (this->synchronized() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->synchronized(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.nucleo.odrive.ClientStatistics)
}

::google::protobuf::uint8* ClientStatistics::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.nucleo.odrive.ClientStatistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 max_latency = 1 [(.goldo.pb2_options.cpp_type) = UINT16];
  if (this->max_latency() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->max_latency(), target);
  }

  // uint32 timeout_errors = 2 [(.goldo.pb2_options.cpp_type) = UINT16];
  if (this->timeout_errors() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->timeout_errors(), target);
  }

  // uint32 uptime = 3 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->uptime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uptime(), target);
  }

  // bool synchronized = 4;
  if (this->synchronized() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->synchronized(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.nucleo.odrive.ClientStatistics)
  return target;
}

size_t ClientStatistics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.nucleo.odrive.ClientStatistics)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 max_latency = 1 [(.goldo.pb2_options.cpp_type) = UINT16];
  if (this->max_latency() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->max_latency());
  }

  // uint32 timeout_errors = 2 [(.goldo.pb2_options.cpp_type) = UINT16];
  if (this->timeout_errors() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timeout_errors());
  }

  // uint32 uptime = 3 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->uptime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uptime());
  }

  // bool synchronized = 4;
  if (this->synchronized() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientStatistics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.nucleo.odrive.ClientStatistics)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientStatistics* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientStatistics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.nucleo.odrive.ClientStatistics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.nucleo.odrive.ClientStatistics)
    MergeFrom(*source);
  }
}

void ClientStatistics::MergeFrom(const ClientStatistics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.nucleo.odrive.ClientStatistics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.max_latency() != 0) {
    set_max_latency(from.max_latency());
  }
  if (from.timeout_errors() != 0) {
    set_timeout_errors(from.timeout_errors());
  }
  if (from.uptime() != 0) {
    set_uptime(from.uptime());
  }
  if (from.synchronized() != 0) {
    set_synchronized(from.synchronized());
  }
}

void ClientStatistics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.nucleo.odrive.ClientStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientStatistics::CopyFrom(const ClientStatistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.nucleo.odrive.ClientStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientStatistics::IsInitialized() const {
  return true;
}

void ClientStatistics::Swap(ClientStatistics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientStatistics::InternalSwap(ClientStatistics* other) {
  using std::swap;
  swap(max_latency_, other->max_latency_);
  swap(timeout_errors_, other->timeout_errors_);
  swap(uptime_, other->uptime_);
  swap(synchronized_, other->synchronized_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ClientStatistics::GetMetadata() const {
  protobuf_goldo_2fnucleo_2fodrive_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2fodrive_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AxisStatus::InitAsDefaultInstance() {
  ::goldo::nucleo::odrive::_AxisStatus_default_instance_._instance.get_mutable()->errors_ = const_cast< ::goldo::nucleo::odrive::AxisErrorState*>(
      ::goldo::nucleo::odrive::AxisErrorState::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AxisStatus::kCurrentStateFieldNumber;
const int AxisStatus::kRequestedStateFieldNumber;
const int AxisStatus::kControlModeFieldNumber;
const int AxisStatus::kErrorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AxisStatus::AxisStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fnucleo_2fodrive_2eproto::scc_info_AxisStatus.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.nucleo.odrive.AxisStatus)
}
AxisStatus::AxisStatus(const AxisStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_errors()) {
    errors_ = new ::goldo::nucleo::odrive::AxisErrorState(*from.errors_);
  } else {
    errors_ = NULL;
  }
  ::memcpy(&current_state_, &from.current_state_,
    static_cast<size_t>(reinterpret_cast<char*>(&control_mode_) -
    reinterpret_cast<char*>(&current_state_)) + sizeof(control_mode_));
  // @@protoc_insertion_point(copy_constructor:goldo.nucleo.odrive.AxisStatus)
}

void AxisStatus::SharedCtor() {
  ::memset(&errors_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&control_mode_) -
      reinterpret_cast<char*>(&errors_)) + sizeof(control_mode_));
}

AxisStatus::~AxisStatus() {
  // @@protoc_insertion_point(destructor:goldo.nucleo.odrive.AxisStatus)
  SharedDtor();
}

void AxisStatus::SharedDtor() {
  if (this != internal_default_instance()) delete errors_;
}

void AxisStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AxisStatus::descriptor() {
  ::protobuf_goldo_2fnucleo_2fodrive_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2fodrive_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AxisStatus& AxisStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fnucleo_2fodrive_2eproto::scc_info_AxisStatus.base);
  return *internal_default_instance();
}


void AxisStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.nucleo.odrive.AxisStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && errors_ != NULL) {
    delete errors_;
  }
  errors_ = NULL;
  ::memset(&current_state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&control_mode_) -
      reinterpret_cast<char*>(&current_state_)) + sizeof(control_mode_));
  _internal_metadata_.Clear();
}

bool AxisStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.nucleo.odrive.AxisStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .goldo.nucleo.odrive.AxisState current_state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_current_state(static_cast< ::goldo::nucleo::odrive::AxisState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .goldo.nucleo.odrive.AxisState requested_state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_requested_state(static_cast< ::goldo::nucleo::odrive::AxisState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .goldo.nucleo.odrive.ControlMode control_mode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_control_mode(static_cast< ::goldo::nucleo::odrive::ControlMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .goldo.nucleo.odrive.AxisErrorState errors = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_errors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.nucleo.odrive.AxisStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.nucleo.odrive.AxisStatus)
  return false;
#undef DO_
}

void AxisStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.nucleo.odrive.AxisStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .goldo.nucleo.odrive.AxisState current_state = 1;
  if (this->current_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->current_state(), output);
  }

  // .goldo.nucleo.odrive.AxisState requested_state = 2;
  if (this->requested_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->requested_state(), output);
  }

  // .goldo.nucleo.odrive.ControlMode control_mode = 3;
  if (this->control_mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->control_mode(), output);
  }

  // .goldo.nucleo.odrive.AxisErrorState errors = 4;
  if (this->has_errors()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_errors(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.nucleo.odrive.AxisStatus)
}

::google::protobuf::uint8* AxisStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.nucleo.odrive.AxisStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .goldo.nucleo.odrive.AxisState current_state = 1;
  if (this->current_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->current_state(), target);
  }

  // .goldo.nucleo.odrive.AxisState requested_state = 2;
  if (this->requested_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->requested_state(), target);
  }

  // .goldo.nucleo.odrive.ControlMode control_mode = 3;
  if (this->control_mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->control_mode(), target);
  }

  // .goldo.nucleo.odrive.AxisErrorState errors = 4;
  if (this->has_errors()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_errors(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.nucleo.odrive.AxisStatus)
  return target;
}

size_t AxisStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.nucleo.odrive.AxisStatus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .goldo.nucleo.odrive.AxisErrorState errors = 4;
  if (this->has_errors()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *errors_);
  }

  // .goldo.nucleo.odrive.AxisState current_state = 1;
  if (this->current_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->current_state());
  }

  // .goldo.nucleo.odrive.AxisState requested_state = 2;
  if (this->requested_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->requested_state());
  }

  // .goldo.nucleo.odrive.ControlMode control_mode = 3;
  if (this->control_mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->control_mode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AxisStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.nucleo.odrive.AxisStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const AxisStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AxisStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.nucleo.odrive.AxisStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.nucleo.odrive.AxisStatus)
    MergeFrom(*source);
  }
}

void AxisStatus::MergeFrom(const AxisStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.nucleo.odrive.AxisStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_errors()) {
    mutable_errors()->::goldo::nucleo::odrive::AxisErrorState::MergeFrom(from.errors());
  }
  if (from.current_state() != 0) {
    set_current_state(from.current_state());
  }
  if (from.requested_state() != 0) {
    set_requested_state(from.requested_state());
  }
  if (from.control_mode() != 0) {
    set_control_mode(from.control_mode());
  }
}

void AxisStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.nucleo.odrive.AxisStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AxisStatus::CopyFrom(const AxisStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.nucleo.odrive.AxisStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AxisStatus::IsInitialized() const {
  return true;
}

void AxisStatus::Swap(AxisStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AxisStatus::InternalSwap(AxisStatus* other) {
  using std::swap;
  swap(errors_, other->errors_);
  swap(current_state_, other->current_state_);
  swap(requested_state_, other->requested_state_);
  swap(control_mode_, other->control_mode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AxisStatus::GetMetadata() const {
  protobuf_goldo_2fnucleo_2fodrive_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2fodrive_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Telemetry::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Telemetry::kTimestampFieldNumber;
const int Telemetry::kAxisFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Telemetry::Telemetry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fnucleo_2fodrive_2eproto::scc_info_Telemetry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.nucleo.odrive.Telemetry)
}
Telemetry::Telemetry(const Telemetry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      axis_(from.axis_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:goldo.nucleo.odrive.Telemetry)
}

void Telemetry::SharedCtor() {
  timestamp_ = 0u;
}

Telemetry::~Telemetry() {
  // @@protoc_insertion_point(destructor:goldo.nucleo.odrive.Telemetry)
  SharedDtor();
}

void Telemetry::SharedDtor() {
}

void Telemetry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Telemetry::descriptor() {
  ::protobuf_goldo_2fnucleo_2fodrive_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2fodrive_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Telemetry& Telemetry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fnucleo_2fodrive_2eproto::scc_info_Telemetry.base);
  return *internal_default_instance();
}


void Telemetry::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.nucleo.odrive.Telemetry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  axis_.Clear();
  timestamp_ = 0u;
  _internal_metadata_.Clear();
}

bool Telemetry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.nucleo.odrive.Telemetry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 timestamp = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .goldo.nucleo.odrive.AxisTelemetry axis = 2 [(.goldo.pb2_options.max_count) = 2, (.goldo.pb2_options.fixed_count) = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_axis()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.nucleo.odrive.Telemetry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.nucleo.odrive.Telemetry)
  return false;
#undef DO_
}

void Telemetry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.nucleo.odrive.Telemetry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 timestamp = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->timestamp(), output);
  }

  // repeated .goldo.nucleo.odrive.AxisTelemetry axis = 2 [(.goldo.pb2_options.max_count) = 2, (.goldo.pb2_options.fixed_count) = true];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->axis_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->axis(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.nucleo.odrive.Telemetry)
}

::google::protobuf::uint8* Telemetry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.nucleo.odrive.Telemetry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 timestamp = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->timestamp(), target);
  }

  // repeated .goldo.nucleo.odrive.AxisTelemetry axis = 2 [(.goldo.pb2_options.max_count) = 2, (.goldo.pb2_options.fixed_count) = true];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->axis_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->axis(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.nucleo.odrive.Telemetry)
  return target;
}

size_t Telemetry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.nucleo.odrive.Telemetry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .goldo.nucleo.odrive.AxisTelemetry axis = 2 [(.goldo.pb2_options.max_count) = 2, (.goldo.pb2_options.fixed_count) = true];
  {
    unsigned int count = static_cast<unsigned int>(this->axis_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->axis(static_cast<int>(i)));
    }
  }

  // uint32 timestamp = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Telemetry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.nucleo.odrive.Telemetry)
  GOOGLE_DCHECK_NE(&from, this);
  const Telemetry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Telemetry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.nucleo.odrive.Telemetry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.nucleo.odrive.Telemetry)
    MergeFrom(*source);
  }
}

void Telemetry::MergeFrom(const Telemetry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.nucleo.odrive.Telemetry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  axis_.MergeFrom(from.axis_);
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void Telemetry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.nucleo.odrive.Telemetry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Telemetry::CopyFrom(const Telemetry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.nucleo.odrive.Telemetry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Telemetry::IsInitialized() const {
  return true;
}

void Telemetry::Swap(Telemetry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Telemetry::InternalSwap(Telemetry* other) {
  using std::swap;
  CastToBase(&axis_)->InternalSwap(CastToBase(&other->axis_));
  swap(timestamp_, other->timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Telemetry::GetMetadata() const {
  protobuf_goldo_2fnucleo_2fodrive_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2fodrive_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ODriveStatus::InitAsDefaultInstance() {
  ::goldo::nucleo::odrive::_ODriveStatus_default_instance_._instance.get_mutable()->axis0_ = const_cast< ::goldo::nucleo::odrive::AxisStatus*>(
      ::goldo::nucleo::odrive::AxisStatus::internal_default_instance());
  ::goldo::nucleo::odrive::_ODriveStatus_default_instance_._instance.get_mutable()->axis1_ = const_cast< ::goldo::nucleo::odrive::AxisStatus*>(
      ::goldo::nucleo::odrive::AxisStatus::internal_default_instance());
  ::goldo::nucleo::odrive::_ODriveStatus_default_instance_._instance.get_mutable()->client_statistics_ = const_cast< ::goldo::nucleo::odrive::ClientStatistics*>(
      ::goldo::nucleo::odrive::ClientStatistics::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ODriveStatus::kSynchronizedFieldNumber;
const int ODriveStatus::kAxis0FieldNumber;
const int ODriveStatus::kAxis1FieldNumber;
const int ODriveStatus::kClientStatisticsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ODriveStatus::ODriveStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fnucleo_2fodrive_2eproto::scc_info_ODriveStatus.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.nucleo.odrive.ODriveStatus)
}
ODriveStatus::ODriveStatus(const ODriveStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_axis0()) {
    axis0_ = new ::goldo::nucleo::odrive::AxisStatus(*from.axis0_);
  } else {
    axis0_ = NULL;
  }
  if (from.has_axis1()) {
    axis1_ = new ::goldo::nucleo::odrive::AxisStatus(*from.axis1_);
  } else {
    axis1_ = NULL;
  }
  if (from.has_client_statistics()) {
    client_statistics_ = new ::goldo::nucleo::odrive::ClientStatistics(*from.client_statistics_);
  } else {
    client_statistics_ = NULL;
  }
  synchronized_ = from.synchronized_;
  // @@protoc_insertion_point(copy_constructor:goldo.nucleo.odrive.ODriveStatus)
}

void ODriveStatus::SharedCtor() {
  ::memset(&axis0_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&synchronized_) -
      reinterpret_cast<char*>(&axis0_)) + sizeof(synchronized_));
}

ODriveStatus::~ODriveStatus() {
  // @@protoc_insertion_point(destructor:goldo.nucleo.odrive.ODriveStatus)
  SharedDtor();
}

void ODriveStatus::SharedDtor() {
  if (this != internal_default_instance()) delete axis0_;
  if (this != internal_default_instance()) delete axis1_;
  if (this != internal_default_instance()) delete client_statistics_;
}

void ODriveStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ODriveStatus::descriptor() {
  ::protobuf_goldo_2fnucleo_2fodrive_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2fodrive_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ODriveStatus& ODriveStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fnucleo_2fodrive_2eproto::scc_info_ODriveStatus.base);
  return *internal_default_instance();
}


void ODriveStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.nucleo.odrive.ODriveStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && axis0_ != NULL) {
    delete axis0_;
  }
  axis0_ = NULL;
  if (GetArenaNoVirtual() == NULL && axis1_ != NULL) {
    delete axis1_;
  }
  axis1_ = NULL;
  if (GetArenaNoVirtual() == NULL && client_statistics_ != NULL) {
    delete client_statistics_;
  }
  client_statistics_ = NULL;
  synchronized_ = false;
  _internal_metadata_.Clear();
}

bool ODriveStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.nucleo.odrive.ODriveStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool synchronized = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &synchronized_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .goldo.nucleo.odrive.AxisStatus axis0 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_axis0()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .goldo.nucleo.odrive.AxisStatus axis1 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_axis1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .goldo.nucleo.odrive.ClientStatistics client_statistics = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_client_statistics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.nucleo.odrive.ODriveStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.nucleo.odrive.ODriveStatus)
  return false;
#undef DO_
}

void ODriveStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.nucleo.odrive.ODriveStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool synchronized = 1;
  if (this->synchronized() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->synchronized(), output);
  }

  // .goldo.nucleo.odrive.AxisStatus axis0 = 2;
  if (this->has_axis0()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_axis0(), output);
  }

  // .goldo.nucleo.odrive.AxisStatus axis1 = 3;
  if (this->has_axis1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_axis1(), output);
  }

  // .goldo.nucleo.odrive.ClientStatistics client_statistics = 4;
  if (this->has_client_statistics()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_client_statistics(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.nucleo.odrive.ODriveStatus)
}

::google::protobuf::uint8* ODriveStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.nucleo.odrive.ODriveStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool synchronized = 1;
  if (this->synchronized() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->synchronized(), target);
  }

  // .goldo.nucleo.odrive.AxisStatus axis0 = 2;
  if (this->has_axis0()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_axis0(), deterministic, target);
  }

  // .goldo.nucleo.odrive.AxisStatus axis1 = 3;
  if (this->has_axis1()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_axis1(), deterministic, target);
  }

  // .goldo.nucleo.odrive.ClientStatistics client_statistics = 4;
  if (this->has_client_statistics()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_client_statistics(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.nucleo.odrive.ODriveStatus)
  return target;
}

size_t ODriveStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.nucleo.odrive.ODriveStatus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .goldo.nucleo.odrive.AxisStatus axis0 = 2;
  if (this->has_axis0()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *axis0_);
  }

  // .goldo.nucleo.odrive.AxisStatus axis1 = 3;
  if (this->has_axis1()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *axis1_);
  }

  // .goldo.nucleo.odrive.ClientStatistics client_statistics = 4;
  if (this->has_client_statistics()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *client_statistics_);
  }

  // bool synchronized = 1;
  if (this->synchronized() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ODriveStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.nucleo.odrive.ODriveStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const ODriveStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ODriveStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.nucleo.odrive.ODriveStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.nucleo.odrive.ODriveStatus)
    MergeFrom(*source);
  }
}

void ODriveStatus::MergeFrom(const ODriveStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.nucleo.odrive.ODriveStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_axis0()) {
    mutable_axis0()->::goldo::nucleo::odrive::AxisStatus::MergeFrom(from.axis0());
  }
  if (from.has_axis1()) {
    mutable_axis1()->::goldo::nucleo::odrive::AxisStatus::MergeFrom(from.axis1());
  }
  if (from.has_client_statistics()) {
    mutable_client_statistics()->::goldo::nucleo::odrive::ClientStatistics::MergeFrom(from.client_statistics());
  }
  if (from.synchronized() != 0) {
    set_synchronized(from.synchronized());
  }
}

void ODriveStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.nucleo.odrive.ODriveStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ODriveStatus::CopyFrom(const ODriveStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.nucleo.odrive.ODriveStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ODriveStatus::IsInitialized() const {
  return true;
}

void ODriveStatus::Swap(ODriveStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ODriveStatus::InternalSwap(ODriveStatus* other) {
  using std::swap;
  swap(axis0_, other->axis0_);
  swap(axis1_, other->axis1_);
  swap(client_statistics_, other->client_statistics_);
  swap(synchronized_, other->synchronized_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ODriveStatus::GetMetadata() const {
  protobuf_goldo_2fnucleo_2fodrive_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2fodrive_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace odrive
}  // namespace nucleo
}  // namespace goldo
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::nucleo::odrive::RequestPacket* Arena::CreateMaybeMessage< ::goldo::nucleo::odrive::RequestPacket >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::nucleo::odrive::RequestPacket >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::nucleo::odrive::ResponsePacket* Arena::CreateMaybeMessage< ::goldo::nucleo::odrive::ResponsePacket >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::nucleo::odrive::ResponsePacket >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::nucleo::odrive::AxisTelemetry* Arena::CreateMaybeMessage< ::goldo::nucleo::odrive::AxisTelemetry >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::nucleo::odrive::AxisTelemetry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::nucleo::odrive::AxisErrorState* Arena::CreateMaybeMessage< ::goldo::nucleo::odrive::AxisErrorState >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::nucleo::odrive::AxisErrorState >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::nucleo::odrive::AxisState_* Arena::CreateMaybeMessage< ::goldo::nucleo::odrive::AxisState_ >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::nucleo::odrive::AxisState_ >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::nucleo::odrive::AxisErrorStates* Arena::CreateMaybeMessage< ::goldo::nucleo::odrive::AxisErrorStates >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::nucleo::odrive::AxisErrorStates >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::nucleo::odrive::AxisStates* Arena::CreateMaybeMessage< ::goldo::nucleo::odrive::AxisStates >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::nucleo::odrive::AxisStates >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::nucleo::odrive::ClientStatistics* Arena::CreateMaybeMessage< ::goldo::nucleo::odrive::ClientStatistics >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::nucleo::odrive::ClientStatistics >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::nucleo::odrive::AxisStatus* Arena::CreateMaybeMessage< ::goldo::nucleo::odrive::AxisStatus >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::nucleo::odrive::AxisStatus >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::nucleo::odrive::Telemetry* Arena::CreateMaybeMessage< ::goldo::nucleo::odrive::Telemetry >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::nucleo::odrive::Telemetry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::nucleo::odrive::ODriveStatus* Arena::CreateMaybeMessage< ::goldo::nucleo::odrive::ODriveStatus >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::nucleo::odrive::ODriveStatus >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
