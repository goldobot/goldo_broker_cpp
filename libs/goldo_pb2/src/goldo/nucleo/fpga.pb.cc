// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: goldo/nucleo/fpga.proto

#include "goldo/nucleo/fpga.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace goldo {
namespace nucleo {
namespace fpga {
class RegReadDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegRead>
      _instance;
} _RegRead_default_instance_;
class RegReadStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegReadStatus>
      _instance;
} _RegReadStatus_default_instance_;
class RegWriteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegWrite>
      _instance;
} _RegWrite_default_instance_;
class AdcReadDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AdcRead>
      _instance;
} _AdcRead_default_instance_;
class AdcReadOutDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AdcReadOut>
      _instance;
} _AdcReadOut_default_instance_;
}  // namespace fpga
}  // namespace nucleo
}  // namespace goldo
namespace protobuf_goldo_2fnucleo_2ffpga_2eproto {
static void InitDefaultsRegRead() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::nucleo::fpga::_RegRead_default_instance_;
    new (ptr) ::goldo::nucleo::fpga::RegRead();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::nucleo::fpga::RegRead::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RegRead =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRegRead}, {}};

static void InitDefaultsRegReadStatus() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::nucleo::fpga::_RegReadStatus_default_instance_;
    new (ptr) ::goldo::nucleo::fpga::RegReadStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::nucleo::fpga::RegReadStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RegReadStatus =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRegReadStatus}, {}};

static void InitDefaultsRegWrite() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::nucleo::fpga::_RegWrite_default_instance_;
    new (ptr) ::goldo::nucleo::fpga::RegWrite();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::nucleo::fpga::RegWrite::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RegWrite =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRegWrite}, {}};

static void InitDefaultsAdcRead() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::nucleo::fpga::_AdcRead_default_instance_;
    new (ptr) ::goldo::nucleo::fpga::AdcRead();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::nucleo::fpga::AdcRead::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AdcRead =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAdcRead}, {}};

static void InitDefaultsAdcReadOut() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::nucleo::fpga::_AdcReadOut_default_instance_;
    new (ptr) ::goldo::nucleo::fpga::AdcReadOut();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::nucleo::fpga::AdcReadOut::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AdcReadOut =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAdcReadOut}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_RegRead.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RegReadStatus.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RegWrite.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AdcRead.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AdcReadOut.base);
}

::google::protobuf::Metadata file_level_metadata[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::fpga::RegRead, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::fpga::RegRead, apb_address_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::fpga::RegReadStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::fpga::RegReadStatus, apb_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::fpga::RegReadStatus, apb_value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::fpga::RegWrite, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::fpga::RegWrite, apb_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::fpga::RegWrite, apb_value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::fpga::AdcRead, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::fpga::AdcRead, chan_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::fpga::AdcReadOut, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::fpga::AdcReadOut, chan_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::fpga::AdcReadOut, chan_val_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::goldo::nucleo::fpga::RegRead)},
  { 6, -1, sizeof(::goldo::nucleo::fpga::RegReadStatus)},
  { 13, -1, sizeof(::goldo::nucleo::fpga::RegWrite)},
  { 20, -1, sizeof(::goldo::nucleo::fpga::AdcRead)},
  { 26, -1, sizeof(::goldo::nucleo::fpga::AdcReadOut)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::nucleo::fpga::_RegRead_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::nucleo::fpga::_RegReadStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::nucleo::fpga::_RegWrite_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::nucleo::fpga::_AdcRead_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::nucleo::fpga::_AdcReadOut_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "goldo/nucleo/fpga.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\027goldo/nucleo/fpga.proto\022\021goldo.nucleo."
      "fpga\032\027goldo/pb2_options.proto\"$\n\007RegRead"
      "\022\031\n\013apb_address\030\001 \001(\007B\004\200\265\030\007\"C\n\rRegReadSt"
      "atus\022\031\n\013apb_address\030\001 \001(\007B\004\200\265\030\007\022\027\n\tapb_v"
      "alue\030\002 \001(\007B\004\200\265\030\007\">\n\010RegWrite\022\031\n\013apb_addr"
      "ess\030\001 \001(\007B\004\200\265\030\007\022\027\n\tapb_value\030\002 \001(\007B\004\200\265\030\007"
      "\"\035\n\007AdcRead\022\022\n\004chan\030\001 \001(\007B\004\200\265\030\007\"2\n\nAdcRe"
      "adOut\022\022\n\004chan\030\001 \001(\007B\004\200\265\030\007\022\020\n\010chan_val\030\002 "
      "\001(\002b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 331);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "goldo/nucleo/fpga.proto", &protobuf_RegisterTypes);
  ::protobuf_goldo_2fpb2_5foptions_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_goldo_2fnucleo_2ffpga_2eproto
namespace goldo {
namespace nucleo {
namespace fpga {

// ===================================================================

void RegRead::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegRead::kApbAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegRead::RegRead()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fnucleo_2ffpga_2eproto::scc_info_RegRead.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.nucleo.fpga.RegRead)
}
RegRead::RegRead(const RegRead& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  apb_address_ = from.apb_address_;
  // @@protoc_insertion_point(copy_constructor:goldo.nucleo.fpga.RegRead)
}

void RegRead::SharedCtor() {
  apb_address_ = 0u;
}

RegRead::~RegRead() {
  // @@protoc_insertion_point(destructor:goldo.nucleo.fpga.RegRead)
  SharedDtor();
}

void RegRead::SharedDtor() {
}

void RegRead::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RegRead::descriptor() {
  ::protobuf_goldo_2fnucleo_2ffpga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2ffpga_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegRead& RegRead::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fnucleo_2ffpga_2eproto::scc_info_RegRead.base);
  return *internal_default_instance();
}


void RegRead::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.nucleo.fpga.RegRead)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  apb_address_ = 0u;
  _internal_metadata_.Clear();
}

bool RegRead::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.nucleo.fpga.RegRead)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed32 apb_address = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &apb_address_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.nucleo.fpga.RegRead)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.nucleo.fpga.RegRead)
  return false;
#undef DO_
}

void RegRead::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.nucleo.fpga.RegRead)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 apb_address = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->apb_address() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->apb_address(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.nucleo.fpga.RegRead)
}

::google::protobuf::uint8* RegRead::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.nucleo.fpga.RegRead)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 apb_address = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->apb_address() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->apb_address(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.nucleo.fpga.RegRead)
  return target;
}

size_t RegRead::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.nucleo.fpga.RegRead)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // fixed32 apb_address = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->apb_address() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegRead::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.nucleo.fpga.RegRead)
  GOOGLE_DCHECK_NE(&from, this);
  const RegRead* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegRead>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.nucleo.fpga.RegRead)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.nucleo.fpga.RegRead)
    MergeFrom(*source);
  }
}

void RegRead::MergeFrom(const RegRead& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.nucleo.fpga.RegRead)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.apb_address() != 0) {
    set_apb_address(from.apb_address());
  }
}

void RegRead::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.nucleo.fpga.RegRead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegRead::CopyFrom(const RegRead& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.nucleo.fpga.RegRead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegRead::IsInitialized() const {
  return true;
}

void RegRead::Swap(RegRead* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegRead::InternalSwap(RegRead* other) {
  using std::swap;
  swap(apb_address_, other->apb_address_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RegRead::GetMetadata() const {
  protobuf_goldo_2fnucleo_2ffpga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2ffpga_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RegReadStatus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegReadStatus::kApbAddressFieldNumber;
const int RegReadStatus::kApbValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegReadStatus::RegReadStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fnucleo_2ffpga_2eproto::scc_info_RegReadStatus.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.nucleo.fpga.RegReadStatus)
}
RegReadStatus::RegReadStatus(const RegReadStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&apb_address_, &from.apb_address_,
    static_cast<size_t>(reinterpret_cast<char*>(&apb_value_) -
    reinterpret_cast<char*>(&apb_address_)) + sizeof(apb_value_));
  // @@protoc_insertion_point(copy_constructor:goldo.nucleo.fpga.RegReadStatus)
}

void RegReadStatus::SharedCtor() {
  ::memset(&apb_address_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&apb_value_) -
      reinterpret_cast<char*>(&apb_address_)) + sizeof(apb_value_));
}

RegReadStatus::~RegReadStatus() {
  // @@protoc_insertion_point(destructor:goldo.nucleo.fpga.RegReadStatus)
  SharedDtor();
}

void RegReadStatus::SharedDtor() {
}

void RegReadStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RegReadStatus::descriptor() {
  ::protobuf_goldo_2fnucleo_2ffpga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2ffpga_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegReadStatus& RegReadStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fnucleo_2ffpga_2eproto::scc_info_RegReadStatus.base);
  return *internal_default_instance();
}


void RegReadStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.nucleo.fpga.RegReadStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&apb_address_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&apb_value_) -
      reinterpret_cast<char*>(&apb_address_)) + sizeof(apb_value_));
  _internal_metadata_.Clear();
}

bool RegReadStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.nucleo.fpga.RegReadStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed32 apb_address = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &apb_address_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 apb_value = 2 [(.goldo.pb2_options.cpp_type) = UINT32];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &apb_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.nucleo.fpga.RegReadStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.nucleo.fpga.RegReadStatus)
  return false;
#undef DO_
}

void RegReadStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.nucleo.fpga.RegReadStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 apb_address = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->apb_address() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->apb_address(), output);
  }

  // fixed32 apb_value = 2 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->apb_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(2, this->apb_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.nucleo.fpga.RegReadStatus)
}

::google::protobuf::uint8* RegReadStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.nucleo.fpga.RegReadStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 apb_address = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->apb_address() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->apb_address(), target);
  }

  // fixed32 apb_value = 2 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->apb_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(2, this->apb_value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.nucleo.fpga.RegReadStatus)
  return target;
}

size_t RegReadStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.nucleo.fpga.RegReadStatus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // fixed32 apb_address = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->apb_address() != 0) {
    total_size += 1 + 4;
  }

  // fixed32 apb_value = 2 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->apb_value() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegReadStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.nucleo.fpga.RegReadStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const RegReadStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegReadStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.nucleo.fpga.RegReadStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.nucleo.fpga.RegReadStatus)
    MergeFrom(*source);
  }
}

void RegReadStatus::MergeFrom(const RegReadStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.nucleo.fpga.RegReadStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.apb_address() != 0) {
    set_apb_address(from.apb_address());
  }
  if (from.apb_value() != 0) {
    set_apb_value(from.apb_value());
  }
}

void RegReadStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.nucleo.fpga.RegReadStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegReadStatus::CopyFrom(const RegReadStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.nucleo.fpga.RegReadStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegReadStatus::IsInitialized() const {
  return true;
}

void RegReadStatus::Swap(RegReadStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegReadStatus::InternalSwap(RegReadStatus* other) {
  using std::swap;
  swap(apb_address_, other->apb_address_);
  swap(apb_value_, other->apb_value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RegReadStatus::GetMetadata() const {
  protobuf_goldo_2fnucleo_2ffpga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2ffpga_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RegWrite::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegWrite::kApbAddressFieldNumber;
const int RegWrite::kApbValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegWrite::RegWrite()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fnucleo_2ffpga_2eproto::scc_info_RegWrite.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.nucleo.fpga.RegWrite)
}
RegWrite::RegWrite(const RegWrite& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&apb_address_, &from.apb_address_,
    static_cast<size_t>(reinterpret_cast<char*>(&apb_value_) -
    reinterpret_cast<char*>(&apb_address_)) + sizeof(apb_value_));
  // @@protoc_insertion_point(copy_constructor:goldo.nucleo.fpga.RegWrite)
}

void RegWrite::SharedCtor() {
  ::memset(&apb_address_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&apb_value_) -
      reinterpret_cast<char*>(&apb_address_)) + sizeof(apb_value_));
}

RegWrite::~RegWrite() {
  // @@protoc_insertion_point(destructor:goldo.nucleo.fpga.RegWrite)
  SharedDtor();
}

void RegWrite::SharedDtor() {
}

void RegWrite::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RegWrite::descriptor() {
  ::protobuf_goldo_2fnucleo_2ffpga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2ffpga_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegWrite& RegWrite::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fnucleo_2ffpga_2eproto::scc_info_RegWrite.base);
  return *internal_default_instance();
}


void RegWrite::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.nucleo.fpga.RegWrite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&apb_address_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&apb_value_) -
      reinterpret_cast<char*>(&apb_address_)) + sizeof(apb_value_));
  _internal_metadata_.Clear();
}

bool RegWrite::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.nucleo.fpga.RegWrite)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed32 apb_address = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &apb_address_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 apb_value = 2 [(.goldo.pb2_options.cpp_type) = UINT32];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &apb_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.nucleo.fpga.RegWrite)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.nucleo.fpga.RegWrite)
  return false;
#undef DO_
}

void RegWrite::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.nucleo.fpga.RegWrite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 apb_address = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->apb_address() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->apb_address(), output);
  }

  // fixed32 apb_value = 2 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->apb_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(2, this->apb_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.nucleo.fpga.RegWrite)
}

::google::protobuf::uint8* RegWrite::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.nucleo.fpga.RegWrite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 apb_address = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->apb_address() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->apb_address(), target);
  }

  // fixed32 apb_value = 2 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->apb_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(2, this->apb_value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.nucleo.fpga.RegWrite)
  return target;
}

size_t RegWrite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.nucleo.fpga.RegWrite)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // fixed32 apb_address = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->apb_address() != 0) {
    total_size += 1 + 4;
  }

  // fixed32 apb_value = 2 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->apb_value() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegWrite::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.nucleo.fpga.RegWrite)
  GOOGLE_DCHECK_NE(&from, this);
  const RegWrite* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegWrite>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.nucleo.fpga.RegWrite)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.nucleo.fpga.RegWrite)
    MergeFrom(*source);
  }
}

void RegWrite::MergeFrom(const RegWrite& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.nucleo.fpga.RegWrite)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.apb_address() != 0) {
    set_apb_address(from.apb_address());
  }
  if (from.apb_value() != 0) {
    set_apb_value(from.apb_value());
  }
}

void RegWrite::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.nucleo.fpga.RegWrite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegWrite::CopyFrom(const RegWrite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.nucleo.fpga.RegWrite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegWrite::IsInitialized() const {
  return true;
}

void RegWrite::Swap(RegWrite* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegWrite::InternalSwap(RegWrite* other) {
  using std::swap;
  swap(apb_address_, other->apb_address_);
  swap(apb_value_, other->apb_value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RegWrite::GetMetadata() const {
  protobuf_goldo_2fnucleo_2ffpga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2ffpga_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AdcRead::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AdcRead::kChanFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AdcRead::AdcRead()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fnucleo_2ffpga_2eproto::scc_info_AdcRead.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.nucleo.fpga.AdcRead)
}
AdcRead::AdcRead(const AdcRead& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chan_ = from.chan_;
  // @@protoc_insertion_point(copy_constructor:goldo.nucleo.fpga.AdcRead)
}

void AdcRead::SharedCtor() {
  chan_ = 0u;
}

AdcRead::~AdcRead() {
  // @@protoc_insertion_point(destructor:goldo.nucleo.fpga.AdcRead)
  SharedDtor();
}

void AdcRead::SharedDtor() {
}

void AdcRead::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AdcRead::descriptor() {
  ::protobuf_goldo_2fnucleo_2ffpga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2ffpga_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AdcRead& AdcRead::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fnucleo_2ffpga_2eproto::scc_info_AdcRead.base);
  return *internal_default_instance();
}


void AdcRead::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.nucleo.fpga.AdcRead)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  chan_ = 0u;
  _internal_metadata_.Clear();
}

bool AdcRead::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.nucleo.fpga.AdcRead)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed32 chan = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &chan_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.nucleo.fpga.AdcRead)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.nucleo.fpga.AdcRead)
  return false;
#undef DO_
}

void AdcRead::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.nucleo.fpga.AdcRead)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 chan = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->chan() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->chan(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.nucleo.fpga.AdcRead)
}

::google::protobuf::uint8* AdcRead::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.nucleo.fpga.AdcRead)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 chan = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->chan() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->chan(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.nucleo.fpga.AdcRead)
  return target;
}

size_t AdcRead::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.nucleo.fpga.AdcRead)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // fixed32 chan = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->chan() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AdcRead::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.nucleo.fpga.AdcRead)
  GOOGLE_DCHECK_NE(&from, this);
  const AdcRead* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AdcRead>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.nucleo.fpga.AdcRead)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.nucleo.fpga.AdcRead)
    MergeFrom(*source);
  }
}

void AdcRead::MergeFrom(const AdcRead& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.nucleo.fpga.AdcRead)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.chan() != 0) {
    set_chan(from.chan());
  }
}

void AdcRead::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.nucleo.fpga.AdcRead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AdcRead::CopyFrom(const AdcRead& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.nucleo.fpga.AdcRead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdcRead::IsInitialized() const {
  return true;
}

void AdcRead::Swap(AdcRead* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AdcRead::InternalSwap(AdcRead* other) {
  using std::swap;
  swap(chan_, other->chan_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AdcRead::GetMetadata() const {
  protobuf_goldo_2fnucleo_2ffpga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2ffpga_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AdcReadOut::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AdcReadOut::kChanFieldNumber;
const int AdcReadOut::kChanValFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AdcReadOut::AdcReadOut()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fnucleo_2ffpga_2eproto::scc_info_AdcReadOut.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.nucleo.fpga.AdcReadOut)
}
AdcReadOut::AdcReadOut(const AdcReadOut& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&chan_, &from.chan_,
    static_cast<size_t>(reinterpret_cast<char*>(&chan_val_) -
    reinterpret_cast<char*>(&chan_)) + sizeof(chan_val_));
  // @@protoc_insertion_point(copy_constructor:goldo.nucleo.fpga.AdcReadOut)
}

void AdcReadOut::SharedCtor() {
  ::memset(&chan_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&chan_val_) -
      reinterpret_cast<char*>(&chan_)) + sizeof(chan_val_));
}

AdcReadOut::~AdcReadOut() {
  // @@protoc_insertion_point(destructor:goldo.nucleo.fpga.AdcReadOut)
  SharedDtor();
}

void AdcReadOut::SharedDtor() {
}

void AdcReadOut::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AdcReadOut::descriptor() {
  ::protobuf_goldo_2fnucleo_2ffpga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2ffpga_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AdcReadOut& AdcReadOut::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fnucleo_2ffpga_2eproto::scc_info_AdcReadOut.base);
  return *internal_default_instance();
}


void AdcReadOut::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.nucleo.fpga.AdcReadOut)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&chan_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&chan_val_) -
      reinterpret_cast<char*>(&chan_)) + sizeof(chan_val_));
  _internal_metadata_.Clear();
}

bool AdcReadOut::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.nucleo.fpga.AdcReadOut)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed32 chan = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &chan_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float chan_val = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &chan_val_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.nucleo.fpga.AdcReadOut)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.nucleo.fpga.AdcReadOut)
  return false;
#undef DO_
}

void AdcReadOut::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.nucleo.fpga.AdcReadOut)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 chan = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->chan() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->chan(), output);
  }

  // float chan_val = 2;
  if (this->chan_val() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->chan_val(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.nucleo.fpga.AdcReadOut)
}

::google::protobuf::uint8* AdcReadOut::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.nucleo.fpga.AdcReadOut)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 chan = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->chan() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->chan(), target);
  }

  // float chan_val = 2;
  if (this->chan_val() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->chan_val(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.nucleo.fpga.AdcReadOut)
  return target;
}

size_t AdcReadOut::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.nucleo.fpga.AdcReadOut)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // fixed32 chan = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  if (this->chan() != 0) {
    total_size += 1 + 4;
  }

  // float chan_val = 2;
  if (this->chan_val() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AdcReadOut::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.nucleo.fpga.AdcReadOut)
  GOOGLE_DCHECK_NE(&from, this);
  const AdcReadOut* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AdcReadOut>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.nucleo.fpga.AdcReadOut)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.nucleo.fpga.AdcReadOut)
    MergeFrom(*source);
  }
}

void AdcReadOut::MergeFrom(const AdcReadOut& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.nucleo.fpga.AdcReadOut)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.chan() != 0) {
    set_chan(from.chan());
  }
  if (from.chan_val() != 0) {
    set_chan_val(from.chan_val());
  }
}

void AdcReadOut::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.nucleo.fpga.AdcReadOut)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AdcReadOut::CopyFrom(const AdcReadOut& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.nucleo.fpga.AdcReadOut)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdcReadOut::IsInitialized() const {
  return true;
}

void AdcReadOut::Swap(AdcReadOut* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AdcReadOut::InternalSwap(AdcReadOut* other) {
  using std::swap;
  swap(chan_, other->chan_);
  swap(chan_val_, other->chan_val_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AdcReadOut::GetMetadata() const {
  protobuf_goldo_2fnucleo_2ffpga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2ffpga_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace fpga
}  // namespace nucleo
}  // namespace goldo
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::nucleo::fpga::RegRead* Arena::CreateMaybeMessage< ::goldo::nucleo::fpga::RegRead >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::nucleo::fpga::RegRead >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::nucleo::fpga::RegReadStatus* Arena::CreateMaybeMessage< ::goldo::nucleo::fpga::RegReadStatus >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::nucleo::fpga::RegReadStatus >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::nucleo::fpga::RegWrite* Arena::CreateMaybeMessage< ::goldo::nucleo::fpga::RegWrite >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::nucleo::fpga::RegWrite >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::nucleo::fpga::AdcRead* Arena::CreateMaybeMessage< ::goldo::nucleo::fpga::AdcRead >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::nucleo::fpga::AdcRead >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::nucleo::fpga::AdcReadOut* Arena::CreateMaybeMessage< ::goldo::nucleo::fpga::AdcReadOut >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::nucleo::fpga::AdcReadOut >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
