// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: goldo/nucleo/statistics.proto

#ifndef PROTOBUF_INCLUDED_goldo_2fnucleo_2fstatistics_2eproto
#define PROTOBUF_INCLUDED_goldo_2fnucleo_2fstatistics_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "goldo/pb2_options.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_goldo_2fnucleo_2fstatistics_2eproto 

namespace protobuf_goldo_2fnucleo_2fstatistics_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[8];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_goldo_2fnucleo_2fstatistics_2eproto
namespace goldo {
namespace nucleo {
namespace statistics {
class CommDeserializerStatistics;
class CommDeserializerStatisticsDefaultTypeInternal;
extern CommDeserializerStatisticsDefaultTypeInternal _CommDeserializerStatistics_default_instance_;
class CommSerializerStatistics;
class CommSerializerStatisticsDefaultTypeInternal;
extern CommSerializerStatisticsDefaultTypeInternal _CommSerializerStatistics_default_instance_;
class MessageQueueStatistics;
class MessageQueueStatisticsDefaultTypeInternal;
extern MessageQueueStatisticsDefaultTypeInternal _MessageQueueStatistics_default_instance_;
class ODriveCommTaskStatistics;
class ODriveCommTaskStatisticsDefaultTypeInternal;
extern ODriveCommTaskStatisticsDefaultTypeInternal _ODriveCommTaskStatistics_default_instance_;
class ODriveStreamParserStatistics;
class ODriveStreamParserStatisticsDefaultTypeInternal;
extern ODriveStreamParserStatisticsDefaultTypeInternal _ODriveStreamParserStatistics_default_instance_;
class ODriveStreamWriterStatistics;
class ODriveStreamWriterStatisticsDefaultTypeInternal;
extern ODriveStreamWriterStatisticsDefaultTypeInternal _ODriveStreamWriterStatistics_default_instance_;
class PropulsionTaskStatistics;
class PropulsionTaskStatisticsDefaultTypeInternal;
extern PropulsionTaskStatisticsDefaultTypeInternal _PropulsionTaskStatistics_default_instance_;
class UARTCommTaskStatistics;
class UARTCommTaskStatisticsDefaultTypeInternal;
extern UARTCommTaskStatisticsDefaultTypeInternal _UARTCommTaskStatistics_default_instance_;
}  // namespace statistics
}  // namespace nucleo
}  // namespace goldo
namespace google {
namespace protobuf {
template<> ::goldo::nucleo::statistics::CommDeserializerStatistics* Arena::CreateMaybeMessage<::goldo::nucleo::statistics::CommDeserializerStatistics>(Arena*);
template<> ::goldo::nucleo::statistics::CommSerializerStatistics* Arena::CreateMaybeMessage<::goldo::nucleo::statistics::CommSerializerStatistics>(Arena*);
template<> ::goldo::nucleo::statistics::MessageQueueStatistics* Arena::CreateMaybeMessage<::goldo::nucleo::statistics::MessageQueueStatistics>(Arena*);
template<> ::goldo::nucleo::statistics::ODriveCommTaskStatistics* Arena::CreateMaybeMessage<::goldo::nucleo::statistics::ODriveCommTaskStatistics>(Arena*);
template<> ::goldo::nucleo::statistics::ODriveStreamParserStatistics* Arena::CreateMaybeMessage<::goldo::nucleo::statistics::ODriveStreamParserStatistics>(Arena*);
template<> ::goldo::nucleo::statistics::ODriveStreamWriterStatistics* Arena::CreateMaybeMessage<::goldo::nucleo::statistics::ODriveStreamWriterStatistics>(Arena*);
template<> ::goldo::nucleo::statistics::PropulsionTaskStatistics* Arena::CreateMaybeMessage<::goldo::nucleo::statistics::PropulsionTaskStatistics>(Arena*);
template<> ::goldo::nucleo::statistics::UARTCommTaskStatistics* Arena::CreateMaybeMessage<::goldo::nucleo::statistics::UARTCommTaskStatistics>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace goldo {
namespace nucleo {
namespace statistics {

// ===================================================================

class MessageQueueStatistics : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:goldo.nucleo.statistics.MessageQueueStatistics) */ {
 public:
  MessageQueueStatistics();
  virtual ~MessageQueueStatistics();

  MessageQueueStatistics(const MessageQueueStatistics& from);

  inline MessageQueueStatistics& operator=(const MessageQueueStatistics& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MessageQueueStatistics(MessageQueueStatistics&& from) noexcept
    : MessageQueueStatistics() {
    *this = ::std::move(from);
  }

  inline MessageQueueStatistics& operator=(MessageQueueStatistics&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageQueueStatistics& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MessageQueueStatistics* internal_default_instance() {
    return reinterpret_cast<const MessageQueueStatistics*>(
               &_MessageQueueStatistics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(MessageQueueStatistics* other);
  friend void swap(MessageQueueStatistics& a, MessageQueueStatistics& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MessageQueueStatistics* New() const final {
    return CreateMaybeMessage<MessageQueueStatistics>(NULL);
  }

  MessageQueueStatistics* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MessageQueueStatistics>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MessageQueueStatistics& from);
  void MergeFrom(const MessageQueueStatistics& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MessageQueueStatistics* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 min_available_capacity = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  void clear_min_available_capacity();
  static const int kMinAvailableCapacityFieldNumber = 1;
  ::google::protobuf::uint32 min_available_capacity() const;
  void set_min_available_capacity(::google::protobuf::uint32 value);

  // uint32 bytes_pushed = 2 [(.goldo.pb2_options.cpp_type) = UINT32];
  void clear_bytes_pushed();
  static const int kBytesPushedFieldNumber = 2;
  ::google::protobuf::uint32 bytes_pushed() const;
  void set_bytes_pushed(::google::protobuf::uint32 value);

  // uint32 messages_pushed = 3 [(.goldo.pb2_options.cpp_type) = UINT32];
  void clear_messages_pushed();
  static const int kMessagesPushedFieldNumber = 3;
  ::google::protobuf::uint32 messages_pushed() const;
  void set_messages_pushed(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:goldo.nucleo.statistics.MessageQueueStatistics)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 min_available_capacity_;
  ::google::protobuf::uint32 bytes_pushed_;
  ::google::protobuf::uint32 messages_pushed_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_goldo_2fnucleo_2fstatistics_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CommSerializerStatistics : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:goldo.nucleo.statistics.CommSerializerStatistics) */ {
 public:
  CommSerializerStatistics();
  virtual ~CommSerializerStatistics();

  CommSerializerStatistics(const CommSerializerStatistics& from);

  inline CommSerializerStatistics& operator=(const CommSerializerStatistics& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CommSerializerStatistics(CommSerializerStatistics&& from) noexcept
    : CommSerializerStatistics() {
    *this = ::std::move(from);
  }

  inline CommSerializerStatistics& operator=(CommSerializerStatistics&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CommSerializerStatistics& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CommSerializerStatistics* internal_default_instance() {
    return reinterpret_cast<const CommSerializerStatistics*>(
               &_CommSerializerStatistics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(CommSerializerStatistics* other);
  friend void swap(CommSerializerStatistics& a, CommSerializerStatistics& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CommSerializerStatistics* New() const final {
    return CreateMaybeMessage<CommSerializerStatistics>(NULL);
  }

  CommSerializerStatistics* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CommSerializerStatistics>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CommSerializerStatistics& from);
  void MergeFrom(const CommSerializerStatistics& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CommSerializerStatistics* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 messages_sent = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  void clear_messages_sent();
  static const int kMessagesSentFieldNumber = 1;
  ::google::protobuf::uint32 messages_sent() const;
  void set_messages_sent(::google::protobuf::uint32 value);

  // uint32 bytes_sent = 2 [(.goldo.pb2_options.cpp_type) = UINT32];
  void clear_bytes_sent();
  static const int kBytesSentFieldNumber = 2;
  ::google::protobuf::uint32 bytes_sent() const;
  void set_bytes_sent(::google::protobuf::uint32 value);

  // uint32 buffer_high_watermark = 3 [(.goldo.pb2_options.cpp_type) = UINT32];
  void clear_buffer_high_watermark();
  static const int kBufferHighWatermarkFieldNumber = 3;
  ::google::protobuf::uint32 buffer_high_watermark() const;
  void set_buffer_high_watermark(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:goldo.nucleo.statistics.CommSerializerStatistics)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 messages_sent_;
  ::google::protobuf::uint32 bytes_sent_;
  ::google::protobuf::uint32 buffer_high_watermark_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_goldo_2fnucleo_2fstatistics_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CommDeserializerStatistics : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:goldo.nucleo.statistics.CommDeserializerStatistics) */ {
 public:
  CommDeserializerStatistics();
  virtual ~CommDeserializerStatistics();

  CommDeserializerStatistics(const CommDeserializerStatistics& from);

  inline CommDeserializerStatistics& operator=(const CommDeserializerStatistics& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CommDeserializerStatistics(CommDeserializerStatistics&& from) noexcept
    : CommDeserializerStatistics() {
    *this = ::std::move(from);
  }

  inline CommDeserializerStatistics& operator=(CommDeserializerStatistics&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CommDeserializerStatistics& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CommDeserializerStatistics* internal_default_instance() {
    return reinterpret_cast<const CommDeserializerStatistics*>(
               &_CommDeserializerStatistics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(CommDeserializerStatistics* other);
  friend void swap(CommDeserializerStatistics& a, CommDeserializerStatistics& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CommDeserializerStatistics* New() const final {
    return CreateMaybeMessage<CommDeserializerStatistics>(NULL);
  }

  CommDeserializerStatistics* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CommDeserializerStatistics>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CommDeserializerStatistics& from);
  void MergeFrom(const CommDeserializerStatistics& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CommDeserializerStatistics* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 messages_received = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  void clear_messages_received();
  static const int kMessagesReceivedFieldNumber = 1;
  ::google::protobuf::uint32 messages_received() const;
  void set_messages_received(::google::protobuf::uint32 value);

  // uint32 bytes_received = 2 [(.goldo.pb2_options.cpp_type) = UINT32];
  void clear_bytes_received();
  static const int kBytesReceivedFieldNumber = 2;
  ::google::protobuf::uint32 bytes_received() const;
  void set_bytes_received(::google::protobuf::uint32 value);

  // uint32 sequence_errors = 3 [(.goldo.pb2_options.cpp_type) = UINT32];
  void clear_sequence_errors();
  static const int kSequenceErrorsFieldNumber = 3;
  ::google::protobuf::uint32 sequence_errors() const;
  void set_sequence_errors(::google::protobuf::uint32 value);

  // uint32 crc_errors = 4 [(.goldo.pb2_options.cpp_type) = UINT32];
  void clear_crc_errors();
  static const int kCrcErrorsFieldNumber = 4;
  ::google::protobuf::uint32 crc_errors() const;
  void set_crc_errors(::google::protobuf::uint32 value);

  // uint32 buffer_high_watermark = 5 [(.goldo.pb2_options.cpp_type) = UINT32];
  void clear_buffer_high_watermark();
  static const int kBufferHighWatermarkFieldNumber = 5;
  ::google::protobuf::uint32 buffer_high_watermark() const;
  void set_buffer_high_watermark(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:goldo.nucleo.statistics.CommDeserializerStatistics)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 messages_received_;
  ::google::protobuf::uint32 bytes_received_;
  ::google::protobuf::uint32 sequence_errors_;
  ::google::protobuf::uint32 crc_errors_;
  ::google::protobuf::uint32 buffer_high_watermark_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_goldo_2fnucleo_2fstatistics_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ODriveStreamParserStatistics : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:goldo.nucleo.statistics.ODriveStreamParserStatistics) */ {
 public:
  ODriveStreamParserStatistics();
  virtual ~ODriveStreamParserStatistics();

  ODriveStreamParserStatistics(const ODriveStreamParserStatistics& from);

  inline ODriveStreamParserStatistics& operator=(const ODriveStreamParserStatistics& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ODriveStreamParserStatistics(ODriveStreamParserStatistics&& from) noexcept
    : ODriveStreamParserStatistics() {
    *this = ::std::move(from);
  }

  inline ODriveStreamParserStatistics& operator=(ODriveStreamParserStatistics&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ODriveStreamParserStatistics& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ODriveStreamParserStatistics* internal_default_instance() {
    return reinterpret_cast<const ODriveStreamParserStatistics*>(
               &_ODriveStreamParserStatistics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(ODriveStreamParserStatistics* other);
  friend void swap(ODriveStreamParserStatistics& a, ODriveStreamParserStatistics& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ODriveStreamParserStatistics* New() const final {
    return CreateMaybeMessage<ODriveStreamParserStatistics>(NULL);
  }

  ODriveStreamParserStatistics* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ODriveStreamParserStatistics>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ODriveStreamParserStatistics& from);
  void MergeFrom(const ODriveStreamParserStatistics& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ODriveStreamParserStatistics* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 bytes_received = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  void clear_bytes_received();
  static const int kBytesReceivedFieldNumber = 1;
  ::google::protobuf::uint32 bytes_received() const;
  void set_bytes_received(::google::protobuf::uint32 value);

  // uint32 messages_received = 2 [(.goldo.pb2_options.cpp_type) = UINT16];
  void clear_messages_received();
  static const int kMessagesReceivedFieldNumber = 2;
  ::google::protobuf::uint32 messages_received() const;
  void set_messages_received(::google::protobuf::uint32 value);

  // uint32 rx_errors = 3 [(.goldo.pb2_options.cpp_type) = UINT16];
  void clear_rx_errors();
  static const int kRxErrorsFieldNumber = 3;
  ::google::protobuf::uint32 rx_errors() const;
  void set_rx_errors(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:goldo.nucleo.statistics.ODriveStreamParserStatistics)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 bytes_received_;
  ::google::protobuf::uint32 messages_received_;
  ::google::protobuf::uint32 rx_errors_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_goldo_2fnucleo_2fstatistics_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ODriveStreamWriterStatistics : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:goldo.nucleo.statistics.ODriveStreamWriterStatistics) */ {
 public:
  ODriveStreamWriterStatistics();
  virtual ~ODriveStreamWriterStatistics();

  ODriveStreamWriterStatistics(const ODriveStreamWriterStatistics& from);

  inline ODriveStreamWriterStatistics& operator=(const ODriveStreamWriterStatistics& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ODriveStreamWriterStatistics(ODriveStreamWriterStatistics&& from) noexcept
    : ODriveStreamWriterStatistics() {
    *this = ::std::move(from);
  }

  inline ODriveStreamWriterStatistics& operator=(ODriveStreamWriterStatistics&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ODriveStreamWriterStatistics& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ODriveStreamWriterStatistics* internal_default_instance() {
    return reinterpret_cast<const ODriveStreamWriterStatistics*>(
               &_ODriveStreamWriterStatistics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(ODriveStreamWriterStatistics* other);
  friend void swap(ODriveStreamWriterStatistics& a, ODriveStreamWriterStatistics& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ODriveStreamWriterStatistics* New() const final {
    return CreateMaybeMessage<ODriveStreamWriterStatistics>(NULL);
  }

  ODriveStreamWriterStatistics* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ODriveStreamWriterStatistics>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ODriveStreamWriterStatistics& from);
  void MergeFrom(const ODriveStreamWriterStatistics& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ODriveStreamWriterStatistics* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 bytes_sent = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  void clear_bytes_sent();
  static const int kBytesSentFieldNumber = 1;
  ::google::protobuf::uint32 bytes_sent() const;
  void set_bytes_sent(::google::protobuf::uint32 value);

  // uint32 messages_sent = 2 [(.goldo.pb2_options.cpp_type) = UINT16];
  void clear_messages_sent();
  static const int kMessagesSentFieldNumber = 2;
  ::google::protobuf::uint32 messages_sent() const;
  void set_messages_sent(::google::protobuf::uint32 value);

  // uint32 tx_highwater = 3 [(.goldo.pb2_options.cpp_type) = UINT16];
  void clear_tx_highwater();
  static const int kTxHighwaterFieldNumber = 3;
  ::google::protobuf::uint32 tx_highwater() const;
  void set_tx_highwater(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:goldo.nucleo.statistics.ODriveStreamWriterStatistics)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 bytes_sent_;
  ::google::protobuf::uint32 messages_sent_;
  ::google::protobuf::uint32 tx_highwater_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_goldo_2fnucleo_2fstatistics_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UARTCommTaskStatistics : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:goldo.nucleo.statistics.UARTCommTaskStatistics) */ {
 public:
  UARTCommTaskStatistics();
  virtual ~UARTCommTaskStatistics();

  UARTCommTaskStatistics(const UARTCommTaskStatistics& from);

  inline UARTCommTaskStatistics& operator=(const UARTCommTaskStatistics& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UARTCommTaskStatistics(UARTCommTaskStatistics&& from) noexcept
    : UARTCommTaskStatistics() {
    *this = ::std::move(from);
  }

  inline UARTCommTaskStatistics& operator=(UARTCommTaskStatistics&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UARTCommTaskStatistics& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UARTCommTaskStatistics* internal_default_instance() {
    return reinterpret_cast<const UARTCommTaskStatistics*>(
               &_UARTCommTaskStatistics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(UARTCommTaskStatistics* other);
  friend void swap(UARTCommTaskStatistics& a, UARTCommTaskStatistics& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UARTCommTaskStatistics* New() const final {
    return CreateMaybeMessage<UARTCommTaskStatistics>(NULL);
  }

  UARTCommTaskStatistics* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UARTCommTaskStatistics>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UARTCommTaskStatistics& from);
  void MergeFrom(const UARTCommTaskStatistics& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UARTCommTaskStatistics* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .goldo.nucleo.statistics.CommSerializerStatistics serializer = 2;
  bool has_serializer() const;
  void clear_serializer();
  static const int kSerializerFieldNumber = 2;
  private:
  const ::goldo::nucleo::statistics::CommSerializerStatistics& _internal_serializer() const;
  public:
  const ::goldo::nucleo::statistics::CommSerializerStatistics& serializer() const;
  ::goldo::nucleo::statistics::CommSerializerStatistics* release_serializer();
  ::goldo::nucleo::statistics::CommSerializerStatistics* mutable_serializer();
  void set_allocated_serializer(::goldo::nucleo::statistics::CommSerializerStatistics* serializer);

  // .goldo.nucleo.statistics.CommDeserializerStatistics deserializer = 3;
  bool has_deserializer() const;
  void clear_deserializer();
  static const int kDeserializerFieldNumber = 3;
  private:
  const ::goldo::nucleo::statistics::CommDeserializerStatistics& _internal_deserializer() const;
  public:
  const ::goldo::nucleo::statistics::CommDeserializerStatistics& deserializer() const;
  ::goldo::nucleo::statistics::CommDeserializerStatistics* release_deserializer();
  ::goldo::nucleo::statistics::CommDeserializerStatistics* mutable_deserializer();
  void set_allocated_deserializer(::goldo::nucleo::statistics::CommDeserializerStatistics* deserializer);

  // .goldo.nucleo.statistics.CommSerializerStatistics serializer_ftdi = 4;
  bool has_serializer_ftdi() const;
  void clear_serializer_ftdi();
  static const int kSerializerFtdiFieldNumber = 4;
  private:
  const ::goldo::nucleo::statistics::CommSerializerStatistics& _internal_serializer_ftdi() const;
  public:
  const ::goldo::nucleo::statistics::CommSerializerStatistics& serializer_ftdi() const;
  ::goldo::nucleo::statistics::CommSerializerStatistics* release_serializer_ftdi();
  ::goldo::nucleo::statistics::CommSerializerStatistics* mutable_serializer_ftdi();
  void set_allocated_serializer_ftdi(::goldo::nucleo::statistics::CommSerializerStatistics* serializer_ftdi);

  // .goldo.nucleo.statistics.CommDeserializerStatistics deserializer_fdti = 5;
  bool has_deserializer_fdti() const;
  void clear_deserializer_fdti();
  static const int kDeserializerFdtiFieldNumber = 5;
  private:
  const ::goldo::nucleo::statistics::CommDeserializerStatistics& _internal_deserializer_fdti() const;
  public:
  const ::goldo::nucleo::statistics::CommDeserializerStatistics& deserializer_fdti() const;
  ::goldo::nucleo::statistics::CommDeserializerStatistics* release_deserializer_fdti();
  ::goldo::nucleo::statistics::CommDeserializerStatistics* mutable_deserializer_fdti();
  void set_allocated_deserializer_fdti(::goldo::nucleo::statistics::CommDeserializerStatistics* deserializer_fdti);

  // .goldo.nucleo.statistics.MessageQueueStatistics queue_out = 6;
  bool has_queue_out() const;
  void clear_queue_out();
  static const int kQueueOutFieldNumber = 6;
  private:
  const ::goldo::nucleo::statistics::MessageQueueStatistics& _internal_queue_out() const;
  public:
  const ::goldo::nucleo::statistics::MessageQueueStatistics& queue_out() const;
  ::goldo::nucleo::statistics::MessageQueueStatistics* release_queue_out();
  ::goldo::nucleo::statistics::MessageQueueStatistics* mutable_queue_out();
  void set_allocated_queue_out(::goldo::nucleo::statistics::MessageQueueStatistics* queue_out);

  // .goldo.nucleo.statistics.MessageQueueStatistics queue_out_prio = 7;
  bool has_queue_out_prio() const;
  void clear_queue_out_prio();
  static const int kQueueOutPrioFieldNumber = 7;
  private:
  const ::goldo::nucleo::statistics::MessageQueueStatistics& _internal_queue_out_prio() const;
  public:
  const ::goldo::nucleo::statistics::MessageQueueStatistics& queue_out_prio() const;
  ::goldo::nucleo::statistics::MessageQueueStatistics* release_queue_out_prio();
  ::goldo::nucleo::statistics::MessageQueueStatistics* mutable_queue_out_prio();
  void set_allocated_queue_out_prio(::goldo::nucleo::statistics::MessageQueueStatistics* queue_out_prio);

  // .goldo.nucleo.statistics.MessageQueueStatistics queue_out_ftdi = 8;
  bool has_queue_out_ftdi() const;
  void clear_queue_out_ftdi();
  static const int kQueueOutFtdiFieldNumber = 8;
  private:
  const ::goldo::nucleo::statistics::MessageQueueStatistics& _internal_queue_out_ftdi() const;
  public:
  const ::goldo::nucleo::statistics::MessageQueueStatistics& queue_out_ftdi() const;
  ::goldo::nucleo::statistics::MessageQueueStatistics* release_queue_out_ftdi();
  ::goldo::nucleo::statistics::MessageQueueStatistics* mutable_queue_out_ftdi();
  void set_allocated_queue_out_ftdi(::goldo::nucleo::statistics::MessageQueueStatistics* queue_out_ftdi);

  // uint32 max_cycles = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  void clear_max_cycles();
  static const int kMaxCyclesFieldNumber = 1;
  ::google::protobuf::uint32 max_cycles() const;
  void set_max_cycles(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:goldo.nucleo.statistics.UARTCommTaskStatistics)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::goldo::nucleo::statistics::CommSerializerStatistics* serializer_;
  ::goldo::nucleo::statistics::CommDeserializerStatistics* deserializer_;
  ::goldo::nucleo::statistics::CommSerializerStatistics* serializer_ftdi_;
  ::goldo::nucleo::statistics::CommDeserializerStatistics* deserializer_fdti_;
  ::goldo::nucleo::statistics::MessageQueueStatistics* queue_out_;
  ::goldo::nucleo::statistics::MessageQueueStatistics* queue_out_prio_;
  ::goldo::nucleo::statistics::MessageQueueStatistics* queue_out_ftdi_;
  ::google::protobuf::uint32 max_cycles_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_goldo_2fnucleo_2fstatistics_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ODriveCommTaskStatistics : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:goldo.nucleo.statistics.ODriveCommTaskStatistics) */ {
 public:
  ODriveCommTaskStatistics();
  virtual ~ODriveCommTaskStatistics();

  ODriveCommTaskStatistics(const ODriveCommTaskStatistics& from);

  inline ODriveCommTaskStatistics& operator=(const ODriveCommTaskStatistics& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ODriveCommTaskStatistics(ODriveCommTaskStatistics&& from) noexcept
    : ODriveCommTaskStatistics() {
    *this = ::std::move(from);
  }

  inline ODriveCommTaskStatistics& operator=(ODriveCommTaskStatistics&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ODriveCommTaskStatistics& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ODriveCommTaskStatistics* internal_default_instance() {
    return reinterpret_cast<const ODriveCommTaskStatistics*>(
               &_ODriveCommTaskStatistics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(ODriveCommTaskStatistics* other);
  friend void swap(ODriveCommTaskStatistics& a, ODriveCommTaskStatistics& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ODriveCommTaskStatistics* New() const final {
    return CreateMaybeMessage<ODriveCommTaskStatistics>(NULL);
  }

  ODriveCommTaskStatistics* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ODriveCommTaskStatistics>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ODriveCommTaskStatistics& from);
  void MergeFrom(const ODriveCommTaskStatistics& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ODriveCommTaskStatistics* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .goldo.nucleo.statistics.ODriveStreamParserStatistics parser = 2;
  bool has_parser() const;
  void clear_parser();
  static const int kParserFieldNumber = 2;
  private:
  const ::goldo::nucleo::statistics::ODriveStreamParserStatistics& _internal_parser() const;
  public:
  const ::goldo::nucleo::statistics::ODriveStreamParserStatistics& parser() const;
  ::goldo::nucleo::statistics::ODriveStreamParserStatistics* release_parser();
  ::goldo::nucleo::statistics::ODriveStreamParserStatistics* mutable_parser();
  void set_allocated_parser(::goldo::nucleo::statistics::ODriveStreamParserStatistics* parser);

  // .goldo.nucleo.statistics.ODriveStreamWriterStatistics writer = 3;
  bool has_writer() const;
  void clear_writer();
  static const int kWriterFieldNumber = 3;
  private:
  const ::goldo::nucleo::statistics::ODriveStreamWriterStatistics& _internal_writer() const;
  public:
  const ::goldo::nucleo::statistics::ODriveStreamWriterStatistics& writer() const;
  ::goldo::nucleo::statistics::ODriveStreamWriterStatistics* release_writer();
  ::goldo::nucleo::statistics::ODriveStreamWriterStatistics* mutable_writer();
  void set_allocated_writer(::goldo::nucleo::statistics::ODriveStreamWriterStatistics* writer);

  // .goldo.nucleo.statistics.MessageQueueStatistics queue = 4;
  bool has_queue() const;
  void clear_queue();
  static const int kQueueFieldNumber = 4;
  private:
  const ::goldo::nucleo::statistics::MessageQueueStatistics& _internal_queue() const;
  public:
  const ::goldo::nucleo::statistics::MessageQueueStatistics& queue() const;
  ::goldo::nucleo::statistics::MessageQueueStatistics* release_queue();
  ::goldo::nucleo::statistics::MessageQueueStatistics* mutable_queue();
  void set_allocated_queue(::goldo::nucleo::statistics::MessageQueueStatistics* queue);

  // @@protoc_insertion_point(class_scope:goldo.nucleo.statistics.ODriveCommTaskStatistics)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::goldo::nucleo::statistics::ODriveStreamParserStatistics* parser_;
  ::goldo::nucleo::statistics::ODriveStreamWriterStatistics* writer_;
  ::goldo::nucleo::statistics::MessageQueueStatistics* queue_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_goldo_2fnucleo_2fstatistics_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PropulsionTaskStatistics : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:goldo.nucleo.statistics.PropulsionTaskStatistics) */ {
 public:
  PropulsionTaskStatistics();
  virtual ~PropulsionTaskStatistics();

  PropulsionTaskStatistics(const PropulsionTaskStatistics& from);

  inline PropulsionTaskStatistics& operator=(const PropulsionTaskStatistics& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PropulsionTaskStatistics(PropulsionTaskStatistics&& from) noexcept
    : PropulsionTaskStatistics() {
    *this = ::std::move(from);
  }

  inline PropulsionTaskStatistics& operator=(PropulsionTaskStatistics&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PropulsionTaskStatistics& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PropulsionTaskStatistics* internal_default_instance() {
    return reinterpret_cast<const PropulsionTaskStatistics*>(
               &_PropulsionTaskStatistics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(PropulsionTaskStatistics* other);
  friend void swap(PropulsionTaskStatistics& a, PropulsionTaskStatistics& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PropulsionTaskStatistics* New() const final {
    return CreateMaybeMessage<PropulsionTaskStatistics>(NULL);
  }

  PropulsionTaskStatistics* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PropulsionTaskStatistics>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PropulsionTaskStatistics& from);
  void MergeFrom(const PropulsionTaskStatistics& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PropulsionTaskStatistics* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .goldo.nucleo.statistics.MessageQueueStatistics queue = 2;
  bool has_queue() const;
  void clear_queue();
  static const int kQueueFieldNumber = 2;
  private:
  const ::goldo::nucleo::statistics::MessageQueueStatistics& _internal_queue() const;
  public:
  const ::goldo::nucleo::statistics::MessageQueueStatistics& queue() const;
  ::goldo::nucleo::statistics::MessageQueueStatistics* release_queue();
  ::goldo::nucleo::statistics::MessageQueueStatistics* mutable_queue();
  void set_allocated_queue(::goldo::nucleo::statistics::MessageQueueStatistics* queue);

  // .goldo.nucleo.statistics.MessageQueueStatistics urgent_queue = 3;
  bool has_urgent_queue() const;
  void clear_urgent_queue();
  static const int kUrgentQueueFieldNumber = 3;
  private:
  const ::goldo::nucleo::statistics::MessageQueueStatistics& _internal_urgent_queue() const;
  public:
  const ::goldo::nucleo::statistics::MessageQueueStatistics& urgent_queue() const;
  ::goldo::nucleo::statistics::MessageQueueStatistics* release_urgent_queue();
  ::goldo::nucleo::statistics::MessageQueueStatistics* mutable_urgent_queue();
  void set_allocated_urgent_queue(::goldo::nucleo::statistics::MessageQueueStatistics* urgent_queue);

  // .goldo.nucleo.statistics.MessageQueueStatistics odrive_queue = 4;
  bool has_odrive_queue() const;
  void clear_odrive_queue();
  static const int kOdriveQueueFieldNumber = 4;
  private:
  const ::goldo::nucleo::statistics::MessageQueueStatistics& _internal_odrive_queue() const;
  public:
  const ::goldo::nucleo::statistics::MessageQueueStatistics& odrive_queue() const;
  ::goldo::nucleo::statistics::MessageQueueStatistics* release_odrive_queue();
  ::goldo::nucleo::statistics::MessageQueueStatistics* mutable_odrive_queue();
  void set_allocated_odrive_queue(::goldo::nucleo::statistics::MessageQueueStatistics* odrive_queue);

  // uint32 max_cycles = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
  void clear_max_cycles();
  static const int kMaxCyclesFieldNumber = 1;
  ::google::protobuf::uint32 max_cycles() const;
  void set_max_cycles(::google::protobuf::uint32 value);

  // uint32 min_interval = 5 [(.goldo.pb2_options.cpp_type) = UINT32];
  void clear_min_interval();
  static const int kMinIntervalFieldNumber = 5;
  ::google::protobuf::uint32 min_interval() const;
  void set_min_interval(::google::protobuf::uint32 value);

  // uint32 max_interval = 6 [(.goldo.pb2_options.cpp_type) = UINT32];
  void clear_max_interval();
  static const int kMaxIntervalFieldNumber = 6;
  ::google::protobuf::uint32 max_interval() const;
  void set_max_interval(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:goldo.nucleo.statistics.PropulsionTaskStatistics)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::goldo::nucleo::statistics::MessageQueueStatistics* queue_;
  ::goldo::nucleo::statistics::MessageQueueStatistics* urgent_queue_;
  ::goldo::nucleo::statistics::MessageQueueStatistics* odrive_queue_;
  ::google::protobuf::uint32 max_cycles_;
  ::google::protobuf::uint32 min_interval_;
  ::google::protobuf::uint32 max_interval_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_goldo_2fnucleo_2fstatistics_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MessageQueueStatistics

// uint32 min_available_capacity = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
inline void MessageQueueStatistics::clear_min_available_capacity() {
  min_available_capacity_ = 0u;
}
inline ::google::protobuf::uint32 MessageQueueStatistics::min_available_capacity() const {
  // @@protoc_insertion_point(field_get:goldo.nucleo.statistics.MessageQueueStatistics.min_available_capacity)
  return min_available_capacity_;
}
inline void MessageQueueStatistics::set_min_available_capacity(::google::protobuf::uint32 value) {
  
  min_available_capacity_ = value;
  // @@protoc_insertion_point(field_set:goldo.nucleo.statistics.MessageQueueStatistics.min_available_capacity)
}

// uint32 bytes_pushed = 2 [(.goldo.pb2_options.cpp_type) = UINT32];
inline void MessageQueueStatistics::clear_bytes_pushed() {
  bytes_pushed_ = 0u;
}
inline ::google::protobuf::uint32 MessageQueueStatistics::bytes_pushed() const {
  // @@protoc_insertion_point(field_get:goldo.nucleo.statistics.MessageQueueStatistics.bytes_pushed)
  return bytes_pushed_;
}
inline void MessageQueueStatistics::set_bytes_pushed(::google::protobuf::uint32 value) {
  
  bytes_pushed_ = value;
  // @@protoc_insertion_point(field_set:goldo.nucleo.statistics.MessageQueueStatistics.bytes_pushed)
}

// uint32 messages_pushed = 3 [(.goldo.pb2_options.cpp_type) = UINT32];
inline void MessageQueueStatistics::clear_messages_pushed() {
  messages_pushed_ = 0u;
}
inline ::google::protobuf::uint32 MessageQueueStatistics::messages_pushed() const {
  // @@protoc_insertion_point(field_get:goldo.nucleo.statistics.MessageQueueStatistics.messages_pushed)
  return messages_pushed_;
}
inline void MessageQueueStatistics::set_messages_pushed(::google::protobuf::uint32 value) {
  
  messages_pushed_ = value;
  // @@protoc_insertion_point(field_set:goldo.nucleo.statistics.MessageQueueStatistics.messages_pushed)
}

// -------------------------------------------------------------------

// CommSerializerStatistics

// uint32 messages_sent = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
inline void CommSerializerStatistics::clear_messages_sent() {
  messages_sent_ = 0u;
}
inline ::google::protobuf::uint32 CommSerializerStatistics::messages_sent() const {
  // @@protoc_insertion_point(field_get:goldo.nucleo.statistics.CommSerializerStatistics.messages_sent)
  return messages_sent_;
}
inline void CommSerializerStatistics::set_messages_sent(::google::protobuf::uint32 value) {
  
  messages_sent_ = value;
  // @@protoc_insertion_point(field_set:goldo.nucleo.statistics.CommSerializerStatistics.messages_sent)
}

// uint32 bytes_sent = 2 [(.goldo.pb2_options.cpp_type) = UINT32];
inline void CommSerializerStatistics::clear_bytes_sent() {
  bytes_sent_ = 0u;
}
inline ::google::protobuf::uint32 CommSerializerStatistics::bytes_sent() const {
  // @@protoc_insertion_point(field_get:goldo.nucleo.statistics.CommSerializerStatistics.bytes_sent)
  return bytes_sent_;
}
inline void CommSerializerStatistics::set_bytes_sent(::google::protobuf::uint32 value) {
  
  bytes_sent_ = value;
  // @@protoc_insertion_point(field_set:goldo.nucleo.statistics.CommSerializerStatistics.bytes_sent)
}

// uint32 buffer_high_watermark = 3 [(.goldo.pb2_options.cpp_type) = UINT32];
inline void CommSerializerStatistics::clear_buffer_high_watermark() {
  buffer_high_watermark_ = 0u;
}
inline ::google::protobuf::uint32 CommSerializerStatistics::buffer_high_watermark() const {
  // @@protoc_insertion_point(field_get:goldo.nucleo.statistics.CommSerializerStatistics.buffer_high_watermark)
  return buffer_high_watermark_;
}
inline void CommSerializerStatistics::set_buffer_high_watermark(::google::protobuf::uint32 value) {
  
  buffer_high_watermark_ = value;
  // @@protoc_insertion_point(field_set:goldo.nucleo.statistics.CommSerializerStatistics.buffer_high_watermark)
}

// -------------------------------------------------------------------

// CommDeserializerStatistics

// uint32 messages_received = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
inline void CommDeserializerStatistics::clear_messages_received() {
  messages_received_ = 0u;
}
inline ::google::protobuf::uint32 CommDeserializerStatistics::messages_received() const {
  // @@protoc_insertion_point(field_get:goldo.nucleo.statistics.CommDeserializerStatistics.messages_received)
  return messages_received_;
}
inline void CommDeserializerStatistics::set_messages_received(::google::protobuf::uint32 value) {
  
  messages_received_ = value;
  // @@protoc_insertion_point(field_set:goldo.nucleo.statistics.CommDeserializerStatistics.messages_received)
}

// uint32 bytes_received = 2 [(.goldo.pb2_options.cpp_type) = UINT32];
inline void CommDeserializerStatistics::clear_bytes_received() {
  bytes_received_ = 0u;
}
inline ::google::protobuf::uint32 CommDeserializerStatistics::bytes_received() const {
  // @@protoc_insertion_point(field_get:goldo.nucleo.statistics.CommDeserializerStatistics.bytes_received)
  return bytes_received_;
}
inline void CommDeserializerStatistics::set_bytes_received(::google::protobuf::uint32 value) {
  
  bytes_received_ = value;
  // @@protoc_insertion_point(field_set:goldo.nucleo.statistics.CommDeserializerStatistics.bytes_received)
}

// uint32 sequence_errors = 3 [(.goldo.pb2_options.cpp_type) = UINT32];
inline void CommDeserializerStatistics::clear_sequence_errors() {
  sequence_errors_ = 0u;
}
inline ::google::protobuf::uint32 CommDeserializerStatistics::sequence_errors() const {
  // @@protoc_insertion_point(field_get:goldo.nucleo.statistics.CommDeserializerStatistics.sequence_errors)
  return sequence_errors_;
}
inline void CommDeserializerStatistics::set_sequence_errors(::google::protobuf::uint32 value) {
  
  sequence_errors_ = value;
  // @@protoc_insertion_point(field_set:goldo.nucleo.statistics.CommDeserializerStatistics.sequence_errors)
}

// uint32 crc_errors = 4 [(.goldo.pb2_options.cpp_type) = UINT32];
inline void CommDeserializerStatistics::clear_crc_errors() {
  crc_errors_ = 0u;
}
inline ::google::protobuf::uint32 CommDeserializerStatistics::crc_errors() const {
  // @@protoc_insertion_point(field_get:goldo.nucleo.statistics.CommDeserializerStatistics.crc_errors)
  return crc_errors_;
}
inline void CommDeserializerStatistics::set_crc_errors(::google::protobuf::uint32 value) {
  
  crc_errors_ = value;
  // @@protoc_insertion_point(field_set:goldo.nucleo.statistics.CommDeserializerStatistics.crc_errors)
}

// uint32 buffer_high_watermark = 5 [(.goldo.pb2_options.cpp_type) = UINT32];
inline void CommDeserializerStatistics::clear_buffer_high_watermark() {
  buffer_high_watermark_ = 0u;
}
inline ::google::protobuf::uint32 CommDeserializerStatistics::buffer_high_watermark() const {
  // @@protoc_insertion_point(field_get:goldo.nucleo.statistics.CommDeserializerStatistics.buffer_high_watermark)
  return buffer_high_watermark_;
}
inline void CommDeserializerStatistics::set_buffer_high_watermark(::google::protobuf::uint32 value) {
  
  buffer_high_watermark_ = value;
  // @@protoc_insertion_point(field_set:goldo.nucleo.statistics.CommDeserializerStatistics.buffer_high_watermark)
}

// -------------------------------------------------------------------

// ODriveStreamParserStatistics

// uint32 bytes_received = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
inline void ODriveStreamParserStatistics::clear_bytes_received() {
  bytes_received_ = 0u;
}
inline ::google::protobuf::uint32 ODriveStreamParserStatistics::bytes_received() const {
  // @@protoc_insertion_point(field_get:goldo.nucleo.statistics.ODriveStreamParserStatistics.bytes_received)
  return bytes_received_;
}
inline void ODriveStreamParserStatistics::set_bytes_received(::google::protobuf::uint32 value) {
  
  bytes_received_ = value;
  // @@protoc_insertion_point(field_set:goldo.nucleo.statistics.ODriveStreamParserStatistics.bytes_received)
}

// uint32 messages_received = 2 [(.goldo.pb2_options.cpp_type) = UINT16];
inline void ODriveStreamParserStatistics::clear_messages_received() {
  messages_received_ = 0u;
}
inline ::google::protobuf::uint32 ODriveStreamParserStatistics::messages_received() const {
  // @@protoc_insertion_point(field_get:goldo.nucleo.statistics.ODriveStreamParserStatistics.messages_received)
  return messages_received_;
}
inline void ODriveStreamParserStatistics::set_messages_received(::google::protobuf::uint32 value) {
  
  messages_received_ = value;
  // @@protoc_insertion_point(field_set:goldo.nucleo.statistics.ODriveStreamParserStatistics.messages_received)
}

// uint32 rx_errors = 3 [(.goldo.pb2_options.cpp_type) = UINT16];
inline void ODriveStreamParserStatistics::clear_rx_errors() {
  rx_errors_ = 0u;
}
inline ::google::protobuf::uint32 ODriveStreamParserStatistics::rx_errors() const {
  // @@protoc_insertion_point(field_get:goldo.nucleo.statistics.ODriveStreamParserStatistics.rx_errors)
  return rx_errors_;
}
inline void ODriveStreamParserStatistics::set_rx_errors(::google::protobuf::uint32 value) {
  
  rx_errors_ = value;
  // @@protoc_insertion_point(field_set:goldo.nucleo.statistics.ODriveStreamParserStatistics.rx_errors)
}

// -------------------------------------------------------------------

// ODriveStreamWriterStatistics

// uint32 bytes_sent = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
inline void ODriveStreamWriterStatistics::clear_bytes_sent() {
  bytes_sent_ = 0u;
}
inline ::google::protobuf::uint32 ODriveStreamWriterStatistics::bytes_sent() const {
  // @@protoc_insertion_point(field_get:goldo.nucleo.statistics.ODriveStreamWriterStatistics.bytes_sent)
  return bytes_sent_;
}
inline void ODriveStreamWriterStatistics::set_bytes_sent(::google::protobuf::uint32 value) {
  
  bytes_sent_ = value;
  // @@protoc_insertion_point(field_set:goldo.nucleo.statistics.ODriveStreamWriterStatistics.bytes_sent)
}

// uint32 messages_sent = 2 [(.goldo.pb2_options.cpp_type) = UINT16];
inline void ODriveStreamWriterStatistics::clear_messages_sent() {
  messages_sent_ = 0u;
}
inline ::google::protobuf::uint32 ODriveStreamWriterStatistics::messages_sent() const {
  // @@protoc_insertion_point(field_get:goldo.nucleo.statistics.ODriveStreamWriterStatistics.messages_sent)
  return messages_sent_;
}
inline void ODriveStreamWriterStatistics::set_messages_sent(::google::protobuf::uint32 value) {
  
  messages_sent_ = value;
  // @@protoc_insertion_point(field_set:goldo.nucleo.statistics.ODriveStreamWriterStatistics.messages_sent)
}

// uint32 tx_highwater = 3 [(.goldo.pb2_options.cpp_type) = UINT16];
inline void ODriveStreamWriterStatistics::clear_tx_highwater() {
  tx_highwater_ = 0u;
}
inline ::google::protobuf::uint32 ODriveStreamWriterStatistics::tx_highwater() const {
  // @@protoc_insertion_point(field_get:goldo.nucleo.statistics.ODriveStreamWriterStatistics.tx_highwater)
  return tx_highwater_;
}
inline void ODriveStreamWriterStatistics::set_tx_highwater(::google::protobuf::uint32 value) {
  
  tx_highwater_ = value;
  // @@protoc_insertion_point(field_set:goldo.nucleo.statistics.ODriveStreamWriterStatistics.tx_highwater)
}

// -------------------------------------------------------------------

// UARTCommTaskStatistics

// uint32 max_cycles = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
inline void UARTCommTaskStatistics::clear_max_cycles() {
  max_cycles_ = 0u;
}
inline ::google::protobuf::uint32 UARTCommTaskStatistics::max_cycles() const {
  // @@protoc_insertion_point(field_get:goldo.nucleo.statistics.UARTCommTaskStatistics.max_cycles)
  return max_cycles_;
}
inline void UARTCommTaskStatistics::set_max_cycles(::google::protobuf::uint32 value) {
  
  max_cycles_ = value;
  // @@protoc_insertion_point(field_set:goldo.nucleo.statistics.UARTCommTaskStatistics.max_cycles)
}

// .goldo.nucleo.statistics.CommSerializerStatistics serializer = 2;
inline bool UARTCommTaskStatistics::has_serializer() const {
  return this != internal_default_instance() && serializer_ != NULL;
}
inline void UARTCommTaskStatistics::clear_serializer() {
  if (GetArenaNoVirtual() == NULL && serializer_ != NULL) {
    delete serializer_;
  }
  serializer_ = NULL;
}
inline const ::goldo::nucleo::statistics::CommSerializerStatistics& UARTCommTaskStatistics::_internal_serializer() const {
  return *serializer_;
}
inline const ::goldo::nucleo::statistics::CommSerializerStatistics& UARTCommTaskStatistics::serializer() const {
  const ::goldo::nucleo::statistics::CommSerializerStatistics* p = serializer_;
  // @@protoc_insertion_point(field_get:goldo.nucleo.statistics.UARTCommTaskStatistics.serializer)
  return p != NULL ? *p : *reinterpret_cast<const ::goldo::nucleo::statistics::CommSerializerStatistics*>(
      &::goldo::nucleo::statistics::_CommSerializerStatistics_default_instance_);
}
inline ::goldo::nucleo::statistics::CommSerializerStatistics* UARTCommTaskStatistics::release_serializer() {
  // @@protoc_insertion_point(field_release:goldo.nucleo.statistics.UARTCommTaskStatistics.serializer)
  
  ::goldo::nucleo::statistics::CommSerializerStatistics* temp = serializer_;
  serializer_ = NULL;
  return temp;
}
inline ::goldo::nucleo::statistics::CommSerializerStatistics* UARTCommTaskStatistics::mutable_serializer() {
  
  if (serializer_ == NULL) {
    auto* p = CreateMaybeMessage<::goldo::nucleo::statistics::CommSerializerStatistics>(GetArenaNoVirtual());
    serializer_ = p;
  }
  // @@protoc_insertion_point(field_mutable:goldo.nucleo.statistics.UARTCommTaskStatistics.serializer)
  return serializer_;
}
inline void UARTCommTaskStatistics::set_allocated_serializer(::goldo::nucleo::statistics::CommSerializerStatistics* serializer) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete serializer_;
  }
  if (serializer) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      serializer = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, serializer, submessage_arena);
    }
    
  } else {
    
  }
  serializer_ = serializer;
  // @@protoc_insertion_point(field_set_allocated:goldo.nucleo.statistics.UARTCommTaskStatistics.serializer)
}

// .goldo.nucleo.statistics.CommDeserializerStatistics deserializer = 3;
inline bool UARTCommTaskStatistics::has_deserializer() const {
  return this != internal_default_instance() && deserializer_ != NULL;
}
inline void UARTCommTaskStatistics::clear_deserializer() {
  if (GetArenaNoVirtual() == NULL && deserializer_ != NULL) {
    delete deserializer_;
  }
  deserializer_ = NULL;
}
inline const ::goldo::nucleo::statistics::CommDeserializerStatistics& UARTCommTaskStatistics::_internal_deserializer() const {
  return *deserializer_;
}
inline const ::goldo::nucleo::statistics::CommDeserializerStatistics& UARTCommTaskStatistics::deserializer() const {
  const ::goldo::nucleo::statistics::CommDeserializerStatistics* p = deserializer_;
  // @@protoc_insertion_point(field_get:goldo.nucleo.statistics.UARTCommTaskStatistics.deserializer)
  return p != NULL ? *p : *reinterpret_cast<const ::goldo::nucleo::statistics::CommDeserializerStatistics*>(
      &::goldo::nucleo::statistics::_CommDeserializerStatistics_default_instance_);
}
inline ::goldo::nucleo::statistics::CommDeserializerStatistics* UARTCommTaskStatistics::release_deserializer() {
  // @@protoc_insertion_point(field_release:goldo.nucleo.statistics.UARTCommTaskStatistics.deserializer)
  
  ::goldo::nucleo::statistics::CommDeserializerStatistics* temp = deserializer_;
  deserializer_ = NULL;
  return temp;
}
inline ::goldo::nucleo::statistics::CommDeserializerStatistics* UARTCommTaskStatistics::mutable_deserializer() {
  
  if (deserializer_ == NULL) {
    auto* p = CreateMaybeMessage<::goldo::nucleo::statistics::CommDeserializerStatistics>(GetArenaNoVirtual());
    deserializer_ = p;
  }
  // @@protoc_insertion_point(field_mutable:goldo.nucleo.statistics.UARTCommTaskStatistics.deserializer)
  return deserializer_;
}
inline void UARTCommTaskStatistics::set_allocated_deserializer(::goldo::nucleo::statistics::CommDeserializerStatistics* deserializer) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete deserializer_;
  }
  if (deserializer) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      deserializer = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, deserializer, submessage_arena);
    }
    
  } else {
    
  }
  deserializer_ = deserializer;
  // @@protoc_insertion_point(field_set_allocated:goldo.nucleo.statistics.UARTCommTaskStatistics.deserializer)
}

// .goldo.nucleo.statistics.CommSerializerStatistics serializer_ftdi = 4;
inline bool UARTCommTaskStatistics::has_serializer_ftdi() const {
  return this != internal_default_instance() && serializer_ftdi_ != NULL;
}
inline void UARTCommTaskStatistics::clear_serializer_ftdi() {
  if (GetArenaNoVirtual() == NULL && serializer_ftdi_ != NULL) {
    delete serializer_ftdi_;
  }
  serializer_ftdi_ = NULL;
}
inline const ::goldo::nucleo::statistics::CommSerializerStatistics& UARTCommTaskStatistics::_internal_serializer_ftdi() const {
  return *serializer_ftdi_;
}
inline const ::goldo::nucleo::statistics::CommSerializerStatistics& UARTCommTaskStatistics::serializer_ftdi() const {
  const ::goldo::nucleo::statistics::CommSerializerStatistics* p = serializer_ftdi_;
  // @@protoc_insertion_point(field_get:goldo.nucleo.statistics.UARTCommTaskStatistics.serializer_ftdi)
  return p != NULL ? *p : *reinterpret_cast<const ::goldo::nucleo::statistics::CommSerializerStatistics*>(
      &::goldo::nucleo::statistics::_CommSerializerStatistics_default_instance_);
}
inline ::goldo::nucleo::statistics::CommSerializerStatistics* UARTCommTaskStatistics::release_serializer_ftdi() {
  // @@protoc_insertion_point(field_release:goldo.nucleo.statistics.UARTCommTaskStatistics.serializer_ftdi)
  
  ::goldo::nucleo::statistics::CommSerializerStatistics* temp = serializer_ftdi_;
  serializer_ftdi_ = NULL;
  return temp;
}
inline ::goldo::nucleo::statistics::CommSerializerStatistics* UARTCommTaskStatistics::mutable_serializer_ftdi() {
  
  if (serializer_ftdi_ == NULL) {
    auto* p = CreateMaybeMessage<::goldo::nucleo::statistics::CommSerializerStatistics>(GetArenaNoVirtual());
    serializer_ftdi_ = p;
  }
  // @@protoc_insertion_point(field_mutable:goldo.nucleo.statistics.UARTCommTaskStatistics.serializer_ftdi)
  return serializer_ftdi_;
}
inline void UARTCommTaskStatistics::set_allocated_serializer_ftdi(::goldo::nucleo::statistics::CommSerializerStatistics* serializer_ftdi) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete serializer_ftdi_;
  }
  if (serializer_ftdi) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      serializer_ftdi = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, serializer_ftdi, submessage_arena);
    }
    
  } else {
    
  }
  serializer_ftdi_ = serializer_ftdi;
  // @@protoc_insertion_point(field_set_allocated:goldo.nucleo.statistics.UARTCommTaskStatistics.serializer_ftdi)
}

// .goldo.nucleo.statistics.CommDeserializerStatistics deserializer_fdti = 5;
inline bool UARTCommTaskStatistics::has_deserializer_fdti() const {
  return this != internal_default_instance() && deserializer_fdti_ != NULL;
}
inline void UARTCommTaskStatistics::clear_deserializer_fdti() {
  if (GetArenaNoVirtual() == NULL && deserializer_fdti_ != NULL) {
    delete deserializer_fdti_;
  }
  deserializer_fdti_ = NULL;
}
inline const ::goldo::nucleo::statistics::CommDeserializerStatistics& UARTCommTaskStatistics::_internal_deserializer_fdti() const {
  return *deserializer_fdti_;
}
inline const ::goldo::nucleo::statistics::CommDeserializerStatistics& UARTCommTaskStatistics::deserializer_fdti() const {
  const ::goldo::nucleo::statistics::CommDeserializerStatistics* p = deserializer_fdti_;
  // @@protoc_insertion_point(field_get:goldo.nucleo.statistics.UARTCommTaskStatistics.deserializer_fdti)
  return p != NULL ? *p : *reinterpret_cast<const ::goldo::nucleo::statistics::CommDeserializerStatistics*>(
      &::goldo::nucleo::statistics::_CommDeserializerStatistics_default_instance_);
}
inline ::goldo::nucleo::statistics::CommDeserializerStatistics* UARTCommTaskStatistics::release_deserializer_fdti() {
  // @@protoc_insertion_point(field_release:goldo.nucleo.statistics.UARTCommTaskStatistics.deserializer_fdti)
  
  ::goldo::nucleo::statistics::CommDeserializerStatistics* temp = deserializer_fdti_;
  deserializer_fdti_ = NULL;
  return temp;
}
inline ::goldo::nucleo::statistics::CommDeserializerStatistics* UARTCommTaskStatistics::mutable_deserializer_fdti() {
  
  if (deserializer_fdti_ == NULL) {
    auto* p = CreateMaybeMessage<::goldo::nucleo::statistics::CommDeserializerStatistics>(GetArenaNoVirtual());
    deserializer_fdti_ = p;
  }
  // @@protoc_insertion_point(field_mutable:goldo.nucleo.statistics.UARTCommTaskStatistics.deserializer_fdti)
  return deserializer_fdti_;
}
inline void UARTCommTaskStatistics::set_allocated_deserializer_fdti(::goldo::nucleo::statistics::CommDeserializerStatistics* deserializer_fdti) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete deserializer_fdti_;
  }
  if (deserializer_fdti) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      deserializer_fdti = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, deserializer_fdti, submessage_arena);
    }
    
  } else {
    
  }
  deserializer_fdti_ = deserializer_fdti;
  // @@protoc_insertion_point(field_set_allocated:goldo.nucleo.statistics.UARTCommTaskStatistics.deserializer_fdti)
}

// .goldo.nucleo.statistics.MessageQueueStatistics queue_out = 6;
inline bool UARTCommTaskStatistics::has_queue_out() const {
  return this != internal_default_instance() && queue_out_ != NULL;
}
inline void UARTCommTaskStatistics::clear_queue_out() {
  if (GetArenaNoVirtual() == NULL && queue_out_ != NULL) {
    delete queue_out_;
  }
  queue_out_ = NULL;
}
inline const ::goldo::nucleo::statistics::MessageQueueStatistics& UARTCommTaskStatistics::_internal_queue_out() const {
  return *queue_out_;
}
inline const ::goldo::nucleo::statistics::MessageQueueStatistics& UARTCommTaskStatistics::queue_out() const {
  const ::goldo::nucleo::statistics::MessageQueueStatistics* p = queue_out_;
  // @@protoc_insertion_point(field_get:goldo.nucleo.statistics.UARTCommTaskStatistics.queue_out)
  return p != NULL ? *p : *reinterpret_cast<const ::goldo::nucleo::statistics::MessageQueueStatistics*>(
      &::goldo::nucleo::statistics::_MessageQueueStatistics_default_instance_);
}
inline ::goldo::nucleo::statistics::MessageQueueStatistics* UARTCommTaskStatistics::release_queue_out() {
  // @@protoc_insertion_point(field_release:goldo.nucleo.statistics.UARTCommTaskStatistics.queue_out)
  
  ::goldo::nucleo::statistics::MessageQueueStatistics* temp = queue_out_;
  queue_out_ = NULL;
  return temp;
}
inline ::goldo::nucleo::statistics::MessageQueueStatistics* UARTCommTaskStatistics::mutable_queue_out() {
  
  if (queue_out_ == NULL) {
    auto* p = CreateMaybeMessage<::goldo::nucleo::statistics::MessageQueueStatistics>(GetArenaNoVirtual());
    queue_out_ = p;
  }
  // @@protoc_insertion_point(field_mutable:goldo.nucleo.statistics.UARTCommTaskStatistics.queue_out)
  return queue_out_;
}
inline void UARTCommTaskStatistics::set_allocated_queue_out(::goldo::nucleo::statistics::MessageQueueStatistics* queue_out) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete queue_out_;
  }
  if (queue_out) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      queue_out = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, queue_out, submessage_arena);
    }
    
  } else {
    
  }
  queue_out_ = queue_out;
  // @@protoc_insertion_point(field_set_allocated:goldo.nucleo.statistics.UARTCommTaskStatistics.queue_out)
}

// .goldo.nucleo.statistics.MessageQueueStatistics queue_out_prio = 7;
inline bool UARTCommTaskStatistics::has_queue_out_prio() const {
  return this != internal_default_instance() && queue_out_prio_ != NULL;
}
inline void UARTCommTaskStatistics::clear_queue_out_prio() {
  if (GetArenaNoVirtual() == NULL && queue_out_prio_ != NULL) {
    delete queue_out_prio_;
  }
  queue_out_prio_ = NULL;
}
inline const ::goldo::nucleo::statistics::MessageQueueStatistics& UARTCommTaskStatistics::_internal_queue_out_prio() const {
  return *queue_out_prio_;
}
inline const ::goldo::nucleo::statistics::MessageQueueStatistics& UARTCommTaskStatistics::queue_out_prio() const {
  const ::goldo::nucleo::statistics::MessageQueueStatistics* p = queue_out_prio_;
  // @@protoc_insertion_point(field_get:goldo.nucleo.statistics.UARTCommTaskStatistics.queue_out_prio)
  return p != NULL ? *p : *reinterpret_cast<const ::goldo::nucleo::statistics::MessageQueueStatistics*>(
      &::goldo::nucleo::statistics::_MessageQueueStatistics_default_instance_);
}
inline ::goldo::nucleo::statistics::MessageQueueStatistics* UARTCommTaskStatistics::release_queue_out_prio() {
  // @@protoc_insertion_point(field_release:goldo.nucleo.statistics.UARTCommTaskStatistics.queue_out_prio)
  
  ::goldo::nucleo::statistics::MessageQueueStatistics* temp = queue_out_prio_;
  queue_out_prio_ = NULL;
  return temp;
}
inline ::goldo::nucleo::statistics::MessageQueueStatistics* UARTCommTaskStatistics::mutable_queue_out_prio() {
  
  if (queue_out_prio_ == NULL) {
    auto* p = CreateMaybeMessage<::goldo::nucleo::statistics::MessageQueueStatistics>(GetArenaNoVirtual());
    queue_out_prio_ = p;
  }
  // @@protoc_insertion_point(field_mutable:goldo.nucleo.statistics.UARTCommTaskStatistics.queue_out_prio)
  return queue_out_prio_;
}
inline void UARTCommTaskStatistics::set_allocated_queue_out_prio(::goldo::nucleo::statistics::MessageQueueStatistics* queue_out_prio) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete queue_out_prio_;
  }
  if (queue_out_prio) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      queue_out_prio = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, queue_out_prio, submessage_arena);
    }
    
  } else {
    
  }
  queue_out_prio_ = queue_out_prio;
  // @@protoc_insertion_point(field_set_allocated:goldo.nucleo.statistics.UARTCommTaskStatistics.queue_out_prio)
}

// .goldo.nucleo.statistics.MessageQueueStatistics queue_out_ftdi = 8;
inline bool UARTCommTaskStatistics::has_queue_out_ftdi() const {
  return this != internal_default_instance() && queue_out_ftdi_ != NULL;
}
inline void UARTCommTaskStatistics::clear_queue_out_ftdi() {
  if (GetArenaNoVirtual() == NULL && queue_out_ftdi_ != NULL) {
    delete queue_out_ftdi_;
  }
  queue_out_ftdi_ = NULL;
}
inline const ::goldo::nucleo::statistics::MessageQueueStatistics& UARTCommTaskStatistics::_internal_queue_out_ftdi() const {
  return *queue_out_ftdi_;
}
inline const ::goldo::nucleo::statistics::MessageQueueStatistics& UARTCommTaskStatistics::queue_out_ftdi() const {
  const ::goldo::nucleo::statistics::MessageQueueStatistics* p = queue_out_ftdi_;
  // @@protoc_insertion_point(field_get:goldo.nucleo.statistics.UARTCommTaskStatistics.queue_out_ftdi)
  return p != NULL ? *p : *reinterpret_cast<const ::goldo::nucleo::statistics::MessageQueueStatistics*>(
      &::goldo::nucleo::statistics::_MessageQueueStatistics_default_instance_);
}
inline ::goldo::nucleo::statistics::MessageQueueStatistics* UARTCommTaskStatistics::release_queue_out_ftdi() {
  // @@protoc_insertion_point(field_release:goldo.nucleo.statistics.UARTCommTaskStatistics.queue_out_ftdi)
  
  ::goldo::nucleo::statistics::MessageQueueStatistics* temp = queue_out_ftdi_;
  queue_out_ftdi_ = NULL;
  return temp;
}
inline ::goldo::nucleo::statistics::MessageQueueStatistics* UARTCommTaskStatistics::mutable_queue_out_ftdi() {
  
  if (queue_out_ftdi_ == NULL) {
    auto* p = CreateMaybeMessage<::goldo::nucleo::statistics::MessageQueueStatistics>(GetArenaNoVirtual());
    queue_out_ftdi_ = p;
  }
  // @@protoc_insertion_point(field_mutable:goldo.nucleo.statistics.UARTCommTaskStatistics.queue_out_ftdi)
  return queue_out_ftdi_;
}
inline void UARTCommTaskStatistics::set_allocated_queue_out_ftdi(::goldo::nucleo::statistics::MessageQueueStatistics* queue_out_ftdi) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete queue_out_ftdi_;
  }
  if (queue_out_ftdi) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      queue_out_ftdi = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, queue_out_ftdi, submessage_arena);
    }
    
  } else {
    
  }
  queue_out_ftdi_ = queue_out_ftdi;
  // @@protoc_insertion_point(field_set_allocated:goldo.nucleo.statistics.UARTCommTaskStatistics.queue_out_ftdi)
}

// -------------------------------------------------------------------

// ODriveCommTaskStatistics

// .goldo.nucleo.statistics.ODriveStreamParserStatistics parser = 2;
inline bool ODriveCommTaskStatistics::has_parser() const {
  return this != internal_default_instance() && parser_ != NULL;
}
inline void ODriveCommTaskStatistics::clear_parser() {
  if (GetArenaNoVirtual() == NULL && parser_ != NULL) {
    delete parser_;
  }
  parser_ = NULL;
}
inline const ::goldo::nucleo::statistics::ODriveStreamParserStatistics& ODriveCommTaskStatistics::_internal_parser() const {
  return *parser_;
}
inline const ::goldo::nucleo::statistics::ODriveStreamParserStatistics& ODriveCommTaskStatistics::parser() const {
  const ::goldo::nucleo::statistics::ODriveStreamParserStatistics* p = parser_;
  // @@protoc_insertion_point(field_get:goldo.nucleo.statistics.ODriveCommTaskStatistics.parser)
  return p != NULL ? *p : *reinterpret_cast<const ::goldo::nucleo::statistics::ODriveStreamParserStatistics*>(
      &::goldo::nucleo::statistics::_ODriveStreamParserStatistics_default_instance_);
}
inline ::goldo::nucleo::statistics::ODriveStreamParserStatistics* ODriveCommTaskStatistics::release_parser() {
  // @@protoc_insertion_point(field_release:goldo.nucleo.statistics.ODriveCommTaskStatistics.parser)
  
  ::goldo::nucleo::statistics::ODriveStreamParserStatistics* temp = parser_;
  parser_ = NULL;
  return temp;
}
inline ::goldo::nucleo::statistics::ODriveStreamParserStatistics* ODriveCommTaskStatistics::mutable_parser() {
  
  if (parser_ == NULL) {
    auto* p = CreateMaybeMessage<::goldo::nucleo::statistics::ODriveStreamParserStatistics>(GetArenaNoVirtual());
    parser_ = p;
  }
  // @@protoc_insertion_point(field_mutable:goldo.nucleo.statistics.ODriveCommTaskStatistics.parser)
  return parser_;
}
inline void ODriveCommTaskStatistics::set_allocated_parser(::goldo::nucleo::statistics::ODriveStreamParserStatistics* parser) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete parser_;
  }
  if (parser) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      parser = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, parser, submessage_arena);
    }
    
  } else {
    
  }
  parser_ = parser;
  // @@protoc_insertion_point(field_set_allocated:goldo.nucleo.statistics.ODriveCommTaskStatistics.parser)
}

// .goldo.nucleo.statistics.ODriveStreamWriterStatistics writer = 3;
inline bool ODriveCommTaskStatistics::has_writer() const {
  return this != internal_default_instance() && writer_ != NULL;
}
inline void ODriveCommTaskStatistics::clear_writer() {
  if (GetArenaNoVirtual() == NULL && writer_ != NULL) {
    delete writer_;
  }
  writer_ = NULL;
}
inline const ::goldo::nucleo::statistics::ODriveStreamWriterStatistics& ODriveCommTaskStatistics::_internal_writer() const {
  return *writer_;
}
inline const ::goldo::nucleo::statistics::ODriveStreamWriterStatistics& ODriveCommTaskStatistics::writer() const {
  const ::goldo::nucleo::statistics::ODriveStreamWriterStatistics* p = writer_;
  // @@protoc_insertion_point(field_get:goldo.nucleo.statistics.ODriveCommTaskStatistics.writer)
  return p != NULL ? *p : *reinterpret_cast<const ::goldo::nucleo::statistics::ODriveStreamWriterStatistics*>(
      &::goldo::nucleo::statistics::_ODriveStreamWriterStatistics_default_instance_);
}
inline ::goldo::nucleo::statistics::ODriveStreamWriterStatistics* ODriveCommTaskStatistics::release_writer() {
  // @@protoc_insertion_point(field_release:goldo.nucleo.statistics.ODriveCommTaskStatistics.writer)
  
  ::goldo::nucleo::statistics::ODriveStreamWriterStatistics* temp = writer_;
  writer_ = NULL;
  return temp;
}
inline ::goldo::nucleo::statistics::ODriveStreamWriterStatistics* ODriveCommTaskStatistics::mutable_writer() {
  
  if (writer_ == NULL) {
    auto* p = CreateMaybeMessage<::goldo::nucleo::statistics::ODriveStreamWriterStatistics>(GetArenaNoVirtual());
    writer_ = p;
  }
  // @@protoc_insertion_point(field_mutable:goldo.nucleo.statistics.ODriveCommTaskStatistics.writer)
  return writer_;
}
inline void ODriveCommTaskStatistics::set_allocated_writer(::goldo::nucleo::statistics::ODriveStreamWriterStatistics* writer) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete writer_;
  }
  if (writer) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      writer = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, writer, submessage_arena);
    }
    
  } else {
    
  }
  writer_ = writer;
  // @@protoc_insertion_point(field_set_allocated:goldo.nucleo.statistics.ODriveCommTaskStatistics.writer)
}

// .goldo.nucleo.statistics.MessageQueueStatistics queue = 4;
inline bool ODriveCommTaskStatistics::has_queue() const {
  return this != internal_default_instance() && queue_ != NULL;
}
inline void ODriveCommTaskStatistics::clear_queue() {
  if (GetArenaNoVirtual() == NULL && queue_ != NULL) {
    delete queue_;
  }
  queue_ = NULL;
}
inline const ::goldo::nucleo::statistics::MessageQueueStatistics& ODriveCommTaskStatistics::_internal_queue() const {
  return *queue_;
}
inline const ::goldo::nucleo::statistics::MessageQueueStatistics& ODriveCommTaskStatistics::queue() const {
  const ::goldo::nucleo::statistics::MessageQueueStatistics* p = queue_;
  // @@protoc_insertion_point(field_get:goldo.nucleo.statistics.ODriveCommTaskStatistics.queue)
  return p != NULL ? *p : *reinterpret_cast<const ::goldo::nucleo::statistics::MessageQueueStatistics*>(
      &::goldo::nucleo::statistics::_MessageQueueStatistics_default_instance_);
}
inline ::goldo::nucleo::statistics::MessageQueueStatistics* ODriveCommTaskStatistics::release_queue() {
  // @@protoc_insertion_point(field_release:goldo.nucleo.statistics.ODriveCommTaskStatistics.queue)
  
  ::goldo::nucleo::statistics::MessageQueueStatistics* temp = queue_;
  queue_ = NULL;
  return temp;
}
inline ::goldo::nucleo::statistics::MessageQueueStatistics* ODriveCommTaskStatistics::mutable_queue() {
  
  if (queue_ == NULL) {
    auto* p = CreateMaybeMessage<::goldo::nucleo::statistics::MessageQueueStatistics>(GetArenaNoVirtual());
    queue_ = p;
  }
  // @@protoc_insertion_point(field_mutable:goldo.nucleo.statistics.ODriveCommTaskStatistics.queue)
  return queue_;
}
inline void ODriveCommTaskStatistics::set_allocated_queue(::goldo::nucleo::statistics::MessageQueueStatistics* queue) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete queue_;
  }
  if (queue) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      queue = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, queue, submessage_arena);
    }
    
  } else {
    
  }
  queue_ = queue;
  // @@protoc_insertion_point(field_set_allocated:goldo.nucleo.statistics.ODriveCommTaskStatistics.queue)
}

// -------------------------------------------------------------------

// PropulsionTaskStatistics

// uint32 max_cycles = 1 [(.goldo.pb2_options.cpp_type) = UINT32];
inline void PropulsionTaskStatistics::clear_max_cycles() {
  max_cycles_ = 0u;
}
inline ::google::protobuf::uint32 PropulsionTaskStatistics::max_cycles() const {
  // @@protoc_insertion_point(field_get:goldo.nucleo.statistics.PropulsionTaskStatistics.max_cycles)
  return max_cycles_;
}
inline void PropulsionTaskStatistics::set_max_cycles(::google::protobuf::uint32 value) {
  
  max_cycles_ = value;
  // @@protoc_insertion_point(field_set:goldo.nucleo.statistics.PropulsionTaskStatistics.max_cycles)
}

// uint32 min_interval = 5 [(.goldo.pb2_options.cpp_type) = UINT32];
inline void PropulsionTaskStatistics::clear_min_interval() {
  min_interval_ = 0u;
}
inline ::google::protobuf::uint32 PropulsionTaskStatistics::min_interval() const {
  // @@protoc_insertion_point(field_get:goldo.nucleo.statistics.PropulsionTaskStatistics.min_interval)
  return min_interval_;
}
inline void PropulsionTaskStatistics::set_min_interval(::google::protobuf::uint32 value) {
  
  min_interval_ = value;
  // @@protoc_insertion_point(field_set:goldo.nucleo.statistics.PropulsionTaskStatistics.min_interval)
}

// uint32 max_interval = 6 [(.goldo.pb2_options.cpp_type) = UINT32];
inline void PropulsionTaskStatistics::clear_max_interval() {
  max_interval_ = 0u;
}
inline ::google::protobuf::uint32 PropulsionTaskStatistics::max_interval() const {
  // @@protoc_insertion_point(field_get:goldo.nucleo.statistics.PropulsionTaskStatistics.max_interval)
  return max_interval_;
}
inline void PropulsionTaskStatistics::set_max_interval(::google::protobuf::uint32 value) {
  
  max_interval_ = value;
  // @@protoc_insertion_point(field_set:goldo.nucleo.statistics.PropulsionTaskStatistics.max_interval)
}

// .goldo.nucleo.statistics.MessageQueueStatistics queue = 2;
inline bool PropulsionTaskStatistics::has_queue() const {
  return this != internal_default_instance() && queue_ != NULL;
}
inline void PropulsionTaskStatistics::clear_queue() {
  if (GetArenaNoVirtual() == NULL && queue_ != NULL) {
    delete queue_;
  }
  queue_ = NULL;
}
inline const ::goldo::nucleo::statistics::MessageQueueStatistics& PropulsionTaskStatistics::_internal_queue() const {
  return *queue_;
}
inline const ::goldo::nucleo::statistics::MessageQueueStatistics& PropulsionTaskStatistics::queue() const {
  const ::goldo::nucleo::statistics::MessageQueueStatistics* p = queue_;
  // @@protoc_insertion_point(field_get:goldo.nucleo.statistics.PropulsionTaskStatistics.queue)
  return p != NULL ? *p : *reinterpret_cast<const ::goldo::nucleo::statistics::MessageQueueStatistics*>(
      &::goldo::nucleo::statistics::_MessageQueueStatistics_default_instance_);
}
inline ::goldo::nucleo::statistics::MessageQueueStatistics* PropulsionTaskStatistics::release_queue() {
  // @@protoc_insertion_point(field_release:goldo.nucleo.statistics.PropulsionTaskStatistics.queue)
  
  ::goldo::nucleo::statistics::MessageQueueStatistics* temp = queue_;
  queue_ = NULL;
  return temp;
}
inline ::goldo::nucleo::statistics::MessageQueueStatistics* PropulsionTaskStatistics::mutable_queue() {
  
  if (queue_ == NULL) {
    auto* p = CreateMaybeMessage<::goldo::nucleo::statistics::MessageQueueStatistics>(GetArenaNoVirtual());
    queue_ = p;
  }
  // @@protoc_insertion_point(field_mutable:goldo.nucleo.statistics.PropulsionTaskStatistics.queue)
  return queue_;
}
inline void PropulsionTaskStatistics::set_allocated_queue(::goldo::nucleo::statistics::MessageQueueStatistics* queue) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete queue_;
  }
  if (queue) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      queue = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, queue, submessage_arena);
    }
    
  } else {
    
  }
  queue_ = queue;
  // @@protoc_insertion_point(field_set_allocated:goldo.nucleo.statistics.PropulsionTaskStatistics.queue)
}

// .goldo.nucleo.statistics.MessageQueueStatistics urgent_queue = 3;
inline bool PropulsionTaskStatistics::has_urgent_queue() const {
  return this != internal_default_instance() && urgent_queue_ != NULL;
}
inline void PropulsionTaskStatistics::clear_urgent_queue() {
  if (GetArenaNoVirtual() == NULL && urgent_queue_ != NULL) {
    delete urgent_queue_;
  }
  urgent_queue_ = NULL;
}
inline const ::goldo::nucleo::statistics::MessageQueueStatistics& PropulsionTaskStatistics::_internal_urgent_queue() const {
  return *urgent_queue_;
}
inline const ::goldo::nucleo::statistics::MessageQueueStatistics& PropulsionTaskStatistics::urgent_queue() const {
  const ::goldo::nucleo::statistics::MessageQueueStatistics* p = urgent_queue_;
  // @@protoc_insertion_point(field_get:goldo.nucleo.statistics.PropulsionTaskStatistics.urgent_queue)
  return p != NULL ? *p : *reinterpret_cast<const ::goldo::nucleo::statistics::MessageQueueStatistics*>(
      &::goldo::nucleo::statistics::_MessageQueueStatistics_default_instance_);
}
inline ::goldo::nucleo::statistics::MessageQueueStatistics* PropulsionTaskStatistics::release_urgent_queue() {
  // @@protoc_insertion_point(field_release:goldo.nucleo.statistics.PropulsionTaskStatistics.urgent_queue)
  
  ::goldo::nucleo::statistics::MessageQueueStatistics* temp = urgent_queue_;
  urgent_queue_ = NULL;
  return temp;
}
inline ::goldo::nucleo::statistics::MessageQueueStatistics* PropulsionTaskStatistics::mutable_urgent_queue() {
  
  if (urgent_queue_ == NULL) {
    auto* p = CreateMaybeMessage<::goldo::nucleo::statistics::MessageQueueStatistics>(GetArenaNoVirtual());
    urgent_queue_ = p;
  }
  // @@protoc_insertion_point(field_mutable:goldo.nucleo.statistics.PropulsionTaskStatistics.urgent_queue)
  return urgent_queue_;
}
inline void PropulsionTaskStatistics::set_allocated_urgent_queue(::goldo::nucleo::statistics::MessageQueueStatistics* urgent_queue) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete urgent_queue_;
  }
  if (urgent_queue) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      urgent_queue = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, urgent_queue, submessage_arena);
    }
    
  } else {
    
  }
  urgent_queue_ = urgent_queue;
  // @@protoc_insertion_point(field_set_allocated:goldo.nucleo.statistics.PropulsionTaskStatistics.urgent_queue)
}

// .goldo.nucleo.statistics.MessageQueueStatistics odrive_queue = 4;
inline bool PropulsionTaskStatistics::has_odrive_queue() const {
  return this != internal_default_instance() && odrive_queue_ != NULL;
}
inline void PropulsionTaskStatistics::clear_odrive_queue() {
  if (GetArenaNoVirtual() == NULL && odrive_queue_ != NULL) {
    delete odrive_queue_;
  }
  odrive_queue_ = NULL;
}
inline const ::goldo::nucleo::statistics::MessageQueueStatistics& PropulsionTaskStatistics::_internal_odrive_queue() const {
  return *odrive_queue_;
}
inline const ::goldo::nucleo::statistics::MessageQueueStatistics& PropulsionTaskStatistics::odrive_queue() const {
  const ::goldo::nucleo::statistics::MessageQueueStatistics* p = odrive_queue_;
  // @@protoc_insertion_point(field_get:goldo.nucleo.statistics.PropulsionTaskStatistics.odrive_queue)
  return p != NULL ? *p : *reinterpret_cast<const ::goldo::nucleo::statistics::MessageQueueStatistics*>(
      &::goldo::nucleo::statistics::_MessageQueueStatistics_default_instance_);
}
inline ::goldo::nucleo::statistics::MessageQueueStatistics* PropulsionTaskStatistics::release_odrive_queue() {
  // @@protoc_insertion_point(field_release:goldo.nucleo.statistics.PropulsionTaskStatistics.odrive_queue)
  
  ::goldo::nucleo::statistics::MessageQueueStatistics* temp = odrive_queue_;
  odrive_queue_ = NULL;
  return temp;
}
inline ::goldo::nucleo::statistics::MessageQueueStatistics* PropulsionTaskStatistics::mutable_odrive_queue() {
  
  if (odrive_queue_ == NULL) {
    auto* p = CreateMaybeMessage<::goldo::nucleo::statistics::MessageQueueStatistics>(GetArenaNoVirtual());
    odrive_queue_ = p;
  }
  // @@protoc_insertion_point(field_mutable:goldo.nucleo.statistics.PropulsionTaskStatistics.odrive_queue)
  return odrive_queue_;
}
inline void PropulsionTaskStatistics::set_allocated_odrive_queue(::goldo::nucleo::statistics::MessageQueueStatistics* odrive_queue) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete odrive_queue_;
  }
  if (odrive_queue) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      odrive_queue = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, odrive_queue, submessage_arena);
    }
    
  } else {
    
  }
  odrive_queue_ = odrive_queue;
  // @@protoc_insertion_point(field_set_allocated:goldo.nucleo.statistics.PropulsionTaskStatistics.odrive_queue)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace statistics
}  // namespace nucleo
}  // namespace goldo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_goldo_2fnucleo_2fstatistics_2eproto
