// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: goldo/nucleo/robot_simulator.proto

#ifndef PROTOBUF_INCLUDED_goldo_2fnucleo_2frobot_5fsimulator_2eproto
#define PROTOBUF_INCLUDED_goldo_2fnucleo_2frobot_5fsimulator_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "goldo/pb2_options.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_goldo_2fnucleo_2frobot_5fsimulator_2eproto 

namespace protobuf_goldo_2fnucleo_2frobot_5fsimulator_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_goldo_2fnucleo_2frobot_5fsimulator_2eproto
namespace goldo {
namespace nucleo {
namespace robot_simulator {
class RobotSimulatorConfig;
class RobotSimulatorConfigDefaultTypeInternal;
extern RobotSimulatorConfigDefaultTypeInternal _RobotSimulatorConfig_default_instance_;
}  // namespace robot_simulator
}  // namespace nucleo
}  // namespace goldo
namespace google {
namespace protobuf {
template<> ::goldo::nucleo::robot_simulator::RobotSimulatorConfig* Arena::CreateMaybeMessage<::goldo::nucleo::robot_simulator::RobotSimulatorConfig>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace goldo {
namespace nucleo {
namespace robot_simulator {

// ===================================================================

class RobotSimulatorConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:goldo.nucleo.robot_simulator.RobotSimulatorConfig) */ {
 public:
  RobotSimulatorConfig();
  virtual ~RobotSimulatorConfig();

  RobotSimulatorConfig(const RobotSimulatorConfig& from);

  inline RobotSimulatorConfig& operator=(const RobotSimulatorConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RobotSimulatorConfig(RobotSimulatorConfig&& from) noexcept
    : RobotSimulatorConfig() {
    *this = ::std::move(from);
  }

  inline RobotSimulatorConfig& operator=(RobotSimulatorConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RobotSimulatorConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RobotSimulatorConfig* internal_default_instance() {
    return reinterpret_cast<const RobotSimulatorConfig*>(
               &_RobotSimulatorConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(RobotSimulatorConfig* other);
  friend void swap(RobotSimulatorConfig& a, RobotSimulatorConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RobotSimulatorConfig* New() const final {
    return CreateMaybeMessage<RobotSimulatorConfig>(NULL);
  }

  RobotSimulatorConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RobotSimulatorConfig>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RobotSimulatorConfig& from);
  void MergeFrom(const RobotSimulatorConfig& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RobotSimulatorConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float speed_coeff = 1;
  void clear_speed_coeff();
  static const int kSpeedCoeffFieldNumber = 1;
  float speed_coeff() const;
  void set_speed_coeff(float value);

  // float wheels_spacing = 2;
  void clear_wheels_spacing();
  static const int kWheelsSpacingFieldNumber = 2;
  float wheels_spacing() const;
  void set_wheels_spacing(float value);

  // float encoders_spacing = 3;
  void clear_encoders_spacing();
  static const int kEncodersSpacingFieldNumber = 3;
  float encoders_spacing() const;
  void set_encoders_spacing(float value);

  // float encoders_counts_per_m = 4;
  void clear_encoders_counts_per_m();
  static const int kEncodersCountsPerMFieldNumber = 4;
  float encoders_counts_per_m() const;
  void set_encoders_counts_per_m(float value);

  // uint32 encoders_period = 5 [(.goldo.pb2_options.cpp_type) = UINT16];
  void clear_encoders_period();
  static const int kEncodersPeriodFieldNumber = 5;
  ::google::protobuf::uint32 encoders_period() const;
  void set_encoders_period(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:goldo.nucleo.robot_simulator.RobotSimulatorConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float speed_coeff_;
  float wheels_spacing_;
  float encoders_spacing_;
  float encoders_counts_per_m_;
  ::google::protobuf::uint32 encoders_period_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_goldo_2fnucleo_2frobot_5fsimulator_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RobotSimulatorConfig

// float speed_coeff = 1;
inline void RobotSimulatorConfig::clear_speed_coeff() {
  speed_coeff_ = 0;
}
inline float RobotSimulatorConfig::speed_coeff() const {
  // @@protoc_insertion_point(field_get:goldo.nucleo.robot_simulator.RobotSimulatorConfig.speed_coeff)
  return speed_coeff_;
}
inline void RobotSimulatorConfig::set_speed_coeff(float value) {
  
  speed_coeff_ = value;
  // @@protoc_insertion_point(field_set:goldo.nucleo.robot_simulator.RobotSimulatorConfig.speed_coeff)
}

// float wheels_spacing = 2;
inline void RobotSimulatorConfig::clear_wheels_spacing() {
  wheels_spacing_ = 0;
}
inline float RobotSimulatorConfig::wheels_spacing() const {
  // @@protoc_insertion_point(field_get:goldo.nucleo.robot_simulator.RobotSimulatorConfig.wheels_spacing)
  return wheels_spacing_;
}
inline void RobotSimulatorConfig::set_wheels_spacing(float value) {
  
  wheels_spacing_ = value;
  // @@protoc_insertion_point(field_set:goldo.nucleo.robot_simulator.RobotSimulatorConfig.wheels_spacing)
}

// float encoders_spacing = 3;
inline void RobotSimulatorConfig::clear_encoders_spacing() {
  encoders_spacing_ = 0;
}
inline float RobotSimulatorConfig::encoders_spacing() const {
  // @@protoc_insertion_point(field_get:goldo.nucleo.robot_simulator.RobotSimulatorConfig.encoders_spacing)
  return encoders_spacing_;
}
inline void RobotSimulatorConfig::set_encoders_spacing(float value) {
  
  encoders_spacing_ = value;
  // @@protoc_insertion_point(field_set:goldo.nucleo.robot_simulator.RobotSimulatorConfig.encoders_spacing)
}

// float encoders_counts_per_m = 4;
inline void RobotSimulatorConfig::clear_encoders_counts_per_m() {
  encoders_counts_per_m_ = 0;
}
inline float RobotSimulatorConfig::encoders_counts_per_m() const {
  // @@protoc_insertion_point(field_get:goldo.nucleo.robot_simulator.RobotSimulatorConfig.encoders_counts_per_m)
  return encoders_counts_per_m_;
}
inline void RobotSimulatorConfig::set_encoders_counts_per_m(float value) {
  
  encoders_counts_per_m_ = value;
  // @@protoc_insertion_point(field_set:goldo.nucleo.robot_simulator.RobotSimulatorConfig.encoders_counts_per_m)
}

// uint32 encoders_period = 5 [(.goldo.pb2_options.cpp_type) = UINT16];
inline void RobotSimulatorConfig::clear_encoders_period() {
  encoders_period_ = 0u;
}
inline ::google::protobuf::uint32 RobotSimulatorConfig::encoders_period() const {
  // @@protoc_insertion_point(field_get:goldo.nucleo.robot_simulator.RobotSimulatorConfig.encoders_period)
  return encoders_period_;
}
inline void RobotSimulatorConfig::set_encoders_period(::google::protobuf::uint32 value) {
  
  encoders_period_ = value;
  // @@protoc_insertion_point(field_set:goldo.nucleo.robot_simulator.RobotSimulatorConfig.encoders_period)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace robot_simulator
}  // namespace nucleo
}  // namespace goldo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_goldo_2fnucleo_2frobot_5fsimulator_2eproto
