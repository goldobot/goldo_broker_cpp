// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: goldo/nucleo/main.proto

#include "goldo/nucleo/main.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace goldo {
namespace nucleo {
class HeartbeatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Heartbeat>
      _instance;
} _Heartbeat_default_instance_;
class SensorsStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SensorsState>
      _instance;
} _SensorsState_default_instance_;
class WatchdogStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WatchdogState>
      _instance;
} _WatchdogState_default_instance_;
class FreeRTOSHeapStatsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FreeRTOSHeapStats>
      _instance;
} _FreeRTOSHeapStats_default_instance_;
}  // namespace nucleo
}  // namespace goldo
namespace protobuf_goldo_2fnucleo_2fmain_2eproto {
static void InitDefaultsHeartbeat() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::nucleo::_Heartbeat_default_instance_;
    new (ptr) ::goldo::nucleo::Heartbeat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::nucleo::Heartbeat::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Heartbeat =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHeartbeat}, {}};

static void InitDefaultsSensorsState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::nucleo::_SensorsState_default_instance_;
    new (ptr) ::goldo::nucleo::SensorsState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::nucleo::SensorsState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SensorsState =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSensorsState}, {}};

static void InitDefaultsWatchdogState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::nucleo::_WatchdogState_default_instance_;
    new (ptr) ::goldo::nucleo::WatchdogState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::nucleo::WatchdogState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WatchdogState =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWatchdogState}, {}};

static void InitDefaultsFreeRTOSHeapStats() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goldo::nucleo::_FreeRTOSHeapStats_default_instance_;
    new (ptr) ::goldo::nucleo::FreeRTOSHeapStats();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goldo::nucleo::FreeRTOSHeapStats::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FreeRTOSHeapStats =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFreeRTOSHeapStats}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Heartbeat.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SensorsState.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WatchdogState.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FreeRTOSHeapStats.base);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::Heartbeat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::Heartbeat, timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::SensorsState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::SensorsState, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::WatchdogState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::WatchdogState, main_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::WatchdogState, propulsion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::WatchdogState, fpga_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::WatchdogState, odrive_comm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::WatchdogState, dynamixels_comm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::WatchdogState, servos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::FreeRTOSHeapStats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::FreeRTOSHeapStats, xavailableheapspaceinbytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goldo::nucleo::FreeRTOSHeapStats, xsizeoflargestfreeblockinbytes_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::goldo::nucleo::Heartbeat)},
  { 6, -1, sizeof(::goldo::nucleo::SensorsState)},
  { 12, -1, sizeof(::goldo::nucleo::WatchdogState)},
  { 23, -1, sizeof(::goldo::nucleo::FreeRTOSHeapStats)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::nucleo::_Heartbeat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::nucleo::_SensorsState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::nucleo::_WatchdogState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goldo::nucleo::_FreeRTOSHeapStats_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "goldo/nucleo/main.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\027goldo/nucleo/main.proto\022\014goldo.nucleo\""
      "\036\n\tHeartbeat\022\021\n\ttimestamp\030\001 \001(\007\"\035\n\014Senso"
      "rsState\022\r\n\005state\030\001 \001(\007\"}\n\rWatchdogState\022"
      "\014\n\004main\030\001 \001(\010\022\022\n\npropulsion\030\002 \001(\010\022\014\n\004fpg"
      "a\030\003 \001(\010\022\023\n\013odrive_comm\030\004 \001(\010\022\027\n\017dynamixe"
      "ls_comm\030\005 \001(\010\022\016\n\006servos\030\006 \001(\010\"_\n\021FreeRTO"
      "SHeapStats\022\"\n\032xAvailableHeapSpaceInBytes"
      "\030\001 \001(\007\022&\n\036xSizeOfLargestFreeBlockInBytes"
      "\030\002 \001(\007b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 334);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "goldo/nucleo/main.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_goldo_2fnucleo_2fmain_2eproto
namespace goldo {
namespace nucleo {

// ===================================================================

void Heartbeat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Heartbeat::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Heartbeat::Heartbeat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fnucleo_2fmain_2eproto::scc_info_Heartbeat.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.nucleo.Heartbeat)
}
Heartbeat::Heartbeat(const Heartbeat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:goldo.nucleo.Heartbeat)
}

void Heartbeat::SharedCtor() {
  timestamp_ = 0u;
}

Heartbeat::~Heartbeat() {
  // @@protoc_insertion_point(destructor:goldo.nucleo.Heartbeat)
  SharedDtor();
}

void Heartbeat::SharedDtor() {
}

void Heartbeat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Heartbeat::descriptor() {
  ::protobuf_goldo_2fnucleo_2fmain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2fmain_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Heartbeat& Heartbeat::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fnucleo_2fmain_2eproto::scc_info_Heartbeat.base);
  return *internal_default_instance();
}


void Heartbeat::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.nucleo.Heartbeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  timestamp_ = 0u;
  _internal_metadata_.Clear();
}

bool Heartbeat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.nucleo.Heartbeat)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed32 timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.nucleo.Heartbeat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.nucleo.Heartbeat)
  return false;
#undef DO_
}

void Heartbeat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.nucleo.Heartbeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 timestamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.nucleo.Heartbeat)
}

::google::protobuf::uint8* Heartbeat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.nucleo.Heartbeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 timestamp = 1;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.nucleo.Heartbeat)
  return target;
}

size_t Heartbeat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.nucleo.Heartbeat)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // fixed32 timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Heartbeat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.nucleo.Heartbeat)
  GOOGLE_DCHECK_NE(&from, this);
  const Heartbeat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Heartbeat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.nucleo.Heartbeat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.nucleo.Heartbeat)
    MergeFrom(*source);
  }
}

void Heartbeat::MergeFrom(const Heartbeat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.nucleo.Heartbeat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void Heartbeat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.nucleo.Heartbeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Heartbeat::CopyFrom(const Heartbeat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.nucleo.Heartbeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Heartbeat::IsInitialized() const {
  return true;
}

void Heartbeat::Swap(Heartbeat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Heartbeat::InternalSwap(Heartbeat* other) {
  using std::swap;
  swap(timestamp_, other->timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Heartbeat::GetMetadata() const {
  protobuf_goldo_2fnucleo_2fmain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2fmain_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SensorsState::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SensorsState::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SensorsState::SensorsState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fnucleo_2fmain_2eproto::scc_info_SensorsState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.nucleo.SensorsState)
}
SensorsState::SensorsState(const SensorsState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  state_ = from.state_;
  // @@protoc_insertion_point(copy_constructor:goldo.nucleo.SensorsState)
}

void SensorsState::SharedCtor() {
  state_ = 0u;
}

SensorsState::~SensorsState() {
  // @@protoc_insertion_point(destructor:goldo.nucleo.SensorsState)
  SharedDtor();
}

void SensorsState::SharedDtor() {
}

void SensorsState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SensorsState::descriptor() {
  ::protobuf_goldo_2fnucleo_2fmain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2fmain_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SensorsState& SensorsState::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fnucleo_2fmain_2eproto::scc_info_SensorsState.base);
  return *internal_default_instance();
}


void SensorsState::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.nucleo.SensorsState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  state_ = 0u;
  _internal_metadata_.Clear();
}

bool SensorsState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.nucleo.SensorsState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed32 state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.nucleo.SensorsState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.nucleo.SensorsState)
  return false;
#undef DO_
}

void SensorsState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.nucleo.SensorsState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 state = 1;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.nucleo.SensorsState)
}

::google::protobuf::uint8* SensorsState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.nucleo.SensorsState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 state = 1;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.nucleo.SensorsState)
  return target;
}

size_t SensorsState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.nucleo.SensorsState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // fixed32 state = 1;
  if (this->state() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SensorsState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.nucleo.SensorsState)
  GOOGLE_DCHECK_NE(&from, this);
  const SensorsState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SensorsState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.nucleo.SensorsState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.nucleo.SensorsState)
    MergeFrom(*source);
  }
}

void SensorsState::MergeFrom(const SensorsState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.nucleo.SensorsState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state() != 0) {
    set_state(from.state());
  }
}

void SensorsState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.nucleo.SensorsState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SensorsState::CopyFrom(const SensorsState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.nucleo.SensorsState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SensorsState::IsInitialized() const {
  return true;
}

void SensorsState::Swap(SensorsState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SensorsState::InternalSwap(SensorsState* other) {
  using std::swap;
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SensorsState::GetMetadata() const {
  protobuf_goldo_2fnucleo_2fmain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2fmain_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WatchdogState::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WatchdogState::kMainFieldNumber;
const int WatchdogState::kPropulsionFieldNumber;
const int WatchdogState::kFpgaFieldNumber;
const int WatchdogState::kOdriveCommFieldNumber;
const int WatchdogState::kDynamixelsCommFieldNumber;
const int WatchdogState::kServosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WatchdogState::WatchdogState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fnucleo_2fmain_2eproto::scc_info_WatchdogState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.nucleo.WatchdogState)
}
WatchdogState::WatchdogState(const WatchdogState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&main_, &from.main_,
    static_cast<size_t>(reinterpret_cast<char*>(&servos_) -
    reinterpret_cast<char*>(&main_)) + sizeof(servos_));
  // @@protoc_insertion_point(copy_constructor:goldo.nucleo.WatchdogState)
}

void WatchdogState::SharedCtor() {
  ::memset(&main_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&servos_) -
      reinterpret_cast<char*>(&main_)) + sizeof(servos_));
}

WatchdogState::~WatchdogState() {
  // @@protoc_insertion_point(destructor:goldo.nucleo.WatchdogState)
  SharedDtor();
}

void WatchdogState::SharedDtor() {
}

void WatchdogState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WatchdogState::descriptor() {
  ::protobuf_goldo_2fnucleo_2fmain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2fmain_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WatchdogState& WatchdogState::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fnucleo_2fmain_2eproto::scc_info_WatchdogState.base);
  return *internal_default_instance();
}


void WatchdogState::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.nucleo.WatchdogState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&main_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&servos_) -
      reinterpret_cast<char*>(&main_)) + sizeof(servos_));
  _internal_metadata_.Clear();
}

bool WatchdogState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.nucleo.WatchdogState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool main = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &main_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool propulsion = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &propulsion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool fpga = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &fpga_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool odrive_comm = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &odrive_comm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool dynamixels_comm = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &dynamixels_comm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool servos = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &servos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.nucleo.WatchdogState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.nucleo.WatchdogState)
  return false;
#undef DO_
}

void WatchdogState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.nucleo.WatchdogState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool main = 1;
  if (this->main() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->main(), output);
  }

  // bool propulsion = 2;
  if (this->propulsion() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->propulsion(), output);
  }

  // bool fpga = 3;
  if (this->fpga() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->fpga(), output);
  }

  // bool odrive_comm = 4;
  if (this->odrive_comm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->odrive_comm(), output);
  }

  // bool dynamixels_comm = 5;
  if (this->dynamixels_comm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->dynamixels_comm(), output);
  }

  // bool servos = 6;
  if (this->servos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->servos(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.nucleo.WatchdogState)
}

::google::protobuf::uint8* WatchdogState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.nucleo.WatchdogState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool main = 1;
  if (this->main() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->main(), target);
  }

  // bool propulsion = 2;
  if (this->propulsion() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->propulsion(), target);
  }

  // bool fpga = 3;
  if (this->fpga() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->fpga(), target);
  }

  // bool odrive_comm = 4;
  if (this->odrive_comm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->odrive_comm(), target);
  }

  // bool dynamixels_comm = 5;
  if (this->dynamixels_comm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->dynamixels_comm(), target);
  }

  // bool servos = 6;
  if (this->servos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->servos(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.nucleo.WatchdogState)
  return target;
}

size_t WatchdogState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.nucleo.WatchdogState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool main = 1;
  if (this->main() != 0) {
    total_size += 1 + 1;
  }

  // bool propulsion = 2;
  if (this->propulsion() != 0) {
    total_size += 1 + 1;
  }

  // bool fpga = 3;
  if (this->fpga() != 0) {
    total_size += 1 + 1;
  }

  // bool odrive_comm = 4;
  if (this->odrive_comm() != 0) {
    total_size += 1 + 1;
  }

  // bool dynamixels_comm = 5;
  if (this->dynamixels_comm() != 0) {
    total_size += 1 + 1;
  }

  // bool servos = 6;
  if (this->servos() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WatchdogState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.nucleo.WatchdogState)
  GOOGLE_DCHECK_NE(&from, this);
  const WatchdogState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WatchdogState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.nucleo.WatchdogState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.nucleo.WatchdogState)
    MergeFrom(*source);
  }
}

void WatchdogState::MergeFrom(const WatchdogState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.nucleo.WatchdogState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.main() != 0) {
    set_main(from.main());
  }
  if (from.propulsion() != 0) {
    set_propulsion(from.propulsion());
  }
  if (from.fpga() != 0) {
    set_fpga(from.fpga());
  }
  if (from.odrive_comm() != 0) {
    set_odrive_comm(from.odrive_comm());
  }
  if (from.dynamixels_comm() != 0) {
    set_dynamixels_comm(from.dynamixels_comm());
  }
  if (from.servos() != 0) {
    set_servos(from.servos());
  }
}

void WatchdogState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.nucleo.WatchdogState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WatchdogState::CopyFrom(const WatchdogState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.nucleo.WatchdogState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WatchdogState::IsInitialized() const {
  return true;
}

void WatchdogState::Swap(WatchdogState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WatchdogState::InternalSwap(WatchdogState* other) {
  using std::swap;
  swap(main_, other->main_);
  swap(propulsion_, other->propulsion_);
  swap(fpga_, other->fpga_);
  swap(odrive_comm_, other->odrive_comm_);
  swap(dynamixels_comm_, other->dynamixels_comm_);
  swap(servos_, other->servos_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WatchdogState::GetMetadata() const {
  protobuf_goldo_2fnucleo_2fmain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2fmain_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FreeRTOSHeapStats::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FreeRTOSHeapStats::kXAvailableHeapSpaceInBytesFieldNumber;
const int FreeRTOSHeapStats::kXSizeOfLargestFreeBlockInBytesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FreeRTOSHeapStats::FreeRTOSHeapStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_goldo_2fnucleo_2fmain_2eproto::scc_info_FreeRTOSHeapStats.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goldo.nucleo.FreeRTOSHeapStats)
}
FreeRTOSHeapStats::FreeRTOSHeapStats(const FreeRTOSHeapStats& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&xavailableheapspaceinbytes_, &from.xavailableheapspaceinbytes_,
    static_cast<size_t>(reinterpret_cast<char*>(&xsizeoflargestfreeblockinbytes_) -
    reinterpret_cast<char*>(&xavailableheapspaceinbytes_)) + sizeof(xsizeoflargestfreeblockinbytes_));
  // @@protoc_insertion_point(copy_constructor:goldo.nucleo.FreeRTOSHeapStats)
}

void FreeRTOSHeapStats::SharedCtor() {
  ::memset(&xavailableheapspaceinbytes_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&xsizeoflargestfreeblockinbytes_) -
      reinterpret_cast<char*>(&xavailableheapspaceinbytes_)) + sizeof(xsizeoflargestfreeblockinbytes_));
}

FreeRTOSHeapStats::~FreeRTOSHeapStats() {
  // @@protoc_insertion_point(destructor:goldo.nucleo.FreeRTOSHeapStats)
  SharedDtor();
}

void FreeRTOSHeapStats::SharedDtor() {
}

void FreeRTOSHeapStats::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FreeRTOSHeapStats::descriptor() {
  ::protobuf_goldo_2fnucleo_2fmain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2fmain_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FreeRTOSHeapStats& FreeRTOSHeapStats::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_goldo_2fnucleo_2fmain_2eproto::scc_info_FreeRTOSHeapStats.base);
  return *internal_default_instance();
}


void FreeRTOSHeapStats::Clear() {
// @@protoc_insertion_point(message_clear_start:goldo.nucleo.FreeRTOSHeapStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&xavailableheapspaceinbytes_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&xsizeoflargestfreeblockinbytes_) -
      reinterpret_cast<char*>(&xavailableheapspaceinbytes_)) + sizeof(xsizeoflargestfreeblockinbytes_));
  _internal_metadata_.Clear();
}

bool FreeRTOSHeapStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goldo.nucleo.FreeRTOSHeapStats)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed32 xAvailableHeapSpaceInBytes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &xavailableheapspaceinbytes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 xSizeOfLargestFreeBlockInBytes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &xsizeoflargestfreeblockinbytes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goldo.nucleo.FreeRTOSHeapStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goldo.nucleo.FreeRTOSHeapStats)
  return false;
#undef DO_
}

void FreeRTOSHeapStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goldo.nucleo.FreeRTOSHeapStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 xAvailableHeapSpaceInBytes = 1;
  if (this->xavailableheapspaceinbytes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->xavailableheapspaceinbytes(), output);
  }

  // fixed32 xSizeOfLargestFreeBlockInBytes = 2;
  if (this->xsizeoflargestfreeblockinbytes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(2, this->xsizeoflargestfreeblockinbytes(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goldo.nucleo.FreeRTOSHeapStats)
}

::google::protobuf::uint8* FreeRTOSHeapStats::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goldo.nucleo.FreeRTOSHeapStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 xAvailableHeapSpaceInBytes = 1;
  if (this->xavailableheapspaceinbytes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->xavailableheapspaceinbytes(), target);
  }

  // fixed32 xSizeOfLargestFreeBlockInBytes = 2;
  if (this->xsizeoflargestfreeblockinbytes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(2, this->xsizeoflargestfreeblockinbytes(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goldo.nucleo.FreeRTOSHeapStats)
  return target;
}

size_t FreeRTOSHeapStats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goldo.nucleo.FreeRTOSHeapStats)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // fixed32 xAvailableHeapSpaceInBytes = 1;
  if (this->xavailableheapspaceinbytes() != 0) {
    total_size += 1 + 4;
  }

  // fixed32 xSizeOfLargestFreeBlockInBytes = 2;
  if (this->xsizeoflargestfreeblockinbytes() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FreeRTOSHeapStats::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goldo.nucleo.FreeRTOSHeapStats)
  GOOGLE_DCHECK_NE(&from, this);
  const FreeRTOSHeapStats* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FreeRTOSHeapStats>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goldo.nucleo.FreeRTOSHeapStats)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goldo.nucleo.FreeRTOSHeapStats)
    MergeFrom(*source);
  }
}

void FreeRTOSHeapStats::MergeFrom(const FreeRTOSHeapStats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goldo.nucleo.FreeRTOSHeapStats)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xavailableheapspaceinbytes() != 0) {
    set_xavailableheapspaceinbytes(from.xavailableheapspaceinbytes());
  }
  if (from.xsizeoflargestfreeblockinbytes() != 0) {
    set_xsizeoflargestfreeblockinbytes(from.xsizeoflargestfreeblockinbytes());
  }
}

void FreeRTOSHeapStats::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goldo.nucleo.FreeRTOSHeapStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FreeRTOSHeapStats::CopyFrom(const FreeRTOSHeapStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goldo.nucleo.FreeRTOSHeapStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FreeRTOSHeapStats::IsInitialized() const {
  return true;
}

void FreeRTOSHeapStats::Swap(FreeRTOSHeapStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FreeRTOSHeapStats::InternalSwap(FreeRTOSHeapStats* other) {
  using std::swap;
  swap(xavailableheapspaceinbytes_, other->xavailableheapspaceinbytes_);
  swap(xsizeoflargestfreeblockinbytes_, other->xsizeoflargestfreeblockinbytes_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FreeRTOSHeapStats::GetMetadata() const {
  protobuf_goldo_2fnucleo_2fmain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_goldo_2fnucleo_2fmain_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace nucleo
}  // namespace goldo
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::nucleo::Heartbeat* Arena::CreateMaybeMessage< ::goldo::nucleo::Heartbeat >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::nucleo::Heartbeat >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::nucleo::SensorsState* Arena::CreateMaybeMessage< ::goldo::nucleo::SensorsState >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::nucleo::SensorsState >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::nucleo::WatchdogState* Arena::CreateMaybeMessage< ::goldo::nucleo::WatchdogState >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::nucleo::WatchdogState >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goldo::nucleo::FreeRTOSHeapStats* Arena::CreateMaybeMessage< ::goldo::nucleo::FreeRTOSHeapStats >(Arena* arena) {
  return Arena::CreateInternal< ::goldo::nucleo::FreeRTOSHeapStats >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
